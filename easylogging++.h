





<!DOCTYPE html>
<html lang="en" data-color-mode="auto" data-light-theme="light" data-dark-theme="dark" >
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">
  <link rel="preconnect" href="https://github.githubassets.com" crossorigin>
  <link rel="preconnect" href="https://avatars.githubusercontent.com">



  <link crossorigin="anonymous" media="all" integrity="sha512-IVVa++hW3DBYJnNsmMMiUwt96BJ1mjUpGNDRWeui5BY1iA04E58M5NujgomnZU9R9DB+H99IlE7a+9b5XlO25g==" rel="stylesheet" href="https://github.githubassets.com/assets/light-21555afbe856.css" /><link crossorigin="anonymous" media="all" integrity="sha512-1KkMNn8M/al/dtzBLupRwkIOgnA9MWkm8oxS+solP87jByEvY/g4BmoxLihRogKcX1obPnf4Yp7dI0ZTWO+ljg==" rel="stylesheet" href="https://github.githubassets.com/assets/dark-d4a90c367f0c.css" /><link data-color-theme="dark_dimmed" crossorigin="anonymous" media="all" integrity="sha512-cZa7DZqvMBwD236uzEunO/G1dvw8/QftyT2UtLWKQFEy0z0eq0R5WPwqVME+3NSZG1YaLJAaIqtU+m0zWf/6SQ==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_dimmed-7196bb0d9aaf.css" /><link data-color-theme="dark_high_contrast" crossorigin="anonymous" media="all" integrity="sha512-WVoKqJ4y1nLsdNH4RkRT5qrM9+n9RFe1RHSiTnQkBf5TSZkJEc9GpLpTIS7T15EQaUQBJ8BwmKvwFPVqfpTEIQ==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_high_contrast-595a0aa89e32.css" /><link data-color-theme="dark_colorblind" crossorigin="anonymous" media="all" integrity="sha512-XpAMBMSRZ6RTXgepS8LjKiOeNK3BilRbv8qEiA/M3m+Q4GoqxtHedOI5BAZRikCzfBL4KWYvVzYZSZ8Gp/UnUg==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_colorblind-5e900c04c491.css" /><link data-color-theme="light_colorblind" crossorigin="anonymous" media="all" integrity="sha512-3HF2HZ4LgEIQm77yOzoeR20CX1n2cUQlcywscqF4s+5iplolajiHV7E5ranBwkX65jN9TNciHEVSYebQ+8xxEw==" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_colorblind-dc71761d9e0b.css" /><link data-color-theme="light_high_contrast" crossorigin="anonymous" media="all" integrity="sha512-+J8j3T0kbK9/sL3zbkCfPtgYcRD4qQfRbT6xnfOrOTjvz4zhr0M7AXPuE642PpaxGhHs1t77cTtieW9hI2K6Gw==" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_high_contrast-f89f23dd3d24.css" /><link data-color-theme="light_tritanopia" crossorigin="anonymous" media="all" integrity="sha512-AQeAx5wHQAXNf0DmkvVlHYwA3f6BkxunWTI0GGaRN57GqD+H9tW8RKIKlopLS0qGaC54seFsPc601GDlqIuuHg==" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_tritanopia-010780c79c07.css" /><link data-color-theme="dark_tritanopia" crossorigin="anonymous" media="all" integrity="sha512-+u5pmgAE0T03d/yI6Ha0NWwz6Pk0W6S6WEfIt8veDVdK8NTjcMbZmQB9XUCkDlrBoAKkABva8HuGJ+SzEpV1Uw==" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_tritanopia-faee699a0004.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-qKqJ3TXhYUvsBfRyANPrunADQU1u6mR+U3qfBcAnp7qTtgv0HOUuIN3nCEdnOWt1cHTYzca8iZws+Wxg+bw8dQ==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-a8aa89dd35e1.css" />
    <link crossorigin="anonymous" media="all" integrity="sha512-kICLwnfuRXT3ZJudcca1LSBktWt3KPVhxPtWkdSA2LPwJHdBI3rARFSo/Rv/B94F/KVC3eSghCekD21T/4pbtw==" rel="stylesheet" href="https://github.githubassets.com/assets/behaviors-90808bc277ee.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-7IJmKQ+UuHbW0jikn65NK7GPXj4nX7QVv6KbQEhEFS1mypjAOdJ9IvwVUrcrthT1CES6o6xbG8RnDiBlY/rbDQ==" rel="stylesheet" href="https://github.githubassets.com/assets/blob-ec8266290f94.css" />
<link crossorigin="anonymous" media="all" integrity="sha512-b+o0BRKWHyd+gFVhFHlhj/99KsVmD0DLisx7+Wxwu3sufN9uhK2xgoaYGaNNbZAvOZY+r1s4ddFo482Dw7W/zg==" rel="stylesheet" href="https://github.githubassets.com/assets/github-6fea34051296.css" />

    <meta name="optimizely-datafile" content="{&quot;groups&quot;: [], &quot;environmentKey&quot;: &quot;production&quot;, &quot;rollouts&quot;: [], &quot;typedAudiences&quot;: [], &quot;projectId&quot;: &quot;16737760170&quot;, &quot;variables&quot;: [], &quot;featureFlags&quot;: [], &quot;experiments&quot;: [{&quot;status&quot;: &quot;Running&quot;, &quot;audienceIds&quot;: [], &quot;variations&quot;: [{&quot;variables&quot;: [], &quot;id&quot;: &quot;20667381018&quot;, &quot;key&quot;: &quot;control&quot;}, {&quot;variables&quot;: [], &quot;id&quot;: &quot;20680930759&quot;, &quot;key&quot;: &quot;treatment&quot;}], &quot;id&quot;: &quot;20652570897&quot;, &quot;key&quot;: &quot;project_genesis&quot;, &quot;layerId&quot;: &quot;20672300363&quot;, &quot;trafficAllocation&quot;: [{&quot;entityId&quot;: &quot;20667381018&quot;, &quot;endOfRange&quot;: 5000}, {&quot;entityId&quot;: &quot;20680930759&quot;, &quot;endOfRange&quot;: 10000}], &quot;forcedVariations&quot;: {&quot;83356e17066d336d1803024138ecb683&quot;: &quot;treatment&quot;, &quot;18e31c8a9b2271332466133162a4aa0d&quot;: &quot;treatment&quot;, &quot;10f8ab3fbc5ebe989a36a05f79d48f32&quot;: &quot;treatment&quot;, &quot;1686089f6d540cd2deeaec60ee43ecf7&quot;: &quot;treatment&quot;}}, {&quot;status&quot;: &quot;Running&quot;, &quot;audienceIds&quot;: [], &quot;variations&quot;: [{&quot;variables&quot;: [], &quot;id&quot;: &quot;21440190065&quot;, &quot;key&quot;: &quot;control_b&quot;}, {&quot;variables&quot;: [], &quot;id&quot;: &quot;21439580309&quot;, &quot;key&quot;: &quot;treatment_d&quot;}], &quot;id&quot;: &quot;21435481980&quot;, &quot;key&quot;: &quot;_260_contact_sales_redesign&quot;, &quot;layerId&quot;: &quot;21431681200&quot;, &quot;trafficAllocation&quot;: [{&quot;entityId&quot;: &quot;21440190065&quot;, &quot;endOfRange&quot;: 5000}, {&quot;entityId&quot;: &quot;21439580309&quot;, &quot;endOfRange&quot;: 10000}], &quot;forcedVariations&quot;: {}}, {&quot;status&quot;: &quot;Running&quot;, &quot;audienceIds&quot;: [], &quot;variations&quot;: [{&quot;variables&quot;: [], &quot;id&quot;: &quot;21427950901&quot;, &quot;key&quot;: &quot;control&quot;}, {&quot;variables&quot;: [], &quot;id&quot;: &quot;21429710665&quot;, &quot;key&quot;: &quot;beginner&quot;}, {&quot;variables&quot;: [], &quot;id&quot;: &quot;21437291543&quot;, &quot;key&quot;: &quot;upstart&quot;}], &quot;id&quot;: &quot;21445030708&quot;, &quot;key&quot;: &quot;_259_zero_user_dashboard&quot;, &quot;layerId&quot;: &quot;21434011841&quot;, &quot;trafficAllocation&quot;: [{&quot;entityId&quot;: &quot;21427950901&quot;, &quot;endOfRange&quot;: 3334}, {&quot;entityId&quot;: &quot;21427950901&quot;, &quot;endOfRange&quot;: 5000}, {&quot;entityId&quot;: &quot;21427950901&quot;, &quot;endOfRange&quot;: 8333}, {&quot;entityId&quot;: &quot;21427950901&quot;, &quot;endOfRange&quot;: 10000}], &quot;forcedVariations&quot;: {&quot;3c64268131793aa297119a343c19e345&quot;: &quot;beginner&quot;, &quot;95b24126db31ea8693c0fe5ea9f53b65&quot;: &quot;beginner&quot;, &quot;086e2abe64e9101112af53b95d2d90b9&quot;: &quot;upstart&quot;, &quot;bae688df9d297afac98e2d254e912ada&quot;: &quot;control&quot;, &quot;6c2cfda7c41396fcc31a4db759a42b94&quot;: &quot;beginner&quot;, &quot;16ed2b4ff7de02663b7c606309695916&quot;: &quot;control&quot;, &quot;1971768911.1635962195&quot;: &quot;beginner&quot;, &quot;830bf802470ec6c9c5800c99d8e57445&quot;: &quot;beginner&quot;}}], &quot;version&quot;: &quot;4&quot;, &quot;audiences&quot;: [{&quot;conditions&quot;: &quot;[\&quot;or\&quot;, {\&quot;match\&quot;: \&quot;exact\&quot;, \&quot;name\&quot;: \&quot;$opt_dummy_attribute\&quot;, \&quot;type\&quot;: \&quot;custom_attribute\&quot;, \&quot;value\&quot;: \&quot;$opt_dummy_value\&quot;}]&quot;, &quot;id&quot;: &quot;$opt_dummy_audience&quot;, &quot;name&quot;: &quot;Optimizely-Generated Audience for Backwards Compatibility&quot;}], &quot;anonymizeIP&quot;: true, &quot;sdkKey&quot;: &quot;WTc6awnGuYDdG98CYRban&quot;, &quot;attributes&quot;: [{&quot;id&quot;: &quot;16822470375&quot;, &quot;key&quot;: &quot;user_id&quot;}, {&quot;id&quot;: &quot;17143601254&quot;, &quot;key&quot;: &quot;spammy&quot;}, {&quot;id&quot;: &quot;18175660309&quot;, &quot;key&quot;: &quot;organization_plan&quot;}, {&quot;id&quot;: &quot;18813001570&quot;, &quot;key&quot;: &quot;is_logged_in&quot;}, {&quot;id&quot;: &quot;19073851829&quot;, &quot;key&quot;: &quot;geo&quot;}, {&quot;id&quot;: &quot;20175462351&quot;, &quot;key&quot;: &quot;requestedCurrency&quot;}, {&quot;id&quot;: &quot;20785470195&quot;, &quot;key&quot;: &quot;country_code&quot;}], &quot;botFiltering&quot;: false, &quot;accountId&quot;: &quot;16737760170&quot;, &quot;events&quot;: [{&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;17911811441&quot;, &quot;key&quot;: &quot;hydro_click.dashboard.teacher_toolbox_cta&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18124116703&quot;, &quot;key&quot;: &quot;submit.organizations.complete_sign_up&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18145892387&quot;, &quot;key&quot;: &quot;no_metric.tracked_outside_of_optimizely&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18178755568&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.add_repo&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18180553241&quot;, &quot;key&quot;: &quot;submit.repository_imports.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18186103728&quot;, &quot;key&quot;: &quot;click.help.learn_more_about_repository_creation&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18188530140&quot;, &quot;key&quot;: &quot;test_event&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18191963644&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.transfer_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18195612788&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.import_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18210945499&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.invite_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18211063248&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.create_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18215721889&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.update_profile&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18224360785&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.dismiss&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18234832286&quot;, &quot;key&quot;: &quot;submit.organization_activation.complete&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18252392383&quot;, &quot;key&quot;: &quot;submit.org_repository.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18257551537&quot;, &quot;key&quot;: &quot;submit.org_member_invitation.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18259522260&quot;, &quot;key&quot;: &quot;submit.organization_profile.update&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18564603625&quot;, &quot;key&quot;: &quot;view.classroom_select_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18568612016&quot;, &quot;key&quot;: &quot;click.classroom_sign_in_click&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18572592540&quot;, &quot;key&quot;: &quot;view.classroom_name&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18574203855&quot;, &quot;key&quot;: &quot;click.classroom_create_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18582053415&quot;, &quot;key&quot;: &quot;click.classroom_select_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18589463420&quot;, &quot;key&quot;: &quot;click.classroom_create_classroom&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18591323364&quot;, &quot;key&quot;: &quot;click.classroom_create_first_classroom&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18591652321&quot;, &quot;key&quot;: &quot;click.classroom_grant_access&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18607131425&quot;, &quot;key&quot;: &quot;view.classroom_creation&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18831680583&quot;, &quot;key&quot;: &quot;upgrade_account_plan&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19064064515&quot;, &quot;key&quot;: &quot;click.signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19075373687&quot;, &quot;key&quot;: &quot;click.view_account_billing_page&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19077355841&quot;, &quot;key&quot;: &quot;click.dismiss_signup_prompt&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19079713938&quot;, &quot;key&quot;: &quot;click.contact_sales&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19120963070&quot;, &quot;key&quot;: &quot;click.compare_account_plans&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19151690317&quot;, &quot;key&quot;: &quot;click.upgrade_account_cta&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19424193129&quot;, &quot;key&quot;: &quot;click.open_account_switcher&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19520330825&quot;, &quot;key&quot;: &quot;click.visit_account_profile&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19540970635&quot;, &quot;key&quot;: &quot;click.switch_account_context&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19730198868&quot;, &quot;key&quot;: &quot;submit.homepage_signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19820830627&quot;, &quot;key&quot;: &quot;click.homepage_signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19988571001&quot;, &quot;key&quot;: &quot;click.create_enterprise_trial&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20036538294&quot;, &quot;key&quot;: &quot;click.create_organization_team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20040653299&quot;, &quot;key&quot;: &quot;click.input_enterprise_trial_form&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20062030003&quot;, &quot;key&quot;: &quot;click.continue_with_team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20068947153&quot;, &quot;key&quot;: &quot;click.create_organization_free&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20086636658&quot;, &quot;key&quot;: &quot;click.signup_continue.username&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20091648988&quot;, &quot;key&quot;: &quot;click.signup_continue.create_account&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20103637615&quot;, &quot;key&quot;: &quot;click.signup_continue.email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20111574253&quot;, &quot;key&quot;: &quot;click.signup_continue.password&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20120044111&quot;, &quot;key&quot;: &quot;view.pricing_page&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20152062109&quot;, &quot;key&quot;: &quot;submit.create_account&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20165800992&quot;, &quot;key&quot;: &quot;submit.upgrade_payment_form&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20171520319&quot;, &quot;key&quot;: &quot;submit.create_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20222645674&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.discuss_your_needs&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20227443657&quot;, &quot;key&quot;: &quot;submit.verify_primary_user_email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20234607160&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.try_enterprise&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20238175784&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20239847212&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.continue_free&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20251097193&quot;, &quot;key&quot;: &quot;recommended_plan&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20438619534&quot;, &quot;key&quot;: &quot;click.pricing_calculator.1_member&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20456699683&quot;, &quot;key&quot;: &quot;click.pricing_calculator.15_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20467868331&quot;, &quot;key&quot;: &quot;click.pricing_calculator.10_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20476267432&quot;, &quot;key&quot;: &quot;click.trial_days_remaining&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20476357660&quot;, &quot;key&quot;: &quot;click.discover_feature&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20479287901&quot;, &quot;key&quot;: &quot;click.pricing_calculator.custom_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20481107083&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.apply_teacher_benefits&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20483089392&quot;, &quot;key&quot;: &quot;click.pricing_calculator.5_members&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20484283944&quot;, &quot;key&quot;: &quot;click.onboarding_task&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20484996281&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.apply_student_benefits&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20486713726&quot;, &quot;key&quot;: &quot;click.onboarding_task_breadcrumb&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20490791319&quot;, &quot;key&quot;: &quot;click.upgrade_to_enterprise&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20491786766&quot;, &quot;key&quot;: &quot;click.talk_to_us&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20494144087&quot;, &quot;key&quot;: &quot;click.dismiss_enterprise_trial&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20499722759&quot;, &quot;key&quot;: &quot;completed_all_tasks&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20500710104&quot;, &quot;key&quot;: &quot;completed_onboarding_tasks&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20513160672&quot;, &quot;key&quot;: &quot;click.read_doc&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20516196762&quot;, &quot;key&quot;: &quot;actions_enabled&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20518980986&quot;, &quot;key&quot;: &quot;click.dismiss_trial_banner&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20535446721&quot;, &quot;key&quot;: &quot;click.issue_actions_prompt.dismiss_prompt&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20557002247&quot;, &quot;key&quot;: &quot;click.issue_actions_prompt.setup_workflow&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20595070227&quot;, &quot;key&quot;: &quot;click.pull_request_setup_workflow&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20626600314&quot;, &quot;key&quot;: &quot;click.seats_input&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20642310305&quot;, &quot;key&quot;: &quot;click.decrease_seats_number&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20662990045&quot;, &quot;key&quot;: &quot;click.increase_seats_number&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20679620969&quot;, &quot;key&quot;: &quot;click.public_product_roadmap&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20761240940&quot;, &quot;key&quot;: &quot;click.dismiss_survey_banner&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20767210721&quot;, &quot;key&quot;: &quot;click.take_survey&quot;}, {&quot;experimentIds&quot;: [&quot;20652570897&quot;], &quot;id&quot;: &quot;20795281201&quot;, &quot;key&quot;: &quot;click.archive_list&quot;}, {&quot;experimentIds&quot;: [&quot;21435481980&quot;], &quot;id&quot;: &quot;20966790249&quot;, &quot;key&quot;: &quot;contact_sales.submit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20996500333&quot;, &quot;key&quot;: &quot;contact_sales.existing_customer&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20996890162&quot;, &quot;key&quot;: &quot;contact_sales.blank_message_field&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21000470317&quot;, &quot;key&quot;: &quot;contact_sales.personal_email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21002790172&quot;, &quot;key&quot;: &quot;contact_sales.blank_phone_field&quot;}, {&quot;experimentIds&quot;: [&quot;21445030708&quot;], &quot;id&quot;: &quot;21354412592&quot;, &quot;key&quot;: &quot;click.dismiss_create_readme&quot;}, {&quot;experimentIds&quot;: [&quot;21445030708&quot;], &quot;id&quot;: &quot;21366102546&quot;, &quot;key&quot;: &quot;click.dismiss_zero_user_content&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21370252505&quot;, &quot;key&quot;: &quot;account_did_downgrade&quot;}, {&quot;experimentIds&quot;: [&quot;21445030708&quot;], &quot;id&quot;: &quot;21370840408&quot;, &quot;key&quot;: &quot;click.cta_create_readme&quot;}, {&quot;experimentIds&quot;: [&quot;21445030708&quot;], &quot;id&quot;: &quot;21375451068&quot;, &quot;key&quot;: &quot;click.cta_create_new_repository&quot;}, {&quot;experimentIds&quot;: [&quot;21445030708&quot;], &quot;id&quot;: &quot;21385390948&quot;, &quot;key&quot;: &quot;click.zero_user_content&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21467712175&quot;, &quot;key&quot;: &quot;click.downgrade_keep&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21484112202&quot;, &quot;key&quot;: &quot;click.downgrade&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21495292213&quot;, &quot;key&quot;: &quot;click.downgrade_survey_exit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21508241468&quot;, &quot;key&quot;: &quot;click.downgrade_survey_submit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21512030356&quot;, &quot;key&quot;: &quot;click.downgrade_support&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21539090022&quot;, &quot;key&quot;: &quot;click.downgrade_exit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21543640644&quot;, &quot;key&quot;: &quot;click_fetch_upstream&quot;}], &quot;revision&quot;: &quot;1234&quot;}" />


  <script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-iuPUICTnKpooh30jEFisOQIkv+6g5GqljAPYZAwehwlIXOo8cXFHPj1IEcZlq7dZorzHKR0fyywzWwQOkO7uuQ==" src="https://github.githubassets.com/assets/runtime-8ae3d42024e7.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-SpZgKJyhHfrmO9ZLmJztuQzJ+J7tYz7l2uK0FahNXJpiNvVqiy1b2P1HammIlT0b/yoq6M9ZC88oDEuIBe8X+g==" src="https://github.githubassets.com/assets/environment-4a9660289ca1.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-ZAKZQWCEc6bs9LSQOCPRWq3wqRDkQxG2bPL/pW9Lj/Seap0PV0kF/yKCHske8mW3Zytde9n1Im83jxrCmpaMrA==" src="https://github.githubassets.com/assets/5724-640299416084.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-yIsmzjyBs6Mu12a5shTZVT0Jr80it7wV2yjZs77L3GmHoFP5SPNsWY9P+Swu7lPaWMXMtyaxceBQGP/7/Kyl8w==" src="https://github.githubassets.com/assets/93-c88b26ce3c81.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-WtABWNDgj+0Z+nTC8dZsMxFYSujm/s9SJTsHmFnzg73joAek4tmQ1zXCSLBvgAsgdPE8EQuOuOOW0NNP97Y7UA==" src="https://github.githubassets.com/assets/8630-5ad00158d0e0.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-7ocxdRbeEIuk5x86ryHnbc5GBupcna8GP7PEtAqWS0+sMjp4CX10GV5P0XsN7Grx1XTum3BG1FFOwwpccenxkw==" src="https://github.githubassets.com/assets/5157-ee87317516de.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-0Eo1tvk2fS3TaBkpCcX1DHb0QadEpOrHoZhK08d+D7bRyJDo8RjvmwQhFirTGfqxPBNpBSGkbm3qpdTIDNy32A==" src="https://github.githubassets.com/assets/9207-d04a35b6f936.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-fz1GcL6l5OLkR8KJbj+h3RB9xHNT7BqyueLRP99uvAHF/4TINnzrq2EV2R/yEBUIHbxltkEDtCQPCmd7TilyGA==" src="https://github.githubassets.com/assets/github-elements-7f3d4670bea5.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-eJ60/5JwG8wJq9pDYeh89nOoqdR4uiSKaO1ZbhwPIsjLYJKLhMkDzKy90QJHqCOf/5h+gqerAg/ndxX7BncPvA==" src="https://github.githubassets.com/assets/element-registry-789eb4ff9270.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-Hb8d69V10VxkC90NX3zvjNovHq5vrRv0XCde5qNf5WiQAB6BziCN+gEbKG+fDj8i05B2pBdyGIh+3pmaRvzLJA==" src="https://github.githubassets.com/assets/5388-1dbf1debd575.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-JPHg6lXC/kVMbA05VoaD5W739fMUF/ObaJ4NrZWLi91OWI9xEhJ9NtwbGROmxjCm5FGwNOVohY+DXILkO19dtA==" src="https://github.githubassets.com/assets/8932-24f1e0ea55c2.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-EIceiRH5/XsS9RPMOGlnx37yFBM2TbSNcVWgTjKPmRwjdl/lfKNdColL/PLunshA/attRqdYJVnNNGXNyhx6Zw==" src="https://github.githubassets.com/assets/7077-10871e8911f9.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-9mbH9ANKp+mACS9WB6Dwf0B0JST0GGfdf1Cal3BazOkVjhvgxnw3FPD6oNcq/mrsBR8Eowgelgcwvu1KhyUUhQ==" src="https://github.githubassets.com/assets/6262-f666c7f4034a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-K5XqHZlKou8Ex97bfu02vnw9p1q3z7EXg/hNqwyzevXKd7VQhkOwCH5y4Kx7AQ+wxdF7w2O30sb03ukDwHGVJQ==" src="https://github.githubassets.com/assets/3682-2b95ea1d994a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-JLnnTPhYd6z7k1g7CjOIUK4YQRvqCzvSNqRq6GH8tenPhyDVVXDp//clwLGS9xZc07/khbn/oI6NNUUUU5viPQ==" src="https://github.githubassets.com/assets/3932-24b9e74cf858.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-oKM9eU+e5IX1sMjw0JZuecikY6Wu0RqZ4ePS/exLKYr4izQhdZC/BVxb9uf29YadFMF+GQRESNBqkjC2238gwQ==" src="https://github.githubassets.com/assets/4924-a0a33d794f9e.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-b4sxcUQ0ZpcmsLwdrtxEqokH9rReNad4MBVwvplBwhv8AidrDhBMslAd0pkyKtqYebxUpJRKS8VUX6erfcwxYQ==" src="https://github.githubassets.com/assets/behaviors-6f8b31714434.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-nZpgXrBvHm7YePk3m1UhdxY43Ra8lTPxsGk7ocBtGBimPanKdybEgnPXXulh7k7tNLnPzPXFEJ5wY7QGowGOdw==" src="https://github.githubassets.com/assets/7749-9d9a605eb06f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-KKLG+hE5uCMJHxwocsH3WQNYzT3qftRjkNe7L0b5aOMgoS5iT5oWDIwhiy38adTWwg6xdomYeWvi2+wQBjOBAg==" src="https://github.githubassets.com/assets/notifications-global-28a2c6fa1139.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-mtT9iVgsUhg4qtuOE5GJvqGIBqmqE/Z2yjYYscUmNVQNnf+Cx9Y+mLAfgrHb8o2MSIQO3XDxZ3FBhpfpuw5cMw==" src="https://github.githubassets.com/assets/4978-9ad4fd89582c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-7HNhlym0+CqkO90XLH07Hb5b0fTdfFNQsm4rURcL4TXCoWSZeITNczMnd2rU0baBSF6oSIqh7bekMPfn8TTH5A==" src="https://github.githubassets.com/assets/optimizely-ec73619729b4.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-xyGHYwjeMuGHmOdgy9Kb/p7zpSxjrw197tH6c+PzJj3L9zUCmjXBRbPky6B3Dqc/dN0x6OPF7n2Uh5u5MdbVUw==" src="https://github.githubassets.com/assets/90-c721876308de.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-ZSFwlLEfCHi+qMlyabT/x1hgegM31ywDLEVDPSNpNv5/bxbnTVHBhPvLTkSf+Yie8nohu1/RkuXr8PMIkVhO9w==" src="https://github.githubassets.com/assets/2734-65217094b11f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-u8r8UO/bHE8/YPL9N2X0L6nMIkQcItDfE4Yk2OXciXzzEILnPjRg3I2JrrWpQ2F91UAkptNyDZ0xjVSte65jig==" src="https://github.githubassets.com/assets/6637-bbcafc50efdb.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-AX8yHsBvOrK05g8WTf93Zbc1BLgNv8lm5zW4GHMBmhH0rqS/foQCeEwS0gHO4vjHHYa9pVnGNexyFUEpLRIfhA==" src="https://github.githubassets.com/assets/6791-017f321ec06f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-kMnqnEN3Oj/pZ5RnWdn5DOrSF4VU1osXbEUOyENlDpGWyrNOMwBzSJ/3aK8P0mImdEeZV76LyyNTMhatwhEttQ==" src="https://github.githubassets.com/assets/repositories-90c9ea9c4377.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" integrity="sha512-5gMQkjjuztYEUVNWY7cu+vjDDZqLtqHDiWPqfxXPuEwvwPNW10el+edW3br2SGhn10Mvv2b25Sfinry7zNlIqA==" src="https://github.githubassets.com/assets/diffs-e603109238ee.js"></script>
  

  <title>easyloggingpp/easylogging++.h at master · amrayn/easyloggingpp · GitHub</title>



    

  <meta name="request-id" content="A348:461C:1F2108:20E0ED:6282A647" data-pjax-transient="true"/><meta name="html-safe-nonce" content="11d1f89933b3af8d228e9db90e683dc5db70d092569a48bee00e636d5e62cc4e" data-pjax-transient="true"/><meta name="visitor-payload" content="eyJyZWZlcnJlciI6IiIsInJlcXVlc3RfaWQiOiJBMzQ4OjQ2MUM6MUYyMTA4OjIwRTBFRDo2MjgyQTY0NyIsInZpc2l0b3JfaWQiOiI0NjI5MTkwMzQzOTc4NTU5MDQ3IiwicmVnaW9uX2VkZ2UiOiJmcmEiLCJyZWdpb25fcmVuZGVyIjoiZnJhIn0=" data-pjax-transient="true"/><meta name="visitor-hmac" content="112e739381127cf2a8073e44a428c9ba82b59bb5078dbd305eb18961e539c901" data-pjax-transient="true"/>

    <meta name="hovercard-subject-tag" content="repository:5919188" data-pjax-transient>


  <meta name="github-keyboard-shortcuts" content="repository,source-code" data-pjax-transient="true" />
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY">
  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

<meta name="octolytics-url" content="https://collector.github.com/github/collect" />

  <meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />

  




  

    <meta name="viewport" content="width=device-width">
    
      <meta name="description" content="Single header C++ logging library. It is extremely powerful, extendable, light-weight, fast performing, thread and type safe and consists of many built-in features. It provides ability to write logs in your own customized format. It also provide support for logging your classes, third-party libraries, STL and third-party containers etc. - easyloggingpp/easylogging++.h at master · amrayn/easyloggingpp">
      <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <meta property="fb:app_id" content="1401488693436528">
    <meta name="apple-itunes-app" content="app-id=1477376905" />
      <meta name="twitter:image:src" content="https://opengraph.githubassets.com/648a5919e0b2bb0ce8a16d0909b8ce0ebd178ea5b81a05c42e0c39ed4dbe126e/amrayn/easyloggingpp" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary_large_image" /><meta name="twitter:title" content="easyloggingpp/easylogging++.h at master · amrayn/easyloggingpp" /><meta name="twitter:description" content="Single header C++ logging library. It is extremely powerful, extendable, light-weight, fast performing, thread and type safe and consists of many built-in features. It provides ability to write log..." />
      <meta property="og:image" content="https://opengraph.githubassets.com/648a5919e0b2bb0ce8a16d0909b8ce0ebd178ea5b81a05c42e0c39ed4dbe126e/amrayn/easyloggingpp" /><meta property="og:image:alt" content="Single header C++ logging library. It is extremely powerful, extendable, light-weight, fast performing, thread and type safe and consists of many built-in features. It provides ability to write log..." /><meta property="og:image:width" content="1200" /><meta property="og:image:height" content="600" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="easyloggingpp/easylogging++.h at master · amrayn/easyloggingpp" /><meta property="og:url" content="https://github.com/amrayn/easyloggingpp" /><meta property="og:description" content="Single header C++ logging library. It is extremely powerful, extendable, light-weight, fast performing, thread and type safe and consists of many built-in features. It provides ability to write log..." />
      
    <link rel="assets" href="https://github.githubassets.com/">
    


        <meta name="hostname" content="github.com">
      <meta name="user-login" content="">



        <meta name="expected-hostname" content="github.com">


    <meta name="enabled-features" content="ACTIONS_INHERIT_SECRETS_REUSABLE_WORKFLOWS">


  <meta http-equiv="x-pjax-version" content="06f4366e1e2d5171421e668b8e4827dd20f009d7e7ff0a9f05b11c03853226ae" data-turbo-track="reload">
  <meta http-equiv="x-pjax-csp-version" content="ca8f28be2f02ebc697029bdc0646515d9017cf770c4c1ff8414eccd96f6b5a2a" data-turbo-track="reload">
  <meta http-equiv="x-pjax-css-version" content="79a4acb89d89cb56c8f7833f5757e40fec323a1bce485804931522a20754d913" data-turbo-track="reload">
  <meta http-equiv="x-pjax-js-version" content="e526375391e214ae0860f571142eaf977ee9a35e8cd376ec271112bd9844b4da" data-turbo-track="reload">
  <meta name="turbo-cache-control" content="no-preview">
  

    
  <meta name="go-import" content="github.com/amrayn/easyloggingpp git https://github.com/amrayn/easyloggingpp.git">

  <meta name="octolytics-dimension-user_id" content="104277963" /><meta name="octolytics-dimension-user_login" content="amrayn" /><meta name="octolytics-dimension-repository_id" content="5919188" /><meta name="octolytics-dimension-repository_nwo" content="amrayn/easyloggingpp" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="5919188" /><meta name="octolytics-dimension-repository_network_root_nwo" content="amrayn/easyloggingpp" />



    <link rel="canonical" href="https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <meta name="browser-optimizely-client-errors-url" content="https://api.github.com/_private/browser/optimizely_client/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="alternate icon" class="js-site-favicon" type="image/png" href="https://github.githubassets.com/favicons/favicon.png">
  <link rel="icon" class="js-site-favicon" type="image/svg+xml" href="https://github.githubassets.com/favicons/favicon.svg">

<meta name="theme-color" content="#1e2327">
<meta name="color-scheme" content="light dark" />


  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-responsive page-blob" style="word-wrap: break-word;">
    

    <div class="position-relative js-header-wrapper ">
      <a href="#start-of-content" class="px-2 py-4 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content">Skip to content</a>
      <span data-view-component="true" class="progress-pjax-loader js-pjax-loader-bar Progress position-fixed width-full">
    <span style="width: 0%;" data-view-component="true" class="Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis"></span>
</span>      
      


        

            <header class="Header-old header-logged-out js-details-container Details position-relative f4 py-2" role="banner">
  <div class="container-xl d-lg-flex flex-items-center p-responsive">
    <div class="d-flex flex-justify-between flex-items-center">
      <a class="mr-4 color-fg-inherit" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
        <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
      </a>

        <div class="d-lg-none css-truncate css-truncate-target width-fit p-2">
          

        </div>

      <div class="d-flex flex-items-center">
            <a href="/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo"
              class="d-inline-block d-lg-none f5 no-underline border color-border-default rounded-2 px-2 py-1 mr-3 mr-sm-5 color-fg-inherit"
              data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="5c7d5dfcc18f38d868e36cb4f7125db0f3c04255b210e0f337d1f772cbe3682d"
            >
              Sign&nbsp;up
            </a>

        <button aria-label="Toggle navigation" aria-expanded="false" type="button" data-view-component="true" class="js-details-target btn-link d-lg-none mt-1 color-fg-inherit">  <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-three-bars">
    <path fill-rule="evenodd" d="M1 2.75A.75.75 0 011.75 2h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 2.75zm0 5A.75.75 0 011.75 7h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 7.75zM1.75 12a.75.75 0 100 1.5h12.5a.75.75 0 100-1.5H1.75z"></path>
</svg>
  
</button>      </div>
    </div>

    <div class="HeaderMenu HeaderMenu--logged-out position-fixed top-0 right-0 bottom-0 height-fit position-lg-relative d-lg-flex flex-justify-between flex-items-center flex-auto">
      <div class="d-flex d-lg-none flex-justify-end border-bottom color-bg-subtle p-3">
        <button aria-label="Toggle navigation" aria-expanded="false" type="button" data-view-component="true" class="js-details-target btn-link">  <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-x color-fg-muted">
    <path fill-rule="evenodd" d="M5.72 5.72a.75.75 0 011.06 0L12 10.94l5.22-5.22a.75.75 0 111.06 1.06L13.06 12l5.22 5.22a.75.75 0 11-1.06 1.06L12 13.06l-5.22 5.22a.75.75 0 01-1.06-1.06L10.94 12 5.72 6.78a.75.75 0 010-1.06z"></path>
</svg>
  
</button>      </div>

        <nav class="mt-0 px-3 px-lg-0 mb-5 mb-lg-0" aria-label="Global">
          <ul class="d-lg-flex list-style-none">
              <li class="mr-0 mr-lg-3 position-relative flex-wrap flex-justify-between flex-items-center border-bottom border-lg-bottom-0 d-block d-lg-flex flex-lg-nowrap flex-lg-items-center">
    <details class="HeaderMenu-details details-overlay details-reset width-full">
      <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
        Product
        <svg x="0" y="0" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative"><path d="M1,1l6.2,6L13,1"></path></svg>
      </summary>
      <div class="dropdown-menu flex-auto rounded px-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
        <ul class="list-style-none f5 pb-1">
              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--primary text-bold py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Features&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Features;&quot;}" href="/features">
      Features
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Mobile&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Mobile;&quot;}" href="/mobile">
      Mobile
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Actions;&quot;}" href="/features/actions">
      Actions
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Codespaces;&quot;}" href="/features/codespaces">
      Codespaces
</a>  </li>

            
              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Packages;&quot;}" href="/features/packages">
      Packages
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Security;&quot;}" href="/features/security">
      Security
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Code review;&quot;}" href="/features/code-review">
      Code review
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Issues;&quot;}" href="/features/issues">
      Issues
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Integrations&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Integrations;&quot;}" href="/features/integrations">
      Integrations
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--primary text-bold border-top pt-4 pb-2 mt-3" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:GitHub Sponsors;&quot;}" href="/sponsors">
      GitHub Sponsors
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--primary text-bold py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Customer stories&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Customer stories;&quot;}" href="/customer-stories">
      Customer stories
</a>  </li>

        </ul>
      </div>
    </details>
</li>


              <li class="mr-0 mr-lg-3 position-relative flex-wrap flex-justify-between flex-items-center border-bottom border-lg-bottom-0 d-block d-lg-flex flex-lg-nowrap flex-lg-items-center">
    <a class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Team&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Team;&quot;}" href="/team">Team</a>
</li>

              <li class="mr-0 mr-lg-3 position-relative flex-wrap flex-justify-between flex-items-center border-bottom border-lg-bottom-0 d-block d-lg-flex flex-lg-nowrap flex-lg-items-center">
    <a class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Enterprise&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Enterprise;&quot;}" href="/enterprise">Enterprise</a>
</li>


            <li class="mr-0 mr-lg-3 position-relative flex-wrap flex-justify-between flex-items-center border-bottom border-lg-bottom-0 d-block d-lg-flex flex-lg-nowrap flex-lg-items-center">
    <details class="HeaderMenu-details details-overlay details-reset width-full">
      <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
        Explore
        <svg x="0" y="0" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative"><path d="M1,1l6.2,6L13,1"></path></svg>
      </summary>
      <div class="dropdown-menu flex-auto rounded px-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
        <ul class="list-style-none f5 pb-1">
              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--primary text-bold py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Explore GitHub&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Explore GitHub;&quot;}" href="/explore">
      Explore GitHub
</a>  </li>

              <li class="color-fg-muted text-normal f6 text-mono mb-1 border-top pt-3 mt-3 mb-1">Learn and contribute</li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Topics&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Topics;&quot;}" href="/topics">
      Topics
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Collections&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Collections;&quot;}" href="/collections">
      Collections
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Trending&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Trending;&quot;}" href="/trending">
      Trending
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Learning Lab&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Learning Lab;&quot;}" href="https://lab.github.com/">
      Learning Lab
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Open source guides&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Open source guides;&quot;}" href="https://opensource.guide">
      Open source guides
</a>  </li>

              <li class="color-fg-muted text-normal f6 text-mono mb-1 border-top pt-3 mt-3 mb-1">Connect with others</li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:The ReadME Project;&quot;}" href="/readme">
      The ReadME Project
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Events&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Events;&quot;}" href="/events">
      Events
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to Community forum&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Community forum;&quot;}" href="https://github.community">
      Community forum
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to GitHub Education&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:GitHub Education;&quot;}" href="https://education.github.com">
      GitHub Education
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Explore&quot;,&quot;action&quot;:&quot;click to go to GitHub Stars program&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:GitHub Stars program;&quot;}" href="https://stars.github.com">
      GitHub Stars program
</a>  </li>

        </ul>
      </div>
    </details>
</li>


            <li class="mr-0 mr-lg-3 position-relative flex-wrap flex-justify-between flex-items-center border-bottom border-lg-bottom-0 d-block d-lg-flex flex-lg-nowrap flex-lg-items-center">
    <a class="HeaderMenu-link no-underline py-3 d-block d-lg-inline-block" data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Marketplace&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Marketplace;&quot;}" href="/marketplace">Marketplace</a>
</li>


            <li class="mr-0 mr-lg-3 position-relative flex-wrap flex-justify-between flex-items-center border-bottom border-lg-bottom-0 d-block d-lg-flex flex-lg-nowrap flex-lg-items-center">
    <details class="HeaderMenu-details details-overlay details-reset width-full">
      <summary class="HeaderMenu-summary HeaderMenu-link px-0 py-3 border-0 no-wrap d-block d-lg-inline-block">
        Pricing
        <svg x="0" y="0" viewBox="0 0 14 8" xml:space="preserve" fill="none" class="icon-chevon-down-mktg position-absolute position-lg-relative"><path d="M1,1l6.2,6L13,1"></path></svg>
      </summary>
      <div class="dropdown-menu flex-auto rounded px-0 mt-0 pb-4 p-lg-4 position-relative position-lg-absolute left-0 left-lg-n4">
        <ul class="list-style-none f5 pb-1">
              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--primary text-bold py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Pricing&quot;,&quot;action&quot;:&quot;click to go to Plans&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Plans;&quot;}" href="/pricing">
      Plans
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Pricing&quot;,&quot;action&quot;:&quot;click to go to Compare plans&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Compare plans;&quot;}" href="/pricing#compare-features">
      Compare plans
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--secondary py-2" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Pricing&quot;,&quot;action&quot;:&quot;click to go to Contact Sales&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Contact Sales;&quot;}" href="https://github.com/enterprise/contact">
      Contact Sales
</a>  </li>

              <li>
    <a class="lh-condensed-ultra d-block no-underline position-relative Link--primary text-bold border-top pt-4 pb-2 mt-3" data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Pricing&quot;,&quot;action&quot;:&quot;click to go to Education&quot;,&quot;label&quot;:&quot;ref_page:/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h;ref_cta:Education;&quot;}" href="https://education.github.com">
      Education
</a>  </li>

        </ul>
      </div>
    </details>
</li>

          </ul>
        </nav>

      <div class="d-lg-flex flex-items-center px-3 px-lg-0 text-center text-lg-left">
          <div class="d-lg-flex min-width-0 mb-3 mb-lg-0">
            



<div class="header-search flex-auto js-site-search position-relative flex-self-stretch flex-md-self-auto mb-3 mb-md-0 mr-0 mr-md-3 scoped-search site-scoped-search js-jump-to"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="5919188" data-scoped-search-url="/amrayn/easyloggingpp/search" data-owner-scoped-search-url="/orgs/amrayn/search" data-unscoped-search-url="/search" data-turbo="false" action="/amrayn/easyloggingpp/search" accept-charset="UTF-8" method="get">
      <label class="form-control input-sm header-search-wrapper p-0 js-chromeless-input-container header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey=s,/
          name="q"
          data-test-selector="nav-search-input"
          placeholder="Search"
          data-unscoped-placeholder="Search GitHub"
          data-scoped-placeholder="Search"
          autocapitalize="off"
          role="combobox"
          aria-haspopup="listbox"
          aria-expanded="false"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations"
          spellcheck="false"
          autocomplete="off"
        >
        <input type="hidden" data-csrf="true" class="js-data-jump-to-suggestions-path-csrf" value="OiHijP3flm3x4E8+SsX8LbyOnspGUr1pmRcpVgceS8ZLDATz0Lt6Fi4MCLJdUk44ezOsAcz6ltGVc+Q26qdi9Q==" />
        <input type="hidden" class="js-site-search-type-field" name="type" >
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="20" aria-hidden="true" class="mr-1 header-search-key-slash"><path fill="none" stroke="#979A9C" opacity=".4" d="M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z"></path><path fill="#979A9C" d="M11.8 6L8 15.1h-.9L10.8 6h1z"></path></svg>


          <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
            
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="suggestion">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="color-fg-muted">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="scoped_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-owner-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="owner_scoped_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this organization">
        In this organization
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="global_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


</ul>

          </div>
      </label>
</form>  </div>
</div>

          </div>

        <div class="position-relative mr-3 mb-4 mb-lg-0 d-inline-block">
          <a href="/login?return_to=https%3A%2F%2Fgithub.com%2Famrayn%2Feasyloggingpp%2Fblob%2Fmaster%2Fsrc%2Feasylogging%252B%252B.h"
            class="HeaderMenu-link flex-shrink-0 no-underline"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="b158c9ea717f7c1fb66b17e4e42c14b619c6403d1e6890297adda8c407bd9d04"
            data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">
            Sign in
          </a>
        </div>

          <a href="/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=amrayn%2Feasyloggingpp"
            class="HeaderMenu-link flex-shrink-0 d-inline-block no-underline border color-border-default rounded px-2 py-1"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="b158c9ea717f7c1fb66b17e4e42c14b619c6403d1e6890297adda8c407bd9d04"
            data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}"
          >
            Sign up
          </a>
      </div>
    </div>
  </div>
</header>

    </div>

  <div id="start-of-content" class="show-on-focus"></div>







    <div data-pjax-replace id="js-flash-container">


  <template class="js-flash-template">
    <div class="flash flash-full  {{ className }}">
  <div class="px-2" >
    <button class="flash-close js-flash-close" type="button" aria-label="Dismiss this message">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
    </button>
    
      <div>{{ message }}</div>

  </div>
</div>
  </template>
</div>


    

  <include-fragment class="js-notification-shelf-include-fragment" data-base-src="https://github.com/notifications/beta/shelf"></include-fragment>





  <div
    class="application-main "
    data-commit-hovercards-enabled
    data-discussion-hovercards-enabled
    data-issue-and-pr-hovercards-enabled
  >
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main id="js-repo-pjax-container" data-pjax-container >
      

    
    








  <div id="repository-container-header" class="pt-3 hide-full-screen" style="background-color: var(--color-page-header-bg);" data-pjax-replace>

      <div class="d-flex mb-3 px-3 px-md-4 px-lg-5">

        <div class="flex-auto min-width-0 width-fit mr-3">
            <h2 class=" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo color-fg-muted mr-2">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
  <span class="author flex-self-stretch" itemprop="author">
    <a class="url fn" rel="author" data-hovercard-type="organization" data-hovercard-url="/orgs/amrayn/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn">amrayn</a>
  </span>
  <span class="mx-1 flex-self-stretch color-fg-muted">/</span>
  <strong itemprop="name" class="mr-2 flex-self-stretch">
    <a data-pjax="#repo-content-pjax-container" href="/amrayn/easyloggingpp">easyloggingpp</a>
  </strong>

  <span></span><span class="Label Label--secondary v-align-middle mr-1">Public</span>
</h2>

        </div>

          <ul class="pagehead-actions flex-shrink-0 d-none d-md-inline" style="padding: 2px 0;">
      <li>
        <include-fragment src="/amrayn/easyloggingpp/sponsor_button"></include-fragment>
      </li>

    

  <li>
      <a href="/login?return_to=%2Famrayn%2Feasyloggingpp" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="93972a4af7db43a3d962fa3b58bb2ced5d7b8074beb23a8c6650ceb44bfd168d" aria-label="You must be signed in to change notification settings" data-view-component="true" class="tooltipped tooltipped-s btn-sm btn">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell mr-2">
    <path d="M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path><path fill-rule="evenodd" d="M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z"></path>
</svg>Notifications
  
</a>
  </li>

  <li>
        <a href="/login?return_to=%2Famrayn%2Feasyloggingpp" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:5919188,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="0c9abffbe8ccc17085df1cbe0d8a13ee0f4e22f302bc1d7fd0e687c88ee1717d" aria-label="You must be signed in to fork a repository" data-view-component="true" class="tooltipped tooltipped-s btn-sm btn">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo-forked mr-2">
    <path fill-rule="evenodd" d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path>
</svg>Fork
    <span id="repo-network-counter" data-pjax-replace="true" title="841" data-view-component="true" class="Counter">841</span>
  
</a>
  </li>

  <li>
        <div data-view-component="true" class="BtnGroup d-flex">
      <a href="/login?return_to=%2Famrayn%2Feasyloggingpp" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:5919188,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="af3b38aae1bb133bf9f6d9531f99a2b169ee13de6a825e29d3a9e9166ad5ac34" aria-label="You must be signed in to star a repository" data-view-component="true" class="tooltipped tooltipped-s btn-sm btn BtnGroup-item">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star v-align-text-bottom d-inline-block mr-2">
    <path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"></path>
</svg><span data-view-component="true" class="d-inline">
          Star
</span>          <span id="repo-stars-counter-star" aria-label="3142 users starred this repository" data-singular-suffix="user starred this repository" data-plural-suffix="users starred this repository" data-pjax-replace="true" title="3,142" data-view-component="true" class="Counter js-social-count">3.1k</span>
  
</a>      <button disabled="disabled" aria-label="You must be signed in to add this repository to a list" type="button" data-view-component="true" class="btn-sm btn BtnGroup-item px-2">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-triangle-down">
    <path d="M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"></path>
</svg>
  
</button></div>
  </li>

  

</ul>

      </div>

      <div id="responsive-meta-container" data-pjax-replace>
</div>


        
<nav data-pjax="#js-repo-pjax-container" aria-label="Repository" data-view-component="true" class="js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5">

  <ul data-view-component="true" class="UnderlineNav-body list-style-none">
      <li data-view-component="true" class="d-inline-flex">
  <a id="code-tab" href="/amrayn/easyloggingpp" data-tab-item="i0code-tab" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /amrayn/easyloggingpp" data-pjax="#repo-content-pjax-container" data-hotkey="g c" data-ga-click="Repository, Navigation click, Code tab" aria-current="page" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M4.72 3.22a.75.75 0 011.06 1.06L2.06 8l3.72 3.72a.75.75 0 11-1.06 1.06L.47 8.53a.75.75 0 010-1.06l4.25-4.25zm6.56 0a.75.75 0 10-1.06 1.06L13.94 8l-3.72 3.72a.75.75 0 101.06 1.06l4.25-4.25a.75.75 0 000-1.06l-4.25-4.25z"></path>
</svg>
          <span data-content="Code">Code</span>
            <span id="code-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="issues-tab" href="/amrayn/easyloggingpp/issues" data-tab-item="i1issues-tab" data-selected-links="repo_issues repo_labels repo_milestones /amrayn/easyloggingpp/issues" data-pjax="#repo-content-pjax-container" data-hotkey="g i" data-ga-click="Repository, Navigation click, Issues tab" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path><path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"></path>
</svg>
          <span data-content="Issues">Issues</span>
            <span id="issues-repo-tab-count" data-pjax-replace="" title="237" data-view-component="true" class="Counter">237</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="pull-requests-tab" href="/amrayn/easyloggingpp/pulls" data-tab-item="i2pull-requests-tab" data-selected-links="repo_pulls checks /amrayn/easyloggingpp/pulls" data-pjax="#repo-content-pjax-container" data-hotkey="g p" data-ga-click="Repository, Navigation click, Pull requests tab" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"></path>
</svg>
          <span data-content="Pull requests">Pull requests</span>
            <span id="pull-requests-repo-tab-count" data-pjax-replace="" title="19" data-view-component="true" class="Counter">19</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="actions-tab" href="/amrayn/easyloggingpp/actions" data-tab-item="i3actions-tab" data-selected-links="repo_actions /amrayn/easyloggingpp/actions" data-pjax="#repo-content-pjax-container" data-hotkey="g a" data-analytics-event="{&quot;category&quot;:&quot;Actions&quot;,&quot;action&quot;:&quot;clicked&quot;,&quot;label&quot;:&quot;ref_cta:Actions;ref_loc:navigation_helper&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM6.379 5.227A.25.25 0 006 5.442v5.117a.25.25 0 00.379.214l4.264-2.559a.25.25 0 000-.428L6.379 5.227z"></path>
</svg>
          <span data-content="Actions">Actions</span>
            <span id="actions-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="security-tab" href="/amrayn/easyloggingpp/security" data-tab-item="i4security-tab" data-selected-links="security overview alerts policy token_scanning code_scanning /amrayn/easyloggingpp/security" data-pjax="#repo-content-pjax-container" data-hotkey="g s" data-ga-click="Repository, Navigation click, Security tab" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M7.467.133a1.75 1.75 0 011.066 0l5.25 1.68A1.75 1.75 0 0115 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.7 1.7 0 01-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 011.217-1.667l5.25-1.68zm.61 1.429a.25.25 0 00-.153 0l-5.25 1.68a.25.25 0 00-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.2.2 0 00.154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.25.25 0 00-.174-.237l-5.25-1.68zM9 10.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.75a.75.75 0 10-1.5 0v3a.75.75 0 001.5 0v-3z"></path>
</svg>
          <span data-content="Security">Security</span>
            <include-fragment src="/amrayn/easyloggingpp/security/overall-count" accept="text/fragment+html"></include-fragment>

    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="insights-tab" href="/amrayn/easyloggingpp/pulse" data-tab-item="i5insights-tab" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /amrayn/easyloggingpp/pulse" data-pjax="#repo-content-pjax-container" data-ga-click="Repository, Navigation click, Insights tab" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z"></path>
</svg>
          <span data-content="Insights">Insights</span>
            <span id="insights-repo-tab-count" data-pjax-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
</ul>
    <div style="visibility:hidden;" data-view-component="true" class="UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0">      <details data-view-component="true" class="details-overlay details-reset position-relative">
  <summary role="button" data-view-component="true">          <div class="UnderlineNav-item mr-0 border-0">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
            <span class="sr-only">More</span>
          </div>
</summary>
  <div data-view-component="true">          <details-menu role="menu" data-view-component="true" class="dropdown-menu dropdown-menu-sw">
  
            <ul>
                <li data-menu-item="i0code-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item selected dropdown-item" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /amrayn/easyloggingpp" href="/amrayn/easyloggingpp">
                    Code
</a>                </li>
                <li data-menu-item="i1issues-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_issues repo_labels repo_milestones /amrayn/easyloggingpp/issues" href="/amrayn/easyloggingpp/issues">
                    Issues
</a>                </li>
                <li data-menu-item="i2pull-requests-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_pulls checks /amrayn/easyloggingpp/pulls" href="/amrayn/easyloggingpp/pulls">
                    Pull requests
</a>                </li>
                <li data-menu-item="i3actions-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_actions /amrayn/easyloggingpp/actions" href="/amrayn/easyloggingpp/actions">
                    Actions
</a>                </li>
                <li data-menu-item="i4security-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="security overview alerts policy token_scanning code_scanning /amrayn/easyloggingpp/security" href="/amrayn/easyloggingpp/security">
                    Security
</a>                </li>
                <li data-menu-item="i5insights-tab" hidden>
                  <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /amrayn/easyloggingpp/pulse" href="/amrayn/easyloggingpp/pulse">
                    Insights
</a>                </li>
            </ul>

</details-menu></div>
</details></div>
</nav>
  </div>



<div id="repo-content-pjax-container" class="repository-content " >
  
  


  
      
  <div class="clearfix container-xl px-3 px-md-4 px-lg-5 mt-4">
    
    
<div>
  




    
<a class="d-none js-permalink-shortcut" data-hotkey="y" href="/amrayn/easyloggingpp/blob/8489989bb26c6371df103f6cbced3fbee1bc3c2f/src/easylogging%2B%2B.h">Permalink</a>

<div class="d-flex flex-items-start flex-shrink-0 pb-3 flex-wrap flex-md-nowrap flex-justify-between flex-md-justify-start">
  
<div class="position-relative">
  <details class="details-reset details-overlay mr-0 mb-0 " id="branch-select-menu">
    <summary class="btn css-truncate"
            data-hotkey="w"
            title="Switch branches or tags">
      <svg text="gray" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-branch">
    <path fill-rule="evenodd" d="M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path>
</svg>
      <span class="css-truncate-target" data-menu-button>master</span>
      <span class="dropdown-caret"></span>
    </summary>

    
<div class="SelectMenu">
  <div class="SelectMenu-modal">
    <header class="SelectMenu-header">
      <span class="SelectMenu-title">Switch branches/tags</span>
      <button class="SelectMenu-closeButton" type="button" data-toggle-for="branch-select-menu"><svg aria-label="Close menu" aria-hidden="false" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg></button>
    </header>

    <input-demux data-action="tab-container-change:input-demux#storeInput tab-container-changed:input-demux#updateInput">
      <tab-container class="d-flex flex-column js-branches-tags-tabs" style="min-height: 0;">
        <div class="SelectMenu-filter">
          <input data-target="input-demux.source"
                 id="context-commitish-filter-field"
                 class="SelectMenu-input form-control"
                 aria-owns="ref-list-branches"
                 data-controls-ref-menu-id="ref-list-branches"
                 autofocus
                 autocomplete="off"
                 aria-label="Filter branches/tags"
                 placeholder="Filter branches/tags"
                 type="text"
          >
        </div>

        <div class="SelectMenu-tabs" role="tablist" data-target="input-demux.control" >
          <button class="SelectMenu-tab" type="button" role="tab" aria-selected="true">Branches</button>
          <button class="SelectMenu-tab" type="button" role="tab">Tags</button>
        </div>

        <div role="tabpanel" id="ref-list-branches" data-filter-placeholder="Filter branches/tags" tabindex="" class="d-flex flex-column flex-auto overflow-auto">
          <ref-selector
            type="branch"
            data-targets="input-demux.sinks"
            data-action="
              input-entered:ref-selector#inputEntered
              tab-selected:ref-selector#tabSelected
              focus-list:ref-selector#focusFirstListMember
            "
            query-endpoint="/amrayn/easyloggingpp/refs"
            
            cache-key="v0:1522546411.0"
            current-committish="bWFzdGVy"
            default-branch="bWFzdGVy"
            name-with-owner="YW1yYXluL2Vhc3lsb2dnaW5ncHA="
            prefetch-on-mouseover
          >

            <template data-target="ref-selector.fetchFailedTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Could not load branches</div>
            </template>

              <template data-target="ref-selector.noMatchTemplate">
    <div class="SelectMenu-message">Nothing to show</div>
</template>


            <div data-target="ref-selector.listContainer" role="menu" class="SelectMenu-list " data-pjax="#repo-content-pjax-container">
              <div class="SelectMenu-loading pt-3 pb-0 overflow-hidden" aria-label="Menu is loading">
                <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
              </div>
            </div>

              <template data-target="ref-selector.itemTemplate">
  <a href="https://github.com/amrayn/easyloggingpp/blob/{{ urlEncodedRefName }}/src/easylogging++.h" class="SelectMenu-item" role="menuitemradio" rel="nofollow" aria-checked="{{ isCurrent }}" data-index="{{ index }}">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    <span class="flex-1 css-truncate css-truncate-overflow {{ isFilteringClass }}">{{ refName }}</span>
    <span hidden="{{ isNotDefault }}" class="Label Label--secondary flex-self-start">default</span>
  </a>
</template>


              <footer class="SelectMenu-footer"><a href="/amrayn/easyloggingpp/branches">View all branches</a></footer>
          </ref-selector>

        </div>

        <div role="tabpanel" id="tags-menu" data-filter-placeholder="Find a tag" tabindex="" hidden class="d-flex flex-column flex-auto overflow-auto">
          <ref-selector
            type="tag"
            data-action="
              input-entered:ref-selector#inputEntered
              tab-selected:ref-selector#tabSelected
              focus-list:ref-selector#focusFirstListMember
            "
            data-targets="input-demux.sinks"
            query-endpoint="/amrayn/easyloggingpp/refs"
            cache-key="v0:1522546411.0"
            current-committish="bWFzdGVy"
            default-branch="bWFzdGVy"
            name-with-owner="YW1yYXluL2Vhc3lsb2dnaW5ncHA="
          >

            <template data-target="ref-selector.fetchFailedTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Could not load tags</div>
            </template>

            <template data-target="ref-selector.noMatchTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Nothing to show</div>
            </template>

              <template data-target="ref-selector.itemTemplate">
  <a href="https://github.com/amrayn/easyloggingpp/blob/{{ urlEncodedRefName }}/src/easylogging++.h" class="SelectMenu-item" role="menuitemradio" rel="nofollow" aria-checked="{{ isCurrent }}" data-index="{{ index }}">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    <span class="flex-1 css-truncate css-truncate-overflow {{ isFilteringClass }}">{{ refName }}</span>
    <span hidden="{{ isNotDefault }}" class="Label Label--secondary flex-self-start">default</span>
  </a>
</template>


            <div data-target="ref-selector.listContainer" role="menu" class="SelectMenu-list" data-pjax="#repo-content-pjax-container">
              <div class="SelectMenu-loading pt-3 pb-0 overflow-hidden" aria-label="Menu is loading">
                <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
              </div>
            </div>
              <footer class="SelectMenu-footer"><a href="/amrayn/easyloggingpp/tags">View all tags</a></footer>
          </ref-selector>
        </div>
      </tab-container>
    </input-demux>
  </div>
</div>

  </details>

</div>

  <h2 id="blob-path" class="breadcrumb flex-auto flex-self-center min-width-0 text-normal mx-2 width-full width-md-auto flex-order-1 flex-md-order-none mt-3 mt-md-0">
    <span class="js-repo-root text-bold"><span class="js-path-segment d-inline-block wb-break-all"><a data-pjax="#repo-content-pjax-container" href="/amrayn/easyloggingpp"><span>easyloggingpp</span></a></span></span><span class="separator">/</span><span class="js-path-segment d-inline-block wb-break-all"><a data-pjax="#repo-content-pjax-container" href="/amrayn/easyloggingpp/tree/master/src"><span>src</span></a></span><span class="separator">/</span><strong class="final-path">easylogging++.h</strong>
  </h2>
  <a href="/amrayn/easyloggingpp/find/master" data-pjax="" data-hotkey="t" data-view-component="true" class="js-pjax-capture-input btn mr-2 d-none d-md-block">  Go to file
  
</a>
  <details id="blob-more-options-details" data-view-component="true" class="details-overlay details-reset position-relative">
  <summary role="button" data-view-component="true" class="btn">  <svg aria-label="More options" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
  
</summary>
  <div data-view-component="true">      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="d-block d-md-none">
          <a class="dropdown-item d-flex flex-items-baseline" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FIND_FILE_BUTTON&quot;,&quot;repository_id&quot;:5919188,&quot;originating_url&quot;:&quot;https://github.com/amrayn/easyloggingpp/blob/master/src/easylogging%2B%2B.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="78f7a7634bd2dd1d5f6908aebc069ea6842544703f4bb71cf2b727fa44461719" data-ga-click="Repository, find file, location:repo overview" data-hotkey="t" data-pjax="true" href="/amrayn/easyloggingpp/find/master">
            <span class="flex-auto">Go to file</span>
            <span class="text-small color-fg-muted" aria-hidden="true">T</span>
</a>        </li>
        <li data-toggle-for="blob-more-options-details">
          <button data-toggle-for="jumpto-line-details-dialog" type="button" data-view-component="true" class="dropdown-item btn-link">  <span class="d-flex flex-items-baseline">
              <span class="flex-auto">Go to line</span>
              <span class="text-small color-fg-muted" aria-hidden="true">L</span>
            </span>
  
</button>        </li>
        <li class="dropdown-divider" role="none"></li>
        <li>
          <clipboard-copy data-toggle-for="blob-more-options-details" aria-label="Copy path" value="src/easylogging++.h" data-view-component="true" class="dropdown-item cursor-pointer">
    
            Copy path

</clipboard-copy>        </li>
        <li>
          <clipboard-copy data-toggle-for="blob-more-options-details" aria-label="Copy permalink" value="https://github.com/amrayn/easyloggingpp/blob/8489989bb26c6371df103f6cbced3fbee1bc3c2f/src/easylogging++.h" data-view-component="true" class="dropdown-item cursor-pointer">
    
            <span class="d-flex flex-items-baseline">
              <span class="flex-auto">Copy permalink</span>
            </span>

</clipboard-copy>        </li>
      </ul>
</div>
</details></div>





    <div id="spoof-warning" class="mt-0 pb-3" hidden aria-hidden>
  <div data-view-component="true" class="flash flash-warn mt-0 clearfix">
  
  
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert float-left mt-1">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>

      <div class="overflow-hidden">This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.</div>


  
</div></div>

    <include-fragment src="/amrayn/easyloggingpp/spoofed_commit_check/8489989bb26c6371df103f6cbced3fbee1bc3c2f" data-test-selector="spoofed-commit-check"></include-fragment>

    <div class="Box d-flex flex-column flex-shrink-0 mb-3">
  
  <div class="Box-header Details js-details-container">
      <div class="d-flex flex-items-center">
        <span class="flex-shrink-0 ml-n1 mr-n1 mt-n1 mb-n1">
          <a rel="contributor" data-skip-pjax="true" data-hovercard-type="user" data-hovercard-url="/users/abumusamq/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/abumusamq"><img class="avatar avatar-user" src="https://avatars.githubusercontent.com/u/1683515?s=48&amp;v=4" width="24" height="24" alt="@abumusamq" /></a>
        </span>
        <div class="flex-1 d-flex flex-items-center ml-3 min-width-0">
          <div class="css-truncate css-truncate-overflow">
            <a class="text-bold Link--primary" rel="contributor" data-hovercard-type="user" data-hovercard-url="/users/abumusamq/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/abumusamq">abumusamq</a>

              <span class="markdown-title">
                <a data-pjax="true" title="Merge branch &#39;master&#39; into develop" class="Link--secondary" href="/amrayn/easyloggingpp/commit/fa10a7974632b2768a1512c3aac2ccea47048b3a">Merge branch 'master' into develop</a>
              </span>
          </div>


          <span class="ml-2">
            <include-fragment accept="text/fragment+html" src="/amrayn/easyloggingpp/commit/fa10a7974632b2768a1512c3aac2ccea47048b3a/rollup?direction=e" class="d-inline"></include-fragment>
          </span>
        </div>
        <div class="ml-3 d-flex flex-shrink-0 flex-items-center flex-justify-end color-fg-muted no-wrap">
          <span class="d-none d-md-inline">
            <span>Latest commit</span>
            <a class="text-small text-mono Link--secondary" href="/amrayn/easyloggingpp/commit/fa10a7974632b2768a1512c3aac2ccea47048b3a" data-pjax>fa10a79</a>
            <span itemprop="dateModified"><relative-time datetime="2020-12-25T09:01:47Z" class="no-wrap">Dec 25, 2020</relative-time></span>
          </span>

          <a data-pjax href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h" class="ml-3 no-wrap Link--primary no-underline">
            <svg text="gray" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-history">
    <path fill-rule="evenodd" d="M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 01.75.75v2.992l2.028.812a.75.75 0 01-.557 1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 0 017.75 4z"></path>
</svg>
            <span class="d-none d-sm-inline">
              <strong>History</strong>
            </span>
          </a>
        </div>
      </div>

  </div>

  <div class="Box-body d-flex flex-items-center flex-auto border-bottom-0 flex-wrap" >
    <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default float-left mr-3" id="blob_contributors_box">
      <summary class="Link--primary">
        <svg text="gray" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-people">
    <path fill-rule="evenodd" d="M5.5 3.5a2 2 0 100 4 2 2 0 000-4zM2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.434-.44 5.01 5.01 0 00-2.56-3.012A3 3 0 0011 4z"></path>
</svg>
        <strong>19</strong>
        
        contributors
      </summary>
      <details-dialog
        class="Box Box--overlay d-flex flex-column anim-fade-in fast"
        aria-label="Users who have contributed to this file"
        src="/amrayn/easyloggingpp/contributors-list/master/src/easylogging++.h" preload>
        <div class="Box-header">
          <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
          </button>
          <h3 class="Box-title">
            Users who have contributed to this file
          </h3>
        </div>
        <include-fragment>
          <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="my-3 mx-auto d-block anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
        </include-fragment>
      </details-dialog>
    </details>
      <span class="">
    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/abumusamq/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=abumusamq">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1683515?s=48&amp;v=4" width="24" height="24" alt="@abumusamq" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/jsoref/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=jsoref">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/2119212?s=48&amp;v=4" width="24" height="24" alt="@jsoref" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/adah1972/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=adah1972">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/2137834?s=48&amp;v=4" width="24" height="24" alt="@adah1972" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/aparajita/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=aparajita">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/22218?s=48&amp;v=4" width="24" height="24" alt="@aparajita" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/moneromooo-monero/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=moneromooo-monero">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/8851073?s=48&amp;v=4" width="24" height="24" alt="@moneromooo-monero" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/markus-k/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=markus-k">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1889403?s=48&amp;v=4" width="24" height="24" alt="@markus-k" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/magistere/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=magistere">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/418773?s=48&amp;v=4" width="24" height="24" alt="@magistere" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/rsandila/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=rsandila">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/10147021?s=48&amp;v=4" width="24" height="24" alt="@rsandila" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/ndowens/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=ndowens">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/117743?s=48&amp;v=4" width="24" height="24" alt="@ndowens" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/MoroccanMalinois/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=MoroccanMalinois">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/22608168?s=48&amp;v=4" width="24" height="24" alt="@MoroccanMalinois" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/romariorios/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=romariorios">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/143262?s=48&amp;v=4" width="24" height="24" alt="@romariorios" /> 
</a>    <a class="avatar-link" data-hovercard-type="user" data-hovercard-url="/users/divinity76/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/amrayn/easyloggingpp/commits/master/src/easylogging%2B%2B.h?author=divinity76">
      <img class="avatar mr-2 avatar-user" src="https://avatars.githubusercontent.com/u/1874996?s=48&amp;v=4" width="24" height="24" alt="@divinity76" /> 
</a>
    <button data-toggle-for="blob_contributors_box" type="button" data-view-component="true" class="lh-default btn-link">  +7
  
</button></span>

  </div>
</div>







  
    <div data-target="readme-toc.content" class="Box mt-3 position-relative">
      
  <div
    class="Box-header js-blob-header py-2 pr-2 d-flex flex-shrink-0 flex-md-row flex-items-center"
    
  >


  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1">

      4576 lines (4291 sloc)
      <span class="file-info-divider"></span>
    176 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between hide-sm hide-md">
      

    <div class="BtnGroup">
      <a data-permalink-href="/amrayn/easyloggingpp/raw/8489989bb26c6371df103f6cbced3fbee1bc3c2f/src/easylogging%2B%2B.h" href="/amrayn/easyloggingpp/raw/master/src/easylogging%2B%2B.h" id="raw-url" data-view-component="true" class="js-permalink-replaceable-link btn-sm btn BtnGroup-item">  Raw
  
</a>        <a data-permalink-href="/amrayn/easyloggingpp/blame/8489989bb26c6371df103f6cbced3fbee1bc3c2f/src/easylogging%2B%2B.h" href="/amrayn/easyloggingpp/blame/master/src/easylogging%2B%2B.h" data-hotkey="b" data-view-component="true" class="js-update-url-with-hash js-permalink-replaceable-link btn-sm btn BtnGroup-item">  Blame
  
</a>    </div>

    <div>
          <a class="btn-octicon tooltipped tooltipped-nw js-remove-unless-platform"
             data-platforms="windows,mac"
             href="https://desktop.github.com"
             aria-label="Open this file in GitHub Desktop"
             data-ga-click="Repository, open with desktop">
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-desktop">
    <path fill-rule="evenodd" d="M1.75 2.5h12.5a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25zM14.25 1H1.75A1.75 1.75 0 000 2.75v7.5C0 11.216.784 12 1.75 12h3.727c-.1 1.041-.52 1.872-1.292 2.757A.75.75 0 004.75 16h6.5a.75.75 0 00.565-1.243c-.772-.885-1.193-1.716-1.292-2.757h3.727A1.75 1.75 0 0016 10.25v-7.5A1.75 1.75 0 0014.25 1zM9.018 12H6.982a5.72 5.72 0 01-.765 2.5h3.566a5.72 5.72 0 01-.765-2.5z"></path>
</svg>
          </a>

        
          <button class="btn-octicon disabled tooltipped tooltipped-nw" disabled
            aria-label="You must be signed in to make or propose changes" type="button">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-pencil">
    <path fill-rule="evenodd" d="M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z"></path>
</svg>
          </button>
          <button class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw" disabled
            aria-label="You must be signed in to make or propose changes" type="button">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-trash">
    <path fill-rule="evenodd" d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path>
</svg>
          </button>
    </div>
  </div>

    <div class="d-flex hide-lg hide-xl flex-order-2 flex-grow-0">
      <details class="dropdown details-reset details-overlay d-inline-block">
        <summary class="btn-octicon" aria-haspopup="true" aria-label="possible actions">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
        </summary>

        <ul class="dropdown-menu dropdown-menu-sw" style="width: 175px">
            <li>
                <a class="dropdown-item tooltipped tooltipped-nw js-remove-unless-platform"
                   data-platforms="windows,mac"
                   href="https://desktop.github.com"
                   data-ga-click="Repository, open with desktop">
                  Open with Desktop
                </a>
            </li>
          <li>
            <a class="dropdown-item" href="/amrayn/easyloggingpp/raw/master/src/easylogging%2B%2B.h">
              View raw
            </a>
          </li>
            <li>
                          </li>
            <li>
              <a class="dropdown-item" href="/amrayn/easyloggingpp/blame/master/src/easylogging%2B%2B.h">
                View blame
              </a>
            </li>

        </ul>
      </details>
    </div>
</div>


      
    <div itemprop="text" class="Box-body p-0 blob-wrapper data type-c  gist-border-0">

        
<div class="js-check-bidi js-blob-code-container blob-code-content">

  <template class="js-file-alert-template">
  <div data-view-component="true" class="flash flash-warn flash-full d-flex flex-items-center">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
  
    <span>
      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.
      <a href="https://github.co/hiddenchars" target="_blank">Learn more about bidirectional Unicode characters</a>
    </span>


  <div data-view-component="true" class="flash-action">      <a href="{{ revealButtonHref }}" data-view-component="true" class="btn-sm btn">  Show hidden characters
  
</a>
</div>
</div></template>
<template class="js-line-alert-template">
  <span aria-label="This line has hidden Unicode characters" data-view-component="true" class="line-alert tooltipped tooltipped-e">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
</span></template>

  <table class="highlight tab-size js-file-line-container js-code-nav-container js-tagsearch-file" data-tab-size="8" data-paste-markdown-skip data-tagsearch-lang="C++" data-tagsearch-path="src/easylogging++.h">
        <tr>
          <td id="L1" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1"></td>
          <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L2" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2"></td>
          <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  Bismillah ar-Rahmaan ar-Raheem</span></td>
        </tr>
        <tr>
          <td id="L3" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3"></td>
          <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4"></td>
          <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  Easylogging++ v9.96.7</span></td>
        </tr>
        <tr>
          <td id="L5" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="5"></td>
          <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  Single-header only, cross-platform logging library for C++ applications</span></td>
        </tr>
        <tr>
          <td id="L6" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="6"></td>
          <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L7" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="7"></td>
          <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  Copyright (c) 2012-2018 Amrayn Web Services</span></td>
        </tr>
        <tr>
          <td id="L8" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="8"></td>
          <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  Copyright (c) 2012-2018 @abumusamq</span></td>
        </tr>
        <tr>
          <td id="L9" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="9"></td>
          <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L10" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="10"></td>
          <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  This library is released under the MIT Licence.</span></td>
        </tr>
        <tr>
          <td id="L11" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="11"></td>
          <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  https://github.com/amrayn/easyloggingpp/blob/master/LICENSE</span></td>
        </tr>
        <tr>
          <td id="L12" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="12"></td>
          <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L13" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="13"></td>
          <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  https://amrayn.com</span></td>
        </tr>
        <tr>
          <td id="L14" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="14"></td>
          <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>  http://muflihun.com</span></td>
        </tr>
        <tr>
          <td id="L15" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="15"></td>
          <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L16" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="16"></td>
          <td id="LC16" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L17" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="17"></td>
          <td id="LC17" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifndef</span> EASYLOGGINGPP_H</td>
        </tr>
        <tr>
          <td id="L18" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="18"></td>
          <td id="LC18" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">EASYLOGGINGPP_H</span></td>
        </tr>
        <tr>
          <td id="L19" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="19"></td>
          <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Compilers and C++0x/C++11 Evaluation</span></td>
        </tr>
        <tr>
          <td id="L20" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="20"></td>
          <td id="LC20" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> __cplusplus &gt;= 201103L</td>
        </tr>
        <tr>
          <td id="L21" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="21"></td>
          <td id="LC21" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_CXX11</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L22" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="22"></td>
          <td id="LC22" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> __cplusplus &gt;= 201103L</span></td>
        </tr>
        <tr>
          <td id="L23" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="23"></td>
          <td id="LC23" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__GNUC__))</td>
        </tr>
        <tr>
          <td id="L24" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="24"></td>
          <td id="LC24" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_GCC</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L25" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="25"></td>
          <td id="LC25" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L26" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="26"></td>
          <td id="LC26" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_GCC</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L27" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="27"></td>
          <td id="LC27" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L28" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="28"></td>
          <td id="LC28" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_GCC</td>
        </tr>
        <tr>
          <td id="L29" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="29"></td>
          <td id="LC29" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_GCC_VERSION</span> (__GNUC__ * <span class="pl-c1">10000</span> \</td>
        </tr>
        <tr>
          <td id="L30" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="30"></td>
          <td id="LC30" class="blob-code blob-code-inner js-file-line">+ __GNUC_MINOR__ * <span class="pl-c1">100</span> \</td>
        </tr>
        <tr>
          <td id="L31" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="31"></td>
          <td id="LC31" class="blob-code blob-code-inner js-file-line">+ __GNUC_PATCHLEVEL__)</td>
        </tr>
        <tr>
          <td id="L32" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="32"></td>
          <td id="LC32" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(__GXX_EXPERIMENTAL_CXX0X__)</td>
        </tr>
        <tr>
          <td id="L33" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="33"></td>
          <td id="LC33" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_CXX0X</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L34" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="34"></td>
          <td id="LC34" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L35" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="35"></td>
          <td id="LC35" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L36" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="36"></td>
          <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Visual C++</span></td>
        </tr>
        <tr>
          <td id="L37" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="37"></td>
          <td id="LC37" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(_MSC_VER)</td>
        </tr>
        <tr>
          <td id="L38" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="38"></td>
          <td id="LC38" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_MSVC</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L39" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="39"></td>
          <td id="LC39" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L40" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="40"></td>
          <td id="LC40" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_MSVC</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L41" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="41"></td>
          <td id="LC41" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L42" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="42"></td>
          <td id="LC42" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_CRT_DBG_WARNINGS</span> ELPP_COMPILER_MSVC</td>
        </tr>
        <tr>
          <td id="L43" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="43"></td>
          <td id="LC43" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_MSVC</td>
        </tr>
        <tr>
          <td id="L44" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="44"></td>
          <td id="LC44" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> (_MSC_VER == 1600)</td>
        </tr>
        <tr>
          <td id="L45" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="45"></td>
          <td id="LC45" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_CXX0X</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L46" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="46"></td>
          <td id="LC46" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span>(_MSC_VER &gt;= 1700)</td>
        </tr>
        <tr>
          <td id="L47" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="47"></td>
          <td id="LC47" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_CXX11</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L48" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="48"></td>
          <td id="LC48" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L49" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="49"></td>
          <td id="LC49" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L50" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="50"></td>
          <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Clang++</span></td>
        </tr>
        <tr>
          <td id="L51" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="51"></td>
          <td id="LC51" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__clang__) &amp;&amp; (__clang__ == 1))</td>
        </tr>
        <tr>
          <td id="L52" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="52"></td>
          <td id="LC52" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_CLANG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L53" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="53"></td>
          <td id="LC53" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L54" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="54"></td>
          <td id="LC54" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_CLANG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L55" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="55"></td>
          <td id="LC55" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L56" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="56"></td>
          <td id="LC56" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_CLANG</td>
        </tr>
        <tr>
          <td id="L57" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="57"></td>
          <td id="LC57" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> __has_include(&lt;thread&gt;)</td>
        </tr>
        <tr>
          <td id="L58" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="58"></td>
          <td id="LC58" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cstddef<span class="pl-pds">&gt;</span></span> <span class="pl-c"><span class="pl-c">//</span> Make __GLIBCXX__ defined when using libstdc++</span></td>
        </tr>
        <tr>
          <td id="L59" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="59"></td>
          <td id="LC59" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">if</span> !defined(__GLIBCXX__) || __GLIBCXX__ &gt;= 20150426</td>
        </tr>
        <tr>
          <td id="L60" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="60"></td>
          <td id="LC60" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">define</span> <span class="pl-en">ELPP_CLANG_SUPPORTS_THREAD</span></td>
        </tr>
        <tr>
          <td id="L61" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="61"></td>
          <td id="LC61" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !defined(__GLIBCXX__) || __GLIBCXX__ &gt;= 20150426</span></td>
        </tr>
        <tr>
          <td id="L62" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="62"></td>
          <td id="LC62" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> __has_include(&lt;thread&gt;)</span></td>
        </tr>
        <tr>
          <td id="L63" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="63"></td>
          <td id="LC63" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L64" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="64"></td>
          <td id="LC64" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__MINGW32__) || defined(__MINGW64__))</td>
        </tr>
        <tr>
          <td id="L65" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="65"></td>
          <td id="LC65" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_MINGW</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L66" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="66"></td>
          <td id="LC66" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L67" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="67"></td>
          <td id="LC67" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_MINGW</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L68" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="68"></td>
          <td id="LC68" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L69" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="69"></td>
          <td id="LC69" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__CYGWIN__) &amp;&amp; (__CYGWIN__ == 1))</td>
        </tr>
        <tr>
          <td id="L70" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="70"></td>
          <td id="LC70" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_CYGWIN</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L71" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="71"></td>
          <td id="LC71" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L72" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="72"></td>
          <td id="LC72" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_CYGWIN</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L73" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="73"></td>
          <td id="LC73" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L74" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="74"></td>
          <td id="LC74" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__INTEL_COMPILER))</td>
        </tr>
        <tr>
          <td id="L75" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="75"></td>
          <td id="LC75" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_INTEL</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L76" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="76"></td>
          <td id="LC76" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L77" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="77"></td>
          <td id="LC77" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COMPILER_INTEL</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L78" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="78"></td>
          <td id="LC78" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L79" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="79"></td>
          <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Operating System Evaluation</span></td>
        </tr>
        <tr>
          <td id="L80" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="80"></td>
          <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Windows</span></td>
        </tr>
        <tr>
          <td id="L81" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="81"></td>
          <td id="LC81" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(_WIN32) || defined(_WIN64))</td>
        </tr>
        <tr>
          <td id="L82" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="82"></td>
          <td id="LC82" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_WINDOWS</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L83" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="83"></td>
          <td id="LC83" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L84" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="84"></td>
          <td id="LC84" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_WINDOWS</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L85" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="85"></td>
          <td id="LC85" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L86" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="86"></td>
          <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Linux</span></td>
        </tr>
        <tr>
          <td id="L87" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="87"></td>
          <td id="LC87" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__linux) || defined(__linux__))</td>
        </tr>
        <tr>
          <td id="L88" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="88"></td>
          <td id="LC88" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_LINUX</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L89" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="89"></td>
          <td id="LC89" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L90" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="90"></td>
          <td id="LC90" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_LINUX</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L91" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="91"></td>
          <td id="LC91" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L92" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="92"></td>
          <td id="LC92" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__APPLE__))</td>
        </tr>
        <tr>
          <td id="L93" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="93"></td>
          <td id="LC93" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_MAC</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L94" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="94"></td>
          <td id="LC94" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L95" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="95"></td>
          <td id="LC95" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_MAC</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L96" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="96"></td>
          <td id="LC96" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L97" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="97"></td>
          <td id="LC97" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__FreeBSD__) || defined(__FreeBSD_kernel__))</td>
        </tr>
        <tr>
          <td id="L98" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="98"></td>
          <td id="LC98" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_FREEBSD</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L99" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="99"></td>
          <td id="LC99" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="100"></td>
          <td id="LC100" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_FREEBSD</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="101"></td>
          <td id="LC101" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="102"></td>
          <td id="LC102" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__sun))</td>
        </tr>
        <tr>
          <td id="L103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="103"></td>
          <td id="LC103" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_SOLARIS</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="104"></td>
          <td id="LC104" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="105"></td>
          <td id="LC105" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_SOLARIS</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="106"></td>
          <td id="LC106" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="107"></td>
          <td id="LC107" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(_AIX))</td>
        </tr>
        <tr>
          <td id="L108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="108"></td>
          <td id="LC108" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_AIX</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="109"></td>
          <td id="LC109" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="110"></td>
          <td id="LC110" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_AIX</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="111"></td>
          <td id="LC111" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="112"></td>
          <td id="LC112" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__NetBSD__))</td>
        </tr>
        <tr>
          <td id="L113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="113"></td>
          <td id="LC113" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_NETBSD</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="114"></td>
          <td id="LC114" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="115"></td>
          <td id="LC115" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_NETBSD</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="116"></td>
          <td id="LC116" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="117"></td>
          <td id="LC117" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(__EMSCRIPTEN__)</td>
        </tr>
        <tr>
          <td id="L118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="118"></td>
          <td id="LC118" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_EMSCRIPTEN</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="119"></td>
          <td id="LC119" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="120"></td>
          <td id="LC120" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_EMSCRIPTEN</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="121"></td>
          <td id="LC121" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="122"></td>
          <td id="LC122" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__QNX__) || defined(__QNXNTO__))</td>
        </tr>
        <tr>
          <td id="L123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="123"></td>
          <td id="LC123" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_QNX</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="124"></td>
          <td id="LC124" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="125"></td>
          <td id="LC125" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_QNX</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="126"></td>
          <td id="LC126" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="127"></td>
          <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Unix</span></td>
        </tr>
        <tr>
          <td id="L128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="128"></td>
          <td id="LC128" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ((ELPP_OS_LINUX || ELPP_OS_MAC || ELPP_OS_FREEBSD || ELPP_OS_NETBSD || ELPP_OS_SOLARIS || ELPP_OS_AIX || ELPP_OS_EMSCRIPTEN || ELPP_OS_QNX) &amp;&amp; (!ELPP_OS_WINDOWS))</td>
        </tr>
        <tr>
          <td id="L129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="129"></td>
          <td id="LC129" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_UNIX</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="130"></td>
          <td id="LC130" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="131"></td>
          <td id="LC131" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_UNIX</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="132"></td>
          <td id="LC132" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="133"></td>
          <td id="LC133" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(__ANDROID__))</td>
        </tr>
        <tr>
          <td id="L134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="134"></td>
          <td id="LC134" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_ANDROID</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="135"></td>
          <td id="LC135" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="136"></td>
          <td id="LC136" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_ANDROID</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="137"></td>
          <td id="LC137" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="138"></td>
          <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Evaluating Cygwin as *nix OS</span></td>
        </tr>
        <tr>
          <td id="L139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="139"></td>
          <td id="LC139" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !ELPP_OS_UNIX &amp;&amp; !ELPP_OS_WINDOWS &amp;&amp; ELPP_CYGWIN</td>
        </tr>
        <tr>
          <td id="L140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="140"></td>
          <td id="LC140" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="141"></td>
          <td id="LC141" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> ELPP_OS_LINUX</td>
        </tr>
        <tr>
          <td id="L142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="142"></td>
          <td id="LC142" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_UNIX</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="143"></td>
          <td id="LC143" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_OS_LINUX</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="144"></td>
          <td id="LC144" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span>  !ELPP_OS_UNIX &amp;&amp; !ELPP_OS_WINDOWS &amp;&amp; ELPP_CYGWIN</span></td>
        </tr>
        <tr>
          <td id="L145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="145"></td>
          <td id="LC145" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_INTERNAL_DEBUGGING_OUT_INFO)</td>
        </tr>
        <tr>
          <td id="L146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="146"></td>
          <td id="LC146" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_DEBUGGING_OUT_INFO</span> std::cout</td>
        </tr>
        <tr>
          <td id="L147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="147"></td>
          <td id="LC147" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !defined(ELPP_INTERNAL_DEBUGGING_OUT)</span></td>
        </tr>
        <tr>
          <td id="L148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="148"></td>
          <td id="LC148" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_INTERNAL_DEBUGGING_OUT_ERROR)</td>
        </tr>
        <tr>
          <td id="L149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="149"></td>
          <td id="LC149" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_DEBUGGING_OUT_ERROR</span> std::cerr</td>
        </tr>
        <tr>
          <td id="L150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="150"></td>
          <td id="LC150" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !defined(ELPP_INTERNAL_DEBUGGING_OUT)</span></td>
        </tr>
        <tr>
          <td id="L151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="151"></td>
          <td id="LC151" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_INTERNAL_DEBUGGING_ENDL)</td>
        </tr>
        <tr>
          <td id="L152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="152"></td>
          <td id="LC152" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_DEBUGGING_ENDL</span> std::endl</td>
        </tr>
        <tr>
          <td id="L153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="153"></td>
          <td id="LC153" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !defined(ELPP_INTERNAL_DEBUGGING_OUT)</span></td>
        </tr>
        <tr>
          <td id="L154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="154"></td>
          <td id="LC154" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_INTERNAL_DEBUGGING_MSG)</td>
        </tr>
        <tr>
          <td id="L155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="155"></td>
          <td id="LC155" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_DEBUGGING_MSG</span>(<span class="pl-v">msg</span>) msg</td>
        </tr>
        <tr>
          <td id="L156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="156"></td>
          <td id="LC156" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> !defined(ELPP_INTERNAL_DEBUGGING_OUT)</span></td>
        </tr>
        <tr>
          <td id="L157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="157"></td>
          <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Internal Assertions and errors</span></td>
        </tr>
        <tr>
          <td id="L158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="158"></td>
          <td id="LC158" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_DISABLE_ASSERT)</td>
        </tr>
        <tr>
          <td id="L159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="159"></td>
          <td id="LC159" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> (defined(ELPP_DEBUG_ASSERT_FAILURE))</td>
        </tr>
        <tr>
          <td id="L160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="160"></td>
          <td id="LC160" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_ASSERT</span>(<span class="pl-v">expr, msg</span>) <span class="pl-k">if</span> (!(expr)) { \</td>
        </tr>
        <tr>
          <td id="L161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="161"></td>
          <td id="LC161" class="blob-code blob-code-inner js-file-line">std::stringstream internalInfoStream; internalInfoStream &lt;&lt; msg; \</td>
        </tr>
        <tr>
          <td id="L162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="162"></td>
          <td id="LC162" class="blob-code blob-code-inner js-file-line">ELPP_INTERNAL_DEBUGGING_OUT_ERROR \</td>
        </tr>
        <tr>
          <td id="L163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="163"></td>
          <td id="LC163" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>EASYLOGGING++ ASSERTION FAILED (LINE: <span class="pl-pds">&quot;</span></span> &lt;&lt; __LINE__ &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>) [<span class="pl-pds">&quot;</span></span> #expr &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] WITH MESSAGE <span class="pl-cce">\&quot;</span><span class="pl-pds">&quot;</span></span> \</td>
        </tr>
        <tr>
          <td id="L164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="164"></td>
          <td id="LC164" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-c1">ELPP_INTERNAL_DEBUGGING_MSG</span>(internalInfoStream.<span class="pl-c1">str</span>()) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\&quot;</span><span class="pl-pds">&quot;</span></span> &lt;&lt; ELPP_INTERNAL_DEBUGGING_ENDL; <span class="pl-c1">base::utils::abort</span>(<span class="pl-c1">1</span>, \</td>
        </tr>
        <tr>
          <td id="L165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="165"></td>
          <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ELPP Assertion failure, please define ELPP_DEBUG_ASSERT_FAILURE<span class="pl-pds">&quot;</span></span>); }</td>
        </tr>
        <tr>
          <td id="L166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="166"></td>
          <td id="LC166" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="167"></td>
          <td id="LC167" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_ASSERT</span>(<span class="pl-v">expr, msg</span>) <span class="pl-k">if</span> (!(expr)) { \</td>
        </tr>
        <tr>
          <td id="L168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="168"></td>
          <td id="LC168" class="blob-code blob-code-inner js-file-line">std::stringstream internalInfoStream; internalInfoStream &lt;&lt; msg; \</td>
        </tr>
        <tr>
          <td id="L169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="169"></td>
          <td id="LC169" class="blob-code blob-code-inner js-file-line">ELPP_INTERNAL_DEBUGGING_OUT_ERROR\</td>
        </tr>
        <tr>
          <td id="L170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="170"></td>
          <td id="LC170" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>ASSERTION FAILURE FROM EASYLOGGING++ (LINE: <span class="pl-pds">&quot;</span></span> \</td>
        </tr>
        <tr>
          <td id="L171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="171"></td>
          <td id="LC171" class="blob-code blob-code-inner js-file-line">&lt;&lt; __LINE__ &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>) [<span class="pl-pds">&quot;</span></span> #expr &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] WITH MESSAGE <span class="pl-cce">\&quot;</span><span class="pl-pds">&quot;</span></span> &lt;&lt; <span class="pl-c1">ELPP_INTERNAL_DEBUGGING_MSG</span>(internalInfoStream.<span class="pl-c1">str</span>()) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\&quot;</span><span class="pl-pds">&quot;</span></span> \</td>
        </tr>
        <tr>
          <td id="L172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="172"></td>
          <td id="LC172" class="blob-code blob-code-inner js-file-line">&lt;&lt; ELPP_INTERNAL_DEBUGGING_ENDL; }</td>
        </tr>
        <tr>
          <td id="L173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="173"></td>
          <td id="LC173" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (defined(ELPP_DEBUG_ASSERT_FAILURE))</span></td>
        </tr>
        <tr>
          <td id="L174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="174"></td>
          <td id="LC174" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="175"></td>
          <td id="LC175" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_ASSERT</span>(<span class="pl-v">x, y</span>)</td>
        </tr>
        <tr>
          <td id="L176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="176"></td>
          <td id="LC176" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span>(!defined(ELPP_DISABLE_ASSERT)</span></td>
        </tr>
        <tr>
          <td id="L177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="177"></td>
          <td id="LC177" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_MSVC</td>
        </tr>
        <tr>
          <td id="L178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="178"></td>
          <td id="LC178" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_DEBUGGING_WRITE_PERROR</span> \</td>
        </tr>
        <tr>
          <td id="L179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="179"></td>
          <td id="LC179" class="blob-code blob-code-inner js-file-line">{ <span class="pl-k">char</span> buff[<span class="pl-c1">256</span>]; <span class="pl-c1">strerror_s</span>(buff, <span class="pl-c1">256</span>, errno); \</td>
        </tr>
        <tr>
          <td id="L180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="180"></td>
          <td id="LC180" class="blob-code blob-code-inner js-file-line">ELPP_INTERNAL_DEBUGGING_OUT_ERROR &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span> &lt;&lt; buff &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> [<span class="pl-pds">&quot;</span></span> &lt;&lt; errno &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>;} (<span class="pl-k">void</span>)<span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="181"></td>
          <td id="LC181" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="182"></td>
          <td id="LC182" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_DEBUGGING_WRITE_PERROR</span> \</td>
        </tr>
        <tr>
          <td id="L183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="183"></td>
          <td id="LC183" class="blob-code blob-code-inner js-file-line">ELPP_INTERNAL_DEBUGGING_OUT_ERROR &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span> &lt;&lt; strerror(errno) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> [<span class="pl-pds">&quot;</span></span> &lt;&lt; errno &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>; (<span class="pl-k">void</span>)<span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="184"></td>
          <td id="LC184" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_COMPILER_MSVC</span></td>
        </tr>
        <tr>
          <td id="L185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="185"></td>
          <td id="LC185" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_DEBUG_ERRORS)</td>
        </tr>
        <tr>
          <td id="L186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="186"></td>
          <td id="LC186" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> !defined(ELPP_INTERNAL_ERROR)</td>
        </tr>
        <tr>
          <td id="L187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="187"></td>
          <td id="LC187" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_ERROR</span>(<span class="pl-v">msg, pe</span>) { \</td>
        </tr>
        <tr>
          <td id="L188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="188"></td>
          <td id="LC188" class="blob-code blob-code-inner js-file-line">std::stringstream internalInfoStream; internalInfoStream &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ERROR&gt; <span class="pl-pds">&quot;</span></span> &lt;&lt; msg; \</td>
        </tr>
        <tr>
          <td id="L189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="189"></td>
          <td id="LC189" class="blob-code blob-code-inner js-file-line">ELPP_INTERNAL_DEBUGGING_OUT_ERROR \</td>
        </tr>
        <tr>
          <td id="L190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="190"></td>
          <td id="LC190" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>ERROR FROM EASYLOGGING++ (LINE: <span class="pl-pds">&quot;</span></span> &lt;&lt; __LINE__ &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>) <span class="pl-pds">&quot;</span></span> \</td>
        </tr>
        <tr>
          <td id="L191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="191"></td>
          <td id="LC191" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-c1">ELPP_INTERNAL_DEBUGGING_MSG</span>(internalInfoStream.<span class="pl-c1">str</span>()) &lt;&lt; ELPP_INTERNAL_DEBUGGING_ENDL; \</td>
        </tr>
        <tr>
          <td id="L192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="192"></td>
          <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (pe) { ELPP_INTERNAL_DEBUGGING_OUT_ERROR &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>    <span class="pl-pds">&quot;</span></span>; ELPP_INTERNAL_DEBUGGING_WRITE_PERROR; }} (<span class="pl-k">void</span>)<span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="193"></td>
          <td id="LC193" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="194"></td>
          <td id="LC194" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="195"></td>
          <td id="LC195" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> ELPP_INTERNAL_INFO</td>
        </tr>
        <tr>
          <td id="L196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="196"></td>
          <td id="LC196" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_ERROR</span>(<span class="pl-v">msg, pe</span>)</td>
        </tr>
        <tr>
          <td id="L197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="197"></td>
          <td id="LC197" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_DEBUG_ERRORS)</span></td>
        </tr>
        <tr>
          <td id="L198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="198"></td>
          <td id="LC198" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(ELPP_DEBUG_INFO))</td>
        </tr>
        <tr>
          <td id="L199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="199"></td>
          <td id="LC199" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> !(defined(ELPP_INTERNAL_INFO_LEVEL))</td>
        </tr>
        <tr>
          <td id="L200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="200"></td>
          <td id="LC200" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_INFO_LEVEL</span> <span class="pl-c1">9</span></td>
        </tr>
        <tr>
          <td id="L201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="201"></td>
          <td id="LC201" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> !(defined(ELPP_INTERNAL_INFO_LEVEL))</span></td>
        </tr>
        <tr>
          <td id="L202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="202"></td>
          <td id="LC202" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> !defined(ELPP_INTERNAL_INFO)</td>
        </tr>
        <tr>
          <td id="L203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="203"></td>
          <td id="LC203" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_INFO</span>(<span class="pl-v">lvl, msg</span>) { <span class="pl-k">if</span> (lvl &lt;= ELPP_INTERNAL_INFO_LEVEL) { \</td>
        </tr>
        <tr>
          <td id="L204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="204"></td>
          <td id="LC204" class="blob-code blob-code-inner js-file-line">std::stringstream internalInfoStream; internalInfoStream &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;INFO&gt; <span class="pl-pds">&quot;</span></span> &lt;&lt; msg; \</td>
        </tr>
        <tr>
          <td id="L205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="205"></td>
          <td id="LC205" class="blob-code blob-code-inner js-file-line">ELPP_INTERNAL_DEBUGGING_OUT_INFO &lt;&lt; <span class="pl-c1">ELPP_INTERNAL_DEBUGGING_MSG</span>(internalInfoStream.<span class="pl-c1">str</span>()) \</td>
        </tr>
        <tr>
          <td id="L206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="206"></td>
          <td id="LC206" class="blob-code blob-code-inner js-file-line">&lt;&lt; ELPP_INTERNAL_DEBUGGING_ENDL; }}</td>
        </tr>
        <tr>
          <td id="L207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="207"></td>
          <td id="LC207" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="208"></td>
          <td id="LC208" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="209"></td>
          <td id="LC209" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> ELPP_INTERNAL_INFO</td>
        </tr>
        <tr>
          <td id="L210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="210"></td>
          <td id="LC210" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INTERNAL_INFO</span>(<span class="pl-v">lvl, msg</span>)</td>
        </tr>
        <tr>
          <td id="L211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="211"></td>
          <td id="LC211" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (defined(ELPP_DEBUG_INFO))</span></td>
        </tr>
        <tr>
          <td id="L212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="212"></td>
          <td id="LC212" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (defined(ELPP_FEATURE_ALL)) || (defined(ELPP_FEATURE_CRASH_LOG))</td>
        </tr>
        <tr>
          <td id="L213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="213"></td>
          <td id="LC213" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> (ELPP_COMPILER_GCC &amp;&amp; !ELPP_MINGW &amp;&amp; !ELPP_CYGWIN &amp;&amp; !ELPP_OS_ANDROID &amp;&amp; !ELPP_OS_EMSCRIPTEN &amp;&amp; !ELPP_OS_QNX)</td>
        </tr>
        <tr>
          <td id="L214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="214"></td>
          <td id="LC214" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_STACKTRACE</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="215"></td>
          <td id="LC215" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="216"></td>
          <td id="LC216" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">if</span> ELPP_COMPILER_MSVC</td>
        </tr>
        <tr>
          <td id="L217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="217"></td>
          <td id="LC217" class="blob-code blob-code-inner js-file-line">#         <span class="pl-k">pragma</span> message(&quot;Stack trace not available for this compiler&quot;)</td>
        </tr>
        <tr>
          <td id="L218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="218"></td>
          <td id="LC218" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="219"></td>
          <td id="LC219" class="blob-code blob-code-inner js-file-line">#         <span class="pl-k">warning</span> &quot;Stack trace not available for this compiler&quot;;</td>
        </tr>
        <tr>
          <td id="L220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="220"></td>
          <td id="LC220" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_COMPILER_MSVC</span></td>
        </tr>
        <tr>
          <td id="L221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="221"></td>
          <td id="LC221" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_STACKTRACE</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="222"></td>
          <td id="LC222" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_COMPILER_GCC</span></td>
        </tr>
        <tr>
          <td id="L223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="223"></td>
          <td id="LC223" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="224"></td>
          <td id="LC224" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_STACKTRACE</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="225"></td>
          <td id="LC225" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (defined(ELPP_FEATURE_ALL)) || (defined(ELPP_FEATURE_CRASH_LOG))</span></td>
        </tr>
        <tr>
          <td id="L226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="226"></td>
          <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Miscellaneous macros</span></td>
        </tr>
        <tr>
          <td id="L227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="227"></td>
          <td id="LC227" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_UNUSED</span>(<span class="pl-v">x</span>) (<span class="pl-k">void</span>)x</td>
        </tr>
        <tr>
          <td id="L228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="228"></td>
          <td id="LC228" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="229"></td>
          <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Log file permissions for unix-based systems</span></td>
        </tr>
        <tr>
          <td id="L230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="230"></td>
          <td id="LC230" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_LOG_PERMS</span> S_IRUSR | S_IWUSR | S_IXUSR | S_IWGRP | S_IRGRP | S_IXGRP | S_IWOTH | S_IXOTH</td>
        </tr>
        <tr>
          <td id="L231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="231"></td>
          <td id="LC231" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="232"></td>
          <td id="LC232" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_AS_DLL) &amp;&amp; ELPP_COMPILER_MSVC</td>
        </tr>
        <tr>
          <td id="L233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="233"></td>
          <td id="LC233" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_EXPORT_SYMBOLS)</td>
        </tr>
        <tr>
          <td id="L234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="234"></td>
          <td id="LC234" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_EXPORT</span> <span class="pl-en">__declspec</span>(dllexport)</td>
        </tr>
        <tr>
          <td id="L235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="235"></td>
          <td id="LC235" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="236"></td>
          <td id="LC236" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_EXPORT</span> <span class="pl-en">__declspec</span>(dllimport)</td>
        </tr>
        <tr>
          <td id="L237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="237"></td>
          <td id="LC237" class="blob-code blob-code-inner js-file-line">#  endif  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_EXPORT_SYMBOLS)</span></td>
        </tr>
        <tr>
          <td id="L238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="238"></td>
          <td id="LC238" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="239"></td>
          <td id="LC239" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_EXPORT</span></td>
        </tr>
        <tr>
          <td id="L240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="240"></td>
          <td id="LC240" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_AS_DLL) &amp;&amp; ELPP_COMPILER_MSVC</span></td>
        </tr>
        <tr>
          <td id="L241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="241"></td>
          <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Some special functions that are VC++ specific</span></td>
        </tr>
        <tr>
          <td id="L242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="242"></td>
          <td id="LC242" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> STRTOK</td>
        </tr>
        <tr>
          <td id="L243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="243"></td>
          <td id="LC243" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> STRERROR</td>
        </tr>
        <tr>
          <td id="L244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="244"></td>
          <td id="LC244" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> STRCAT</td>
        </tr>
        <tr>
          <td id="L245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="245"></td>
          <td id="LC245" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> STRCPY</td>
        </tr>
        <tr>
          <td id="L246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="246"></td>
          <td id="LC246" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_CRT_DBG_WARNINGS</td>
        </tr>
        <tr>
          <td id="L247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="247"></td>
          <td id="LC247" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRTOK</span>(<span class="pl-v">a, b, c</span>) strtok_s(a, b, c)</td>
        </tr>
        <tr>
          <td id="L248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="248"></td>
          <td id="LC248" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRERROR</span>(<span class="pl-v">a, b, c</span>) strerror_s(a, b, c)</td>
        </tr>
        <tr>
          <td id="L249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="249"></td>
          <td id="LC249" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRCAT</span>(<span class="pl-v">a, b, len</span>) strcat_s(a, len, b)</td>
        </tr>
        <tr>
          <td id="L250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="250"></td>
          <td id="LC250" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRCPY</span>(<span class="pl-v">a, b, len</span>) strcpy_s(a, len, b)</td>
        </tr>
        <tr>
          <td id="L251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="251"></td>
          <td id="LC251" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="252"></td>
          <td id="LC252" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRTOK</span>(<span class="pl-v">a, b, c</span>) strtok(a, b)</td>
        </tr>
        <tr>
          <td id="L253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="253"></td>
          <td id="LC253" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRERROR</span>(<span class="pl-v">a, b, c</span>) strerror(c)</td>
        </tr>
        <tr>
          <td id="L254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="254"></td>
          <td id="LC254" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRCAT</span>(<span class="pl-v">a, b, len</span>) strcat(a, b)</td>
        </tr>
        <tr>
          <td id="L255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="255"></td>
          <td id="LC255" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">STRCPY</span>(<span class="pl-v">a, b, len</span>) strcpy(a, b)</td>
        </tr>
        <tr>
          <td id="L256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="256"></td>
          <td id="LC256" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="257"></td>
          <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Compiler specific support evaluations</span></td>
        </tr>
        <tr>
          <td id="L258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="258"></td>
          <td id="LC258" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (ELPP_MINGW &amp;&amp; !defined(ELPP_FORCE_USE_STD_THREAD))</td>
        </tr>
        <tr>
          <td id="L259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="259"></td>
          <td id="LC259" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_USE_STD_THREADING</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="260"></td>
          <td id="LC260" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="261"></td>
          <td id="LC261" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ((ELPP_COMPILER_CLANG &amp;&amp; defined(ELPP_CLANG_SUPPORTS_THREAD)) || \</td>
        </tr>
        <tr>
          <td id="L262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="262"></td>
          <td id="LC262" class="blob-code blob-code-inner js-file-line">       (!ELPP_COMPILER_CLANG &amp;&amp; defined(ELPP_CXX11)) || \</td>
        </tr>
        <tr>
          <td id="L263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="263"></td>
          <td id="LC263" class="blob-code blob-code-inner js-file-line">       <span class="pl-en">defined</span>(ELPP_FORCE_USE_STD_THREAD))</td>
        </tr>
        <tr>
          <td id="L264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="264"></td>
          <td id="LC264" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_USE_STD_THREADING</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="265"></td>
          <td id="LC265" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="266"></td>
          <td id="LC266" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_USE_STD_THREADING</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="267"></td>
          <td id="LC267" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="268"></td>
          <td id="LC268" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="269"></td>
          <td id="LC269" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_FINAL</td>
        </tr>
        <tr>
          <td id="L270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="270"></td>
          <td id="LC270" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_INTEL || (ELPP_GCC_VERSION &lt; 40702)</td>
        </tr>
        <tr>
          <td id="L271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="271"></td>
          <td id="LC271" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FINAL</span></td>
        </tr>
        <tr>
          <td id="L272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="272"></td>
          <td id="LC272" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="273"></td>
          <td id="LC273" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FINAL</span> <span class="pl-k">final</span></td>
        </tr>
        <tr>
          <td id="L274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="274"></td>
          <td id="LC274" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_COMPILER_INTEL || (ELPP_GCC_VERSION &lt; 40702)</span></td>
        </tr>
        <tr>
          <td id="L275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="275"></td>
          <td id="LC275" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_EXPERIMENTAL_ASYNC)</td>
        </tr>
        <tr>
          <td id="L276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="276"></td>
          <td id="LC276" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_ASYNC_LOGGING</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="277"></td>
          <td id="LC277" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="278"></td>
          <td id="LC278" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_ASYNC_LOGGING</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="279"></td>
          <td id="LC279" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_EXPERIMENTAL_ASYNC)</span></td>
        </tr>
        <tr>
          <td id="L280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="280"></td>
          <td id="LC280" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_THREAD_SAFE) || ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="281"></td>
          <td id="LC281" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_THREADING_ENABLED</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="282"></td>
          <td id="LC282" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="283"></td>
          <td id="LC283" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_THREADING_ENABLED</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="284"></td>
          <td id="LC284" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_THREAD_SAFE) || ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="285"></td>
          <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Function macro ELPP_FUNC</span></td>
        </tr>
        <tr>
          <td id="L286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="286"></td>
          <td id="LC286" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_FUNC</td>
        </tr>
        <tr>
          <td id="L287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="287"></td>
          <td id="LC287" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_MSVC  <span class="pl-c"><span class="pl-c">//</span> Visual C++</span></td>
        </tr>
        <tr>
          <td id="L288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="288"></td>
          <td id="LC288" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FUNC</span> __FUNCSIG__</td>
        </tr>
        <tr>
          <td id="L289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="289"></td>
          <td id="LC289" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> ELPP_COMPILER_GCC  <span class="pl-c"><span class="pl-c">//</span> GCC</span></td>
        </tr>
        <tr>
          <td id="L290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="290"></td>
          <td id="LC290" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FUNC</span> __PRETTY_FUNCTION__</td>
        </tr>
        <tr>
          <td id="L291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="291"></td>
          <td id="LC291" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> ELPP_COMPILER_INTEL  <span class="pl-c"><span class="pl-c">//</span> Intel C++</span></td>
        </tr>
        <tr>
          <td id="L292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="292"></td>
          <td id="LC292" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FUNC</span> __PRETTY_FUNCTION__</td>
        </tr>
        <tr>
          <td id="L293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="293"></td>
          <td id="LC293" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> ELPP_COMPILER_CLANG  <span class="pl-c"><span class="pl-c">//</span> Clang++</span></td>
        </tr>
        <tr>
          <td id="L294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="294"></td>
          <td id="LC294" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FUNC</span> __PRETTY_FUNCTION__</td>
        </tr>
        <tr>
          <td id="L295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="295"></td>
          <td id="LC295" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="296"></td>
          <td id="LC296" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(__func__)</td>
        </tr>
        <tr>
          <td id="L297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="297"></td>
          <td id="LC297" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_FUNC</span> __func__</td>
        </tr>
        <tr>
          <td id="L298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="298"></td>
          <td id="LC298" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="299"></td>
          <td id="LC299" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_FUNC</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="300"></td>
          <td id="LC300" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(__func__)</span></td>
        </tr>
        <tr>
          <td id="L301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="301"></td>
          <td id="LC301" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(_MSC_VER)</span></td>
        </tr>
        <tr>
          <td id="L302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="302"></td>
          <td id="LC302" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</td>
        </tr>
        <tr>
          <td id="L303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="303"></td>
          <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Keep following line commented until features are fixed</span></td>
        </tr>
        <tr>
          <td id="L304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="304"></td>
          <td id="LC304" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_VARIADIC_TEMPLATES_SUPPORTED</span> \</td>
        </tr>
        <tr>
          <td id="L305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="305"></td>
          <td id="LC305" class="blob-code blob-code-inner js-file-line">(ELPP_COMPILER_GCC || ELPP_COMPILER_CLANG || ELPP_COMPILER_INTEL || (ELPP_COMPILER_MSVC &amp;&amp; _MSC_VER &gt;= <span class="pl-c1">1800</span>))</td>
        </tr>
        <tr>
          <td id="L306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="306"></td>
          <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Logging Enable/Disable macros</span></td>
        </tr>
        <tr>
          <td id="L307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="307"></td>
          <td id="LC307" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_DISABLE_LOGS)</td>
        </tr>
        <tr>
          <td id="L308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="308"></td>
          <td id="LC308" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_LOGGING_ENABLED</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="309"></td>
          <td id="LC309" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="310"></td>
          <td id="LC310" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_LOGGING_ENABLED</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="311"></td>
          <td id="LC311" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="312"></td>
          <td id="LC312" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_DEBUG_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="313"></td>
          <td id="LC313" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_DEBUG_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="314"></td>
          <td id="LC314" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="315"></td>
          <td id="LC315" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_DEBUG_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="316"></td>
          <td id="LC316" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_DEBUG_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="317"></td>
          <td id="LC317" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_INFO_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="318"></td>
          <td id="LC318" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INFO_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="319"></td>
          <td id="LC319" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="320"></td>
          <td id="LC320" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_INFO_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="321"></td>
          <td id="LC321" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_INFO_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="322"></td>
          <td id="LC322" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_WARNING_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="323"></td>
          <td id="LC323" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WARNING_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="324"></td>
          <td id="LC324" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="325"></td>
          <td id="LC325" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WARNING_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="326"></td>
          <td id="LC326" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_WARNING_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="327"></td>
          <td id="LC327" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_ERROR_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="328"></td>
          <td id="LC328" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_ERROR_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="329"></td>
          <td id="LC329" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="330"></td>
          <td id="LC330" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_ERROR_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="331"></td>
          <td id="LC331" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_ERROR_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="332"></td>
          <td id="LC332" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_FATAL_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="333"></td>
          <td id="LC333" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FATAL_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="334"></td>
          <td id="LC334" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="335"></td>
          <td id="LC335" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_FATAL_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="336"></td>
          <td id="LC336" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_FATAL_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="337"></td>
          <td id="LC337" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_TRACE_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="338"></td>
          <td id="LC338" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_TRACE_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="339"></td>
          <td id="LC339" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="340"></td>
          <td id="LC340" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_TRACE_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="341"></td>
          <td id="LC341" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_TRACE_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="342"></td>
          <td id="LC342" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!defined(ELPP_DISABLE_VERBOSE_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</td>
        </tr>
        <tr>
          <td id="L343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="343"></td>
          <td id="LC343" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_VERBOSE_LOG</span> <span class="pl-c1">1</span></td>
        </tr>
        <tr>
          <td id="L344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="344"></td>
          <td id="LC344" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="345"></td>
          <td id="LC345" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_VERBOSE_LOG</span> <span class="pl-c1">0</span></td>
        </tr>
        <tr>
          <td id="L346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="346"></td>
          <td id="LC346" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!defined(ELPP_DISABLE_VERBOSE_LOGS) &amp;&amp; (ELPP_LOGGING_ENABLED))</span></td>
        </tr>
        <tr>
          <td id="L347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="347"></td>
          <td id="LC347" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> (!(ELPP_CXX0X || ELPP_CXX11))</td>
        </tr>
        <tr>
          <td id="L348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="348"></td>
          <td id="LC348" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">error</span> &quot;C++0x (or higher) support not detected! (Is `-std=c++11&#39; missing?)&quot;</td>
        </tr>
        <tr>
          <td id="L349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="349"></td>
          <td id="LC349" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (!(ELPP_CXX0X || ELPP_CXX11))</span></td>
        </tr>
        <tr>
          <td id="L350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="350"></td>
          <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Headers</span></td>
        </tr>
        <tr>
          <td id="L351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="351"></td>
          <td id="LC351" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_SYSLOG)</td>
        </tr>
        <tr>
          <td id="L352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="352"></td>
          <td id="LC352" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>syslog.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="353"></td>
          <td id="LC353" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_SYSLOG)</span></td>
        </tr>
        <tr>
          <td id="L354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="354"></td>
          <td id="LC354" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>ctime<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="355"></td>
          <td id="LC355" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cstring<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="356"></td>
          <td id="LC356" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cstdlib<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="357"></td>
          <td id="LC357" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cctype<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="358"></td>
          <td id="LC358" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cwchar<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="359"></td>
          <td id="LC359" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>csignal<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="360"></td>
          <td id="LC360" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cerrno<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="361"></td>
          <td id="LC361" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cstdarg<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="362"></td>
          <td id="LC362" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="363"></td>
          <td id="LC363" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>locale<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="364"></td>
          <td id="LC364" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="365"></td>
          <td id="LC365" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>codecvt<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="366"></td>
          <td id="LC366" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_WINDOWS</span></td>
        </tr>
        <tr>
          <td id="L367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="367"></td>
          <td id="LC367" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="368"></td>
          <td id="LC368" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> HAVE_EXECINFO</td>
        </tr>
        <tr>
          <td id="L369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="369"></td>
          <td id="LC369" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>cxxabi.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="370"></td>
          <td id="LC370" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>execinfo.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="371"></td>
          <td id="LC371" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ENABLE_EXECINFO</span></td>
        </tr>
        <tr>
          <td id="L372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="372"></td>
          <td id="LC372" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_OS_ANDROID</td>
        </tr>
        <tr>
          <td id="L373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="373"></td>
          <td id="LC373" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>sys/system_properties.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="374"></td>
          <td id="LC374" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_ANDROID</span></td>
        </tr>
        <tr>
          <td id="L375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="375"></td>
          <td id="LC375" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="376"></td>
          <td id="LC376" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>sys/stat.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="377"></td>
          <td id="LC377" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>sys/time.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="378"></td>
          <td id="LC378" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="379"></td>
          <td id="LC379" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>direct.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="380"></td>
          <td id="LC380" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>windows.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="381"></td>
          <td id="LC381" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(WIN32_LEAN_AND_MEAN)</td>
        </tr>
        <tr>
          <td id="L382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="382"></td>
          <td id="LC382" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">if</span> defined(ELPP_WINSOCK2)</td>
        </tr>
        <tr>
          <td id="L383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="383"></td>
          <td id="LC383" class="blob-code blob-code-inner js-file-line">#         <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>winsock2.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="384"></td>
          <td id="LC384" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="385"></td>
          <td id="LC385" class="blob-code blob-code-inner js-file-line">#         <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>winsock.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="386"></td>
          <td id="LC386" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_WINSOCK2)</span></td>
        </tr>
        <tr>
          <td id="L387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="387"></td>
          <td id="LC387" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(WIN32_LEAN_AND_MEAN)</span></td>
        </tr>
        <tr>
          <td id="L388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="388"></td>
          <td id="LC388" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="389"></td>
          <td id="LC389" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>string<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="390"></td>
          <td id="LC390" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>vector<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="391"></td>
          <td id="LC391" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>map<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="392"></td>
          <td id="LC392" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>unordered_map<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="393"></td>
          <td id="LC393" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>utility<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="394"></td>
          <td id="LC394" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>functional<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="395"></td>
          <td id="LC395" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>algorithm<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="396"></td>
          <td id="LC396" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>fstream<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="397"></td>
          <td id="LC397" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>iostream<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="398"></td>
          <td id="LC398" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>sstream<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="399"></td>
          <td id="LC399" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>memory<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="400"></td>
          <td id="LC400" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>type_traits<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="401"></td>
          <td id="LC401" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_THREADING_ENABLED</td>
        </tr>
        <tr>
          <td id="L402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="402"></td>
          <td id="LC402" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_USE_STD_THREADING</td>
        </tr>
        <tr>
          <td id="L403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="403"></td>
          <td id="LC403" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>mutex<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="404"></td>
          <td id="LC404" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>thread<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="405"></td>
          <td id="LC405" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="406"></td>
          <td id="LC406" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="407"></td>
          <td id="LC407" class="blob-code blob-code-inner js-file-line">#         <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>pthread.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="408"></td>
          <td id="LC408" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="409"></td>
          <td id="LC409" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_USE_STD_THREADING</span></td>
        </tr>
        <tr>
          <td id="L410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="410"></td>
          <td id="LC410" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_THREADING_ENABLED</span></td>
        </tr>
        <tr>
          <td id="L411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="411"></td>
          <td id="LC411" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="412"></td>
          <td id="LC412" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_NO_SLEEP_FOR)</td>
        </tr>
        <tr>
          <td id="L413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="413"></td>
          <td id="LC413" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>unistd.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="414"></td>
          <td id="LC414" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_NO_SLEEP_FOR)</span></td>
        </tr>
        <tr>
          <td id="L415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="415"></td>
          <td id="LC415" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>thread<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="416"></td>
          <td id="LC416" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>queue<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="417"></td>
          <td id="LC417" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>condition_variable<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="418"></td>
          <td id="LC418" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="419"></td>
          <td id="LC419" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_STL_LOGGING)</td>
        </tr>
        <tr>
          <td id="L420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="420"></td>
          <td id="LC420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For logging STL based templates</span></td>
        </tr>
        <tr>
          <td id="L421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="421"></td>
          <td id="LC421" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>list<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="422"></td>
          <td id="LC422" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>queue<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="423"></td>
          <td id="LC423" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>deque<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="424"></td>
          <td id="LC424" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>set<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="425"></td>
          <td id="LC425" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>bitset<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="426"></td>
          <td id="LC426" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>stack<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="427"></td>
          <td id="LC427" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_LOG_STD_ARRAY)</td>
        </tr>
        <tr>
          <td id="L428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="428"></td>
          <td id="LC428" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>array<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="429"></td>
          <td id="LC429" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_LOG_STD_ARRAY)</span></td>
        </tr>
        <tr>
          <td id="L430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="430"></td>
          <td id="LC430" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_LOG_UNORDERED_SET)</td>
        </tr>
        <tr>
          <td id="L431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="431"></td>
          <td id="LC431" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>unordered_set<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="432"></td>
          <td id="LC432" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNORDERED_SET)</span></td>
        </tr>
        <tr>
          <td id="L433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="433"></td>
          <td id="LC433" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_STL_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="434"></td>
          <td id="LC434" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_QT_LOGGING)</td>
        </tr>
        <tr>
          <td id="L435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="435"></td>
          <td id="LC435" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For logging Qt based classes &amp; templates</span></td>
        </tr>
        <tr>
          <td id="L436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="436"></td>
          <td id="LC436" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QString<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="437"></td>
          <td id="LC437" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QByteArray<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="438"></td>
          <td id="LC438" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QVector<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="439"></td>
          <td id="LC439" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QList<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="440"></td>
          <td id="LC440" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QPair<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="441"></td>
          <td id="LC441" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QMap<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="442"></td>
          <td id="LC442" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QQueue<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="443"></td>
          <td id="LC443" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QSet<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="444"></td>
          <td id="LC444" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QLinkedList<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="445"></td>
          <td id="LC445" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QHash<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="446"></td>
          <td id="LC446" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QMultiHash<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="447"></td>
          <td id="LC447" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>QStack<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="448"></td>
          <td id="LC448" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_QT_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="449"></td>
          <td id="LC449" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_BOOST_LOGGING)</td>
        </tr>
        <tr>
          <td id="L450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="450"></td>
          <td id="LC450" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For logging boost based classes &amp; templates</span></td>
        </tr>
        <tr>
          <td id="L451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="451"></td>
          <td id="LC451" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/vector.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="452"></td>
          <td id="LC452" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/stable_vector.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="453"></td>
          <td id="LC453" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/list.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="454"></td>
          <td id="LC454" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/deque.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="455"></td>
          <td id="LC455" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/map.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="456"></td>
          <td id="LC456" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/flat_map.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="457"></td>
          <td id="LC457" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/set.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="458"></td>
          <td id="LC458" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>boost/container/flat_set.hpp<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="459"></td>
          <td id="LC459" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_BOOST_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="460"></td>
          <td id="LC460" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_WXWIDGETS_LOGGING)</td>
        </tr>
        <tr>
          <td id="L461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="461"></td>
          <td id="LC461" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> For logging wxWidgets based classes &amp; templates</span></td>
        </tr>
        <tr>
          <td id="L462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="462"></td>
          <td id="LC462" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">include</span> <span class="pl-s"><span class="pl-pds">&lt;</span>wx/vector.h<span class="pl-pds">&gt;</span></span></td>
        </tr>
        <tr>
          <td id="L463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="463"></td>
          <td id="LC463" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_WXWIDGETS_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="464"></td>
          <td id="LC464" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_UTC_DATETIME)</td>
        </tr>
        <tr>
          <td id="L465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="465"></td>
          <td id="LC465" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">define</span> <span class="pl-en">elpptime_r</span> gmtime_r</td>
        </tr>
        <tr>
          <td id="L466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="466"></td>
          <td id="LC466" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">define</span> <span class="pl-en">elpptime_s</span> gmtime_s</td>
        </tr>
        <tr>
          <td id="L467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="467"></td>
          <td id="LC467" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">define</span> <span class="pl-en">elpptime</span>   gmtime</td>
        </tr>
        <tr>
          <td id="L468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="468"></td>
          <td id="LC468" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="469"></td>
          <td id="LC469" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">define</span> <span class="pl-en">elpptime_r</span> localtime_r</td>
        </tr>
        <tr>
          <td id="L470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="470"></td>
          <td id="LC470" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">define</span> <span class="pl-en">elpptime_s</span> localtime_s</td>
        </tr>
        <tr>
          <td id="L471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="471"></td>
          <td id="LC471" class="blob-code blob-code-inner js-file-line">#   <span class="pl-k">define</span> <span class="pl-en">elpptime</span>   localtime</td>
        </tr>
        <tr>
          <td id="L472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="472"></td>
          <td id="LC472" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UTC_DATETIME)</span></td>
        </tr>
        <tr>
          <td id="L473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="473"></td>
          <td id="LC473" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Forward declarations</span></td>
        </tr>
        <tr>
          <td id="L474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="474"></td>
          <td id="LC474" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">el</span> {</td>
        </tr>
        <tr>
          <td id="L475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="475"></td>
          <td id="LC475" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Logger</span>;</td>
        </tr>
        <tr>
          <td id="L476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="476"></td>
          <td id="LC476" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogMessage</span>;</td>
        </tr>
        <tr>
          <td id="L477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="477"></td>
          <td id="LC477" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PerformanceTrackingData</span>;</td>
        </tr>
        <tr>
          <td id="L478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="478"></td>
          <td id="LC478" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Loggers</span>;</td>
        </tr>
        <tr>
          <td id="L479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="479"></td>
          <td id="LC479" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Helpers</span>;</td>
        </tr>
        <tr>
          <td id="L480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="480"></td>
          <td id="LC480" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt; <span class="pl-k">class</span> <span class="pl-en">Callback</span>;</td>
        </tr>
        <tr>
          <td id="L481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="481"></td>
          <td id="LC481" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogDispatchCallback</span>;</td>
        </tr>
        <tr>
          <td id="L482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="482"></td>
          <td id="LC482" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PerformanceTrackingCallback</span>;</td>
        </tr>
        <tr>
          <td id="L483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="483"></td>
          <td id="LC483" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LoggerRegistrationCallback</span>;</td>
        </tr>
        <tr>
          <td id="L484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="484"></td>
          <td id="LC484" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogDispatchData</span>;</td>
        </tr>
        <tr>
          <td id="L485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="485"></td>
          <td id="LC485" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="486"></td>
          <td id="LC486" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Storage</span>;</td>
        </tr>
        <tr>
          <td id="L487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="487"></td>
          <td id="LC487" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">RegisteredLoggers</span>;</td>
        </tr>
        <tr>
          <td id="L488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="488"></td>
          <td id="LC488" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PerformanceTracker</span>;</td>
        </tr>
        <tr>
          <td id="L489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="489"></td>
          <td id="LC489" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">MessageBuilder</span>;</td>
        </tr>
        <tr>
          <td id="L490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="490"></td>
          <td id="LC490" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Writer</span>;</td>
        </tr>
        <tr>
          <td id="L491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="491"></td>
          <td id="LC491" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PErrorWriter</span>;</td>
        </tr>
        <tr>
          <td id="L492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="492"></td>
          <td id="LC492" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogDispatcher</span>;</td>
        </tr>
        <tr>
          <td id="L493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="493"></td>
          <td id="LC493" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DefaultLogBuilder</span>;</td>
        </tr>
        <tr>
          <td id="L494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="494"></td>
          <td id="LC494" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DefaultLogDispatchCallback</span>;</td>
        </tr>
        <tr>
          <td id="L495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="495"></td>
          <td id="LC495" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="496"></td>
          <td id="LC496" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AsyncLogDispatchCallback</span>;</td>
        </tr>
        <tr>
          <td id="L497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="497"></td>
          <td id="LC497" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AsyncDispatchWorker</span>;</td>
        </tr>
        <tr>
          <td id="L498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="498"></td>
          <td id="LC498" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="499"></td>
          <td id="LC499" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DefaultPerformanceTrackingCallback</span>;</td>
        </tr>
        <tr>
          <td id="L500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="500"></td>
          <td id="LC500" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="501"></td>
          <td id="LC501" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace el</span></td>
        </tr>
        <tr>
          <td id="L502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="502"></td>
          <td id="LC502" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Easylogging++ entry namespace</span></td>
        </tr>
        <tr>
          <td id="L503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="503"></td>
          <td id="LC503" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">el</span> {</td>
        </tr>
        <tr>
          <td id="L504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="504"></td>
          <td id="LC504" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Namespace containing base/internal functionality used by Easylogging++</span></td>
        </tr>
        <tr>
          <td id="L505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="505"></td>
          <td id="LC505" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="506"></td>
          <td id="LC506" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Data types used by Easylogging++</span></td>
        </tr>
        <tr>
          <td id="L507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="507"></td>
          <td id="LC507" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">type</span> {</td>
        </tr>
        <tr>
          <td id="L508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="508"></td>
          <td id="LC508" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_LITERAL</td>
        </tr>
        <tr>
          <td id="L509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="509"></td>
          <td id="LC509" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_STRLEN</td>
        </tr>
        <tr>
          <td id="L510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="510"></td>
          <td id="LC510" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_COUT</td>
        </tr>
        <tr>
          <td id="L511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="511"></td>
          <td id="LC511" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="512"></td>
          <td id="LC512" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_LITERAL</span>(<span class="pl-v">txt</span>) L##txt</td>
        </tr>
        <tr>
          <td id="L513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="513"></td>
          <td id="LC513" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_STRLEN</span> wcslen</td>
        </tr>
        <tr>
          <td id="L514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="514"></td>
          <td id="LC514" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined ELPP_CUSTOM_COUT</td>
        </tr>
        <tr>
          <td id="L515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="515"></td>
          <td id="LC515" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_COUT</span> ELPP_CUSTOM_COUT</td>
        </tr>
        <tr>
          <td id="L516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="516"></td>
          <td id="LC516" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="517"></td>
          <td id="LC517" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_COUT</span> std::wcout</td>
        </tr>
        <tr>
          <td id="L518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="518"></td>
          <td id="LC518" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined ELPP_CUSTOM_COUT</span></td>
        </tr>
        <tr>
          <td id="L519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="519"></td>
          <td id="LC519" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-c1">wchar_t</span> <span class="pl-c1">char_t</span>;</td>
        </tr>
        <tr>
          <td id="L520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="520"></td>
          <td id="LC520" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::wstring <span class="pl-c1">string_t</span>;</td>
        </tr>
        <tr>
          <td id="L521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="521"></td>
          <td id="LC521" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::wstringstream <span class="pl-c1">stringstream_t</span>;</td>
        </tr>
        <tr>
          <td id="L522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="522"></td>
          <td id="LC522" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::wfstream <span class="pl-c1">fstream_t</span>;</td>
        </tr>
        <tr>
          <td id="L523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="523"></td>
          <td id="LC523" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::wostream <span class="pl-c1">ostream_t</span>;</td>
        </tr>
        <tr>
          <td id="L524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="524"></td>
          <td id="LC524" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="525"></td>
          <td id="LC525" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_LITERAL</span>(<span class="pl-v">txt</span>) txt</td>
        </tr>
        <tr>
          <td id="L526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="526"></td>
          <td id="LC526" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_STRLEN</span> strlen</td>
        </tr>
        <tr>
          <td id="L527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="527"></td>
          <td id="LC527" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined ELPP_CUSTOM_COUT</td>
        </tr>
        <tr>
          <td id="L528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="528"></td>
          <td id="LC528" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_COUT</span> ELPP_CUSTOM_COUT</td>
        </tr>
        <tr>
          <td id="L529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="529"></td>
          <td id="LC529" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="530"></td>
          <td id="LC530" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">ELPP_COUT</span> std::cout</td>
        </tr>
        <tr>
          <td id="L531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="531"></td>
          <td id="LC531" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined ELPP_CUSTOM_COUT</span></td>
        </tr>
        <tr>
          <td id="L532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="532"></td>
          <td id="LC532" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">char</span> <span class="pl-c1">char_t</span>;</td>
        </tr>
        <tr>
          <td id="L533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="533"></td>
          <td id="LC533" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::string <span class="pl-c1">string_t</span>;</td>
        </tr>
        <tr>
          <td id="L534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="534"></td>
          <td id="LC534" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::stringstream <span class="pl-c1">stringstream_t</span>;</td>
        </tr>
        <tr>
          <td id="L535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="535"></td>
          <td id="LC535" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::fstream <span class="pl-c1">fstream_t</span>;</td>
        </tr>
        <tr>
          <td id="L536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="536"></td>
          <td id="LC536" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::ostream <span class="pl-c1">ostream_t</span>;</td>
        </tr>
        <tr>
          <td id="L537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="537"></td>
          <td id="LC537" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="538"></td>
          <td id="LC538" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_CUSTOM_COUT_LINE)</td>
        </tr>
        <tr>
          <td id="L539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="539"></td>
          <td id="LC539" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COUT_LINE</span>(<span class="pl-v">logLine</span>) ELPP_CUSTOM_COUT_LINE(logLine)</td>
        </tr>
        <tr>
          <td id="L540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="540"></td>
          <td id="LC540" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="541"></td>
          <td id="LC541" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_COUT_LINE</span>(<span class="pl-v">logLine</span>) logLine &lt;&lt; std::flush</td>
        </tr>
        <tr>
          <td id="L542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="542"></td>
          <td id="LC542" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_CUSTOM_COUT_LINE)</span></td>
        </tr>
        <tr>
          <td id="L543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="543"></td>
          <td id="LC543" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> EnumType;</td>
        </tr>
        <tr>
          <td id="L544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="544"></td>
          <td id="LC544" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">short</span> VerboseLevel;</td>
        </tr>
        <tr>
          <td id="L545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="545"></td>
          <td id="LC545" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">int</span> LineNumber;</td>
        </tr>
        <tr>
          <td id="L546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="546"></td>
          <td id="LC546" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;base::Storage&gt; StoragePointer;</td>
        </tr>
        <tr>
          <td id="L547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="547"></td>
          <td id="LC547" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;LogDispatchCallback&gt; LogDispatchCallbackPtr;</td>
        </tr>
        <tr>
          <td id="L548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="548"></td>
          <td id="LC548" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;PerformanceTrackingCallback&gt; PerformanceTrackingCallbackPtr;</td>
        </tr>
        <tr>
          <td id="L549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="549"></td>
          <td id="LC549" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;LoggerRegistrationCallback&gt; LoggerRegistrationCallbackPtr;</td>
        </tr>
        <tr>
          <td id="L550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="550"></td>
          <td id="LC550" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::unique_ptr&lt;el::base::PerformanceTracker&gt; PerformanceTrackerPtr;</td>
        </tr>
        <tr>
          <td id="L551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="551"></td>
          <td id="LC551" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace type</span></td>
        </tr>
        <tr>
          <td id="L552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="552"></td>
          <td id="LC552" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Internal helper class that prevent copy constructor for class</span></td>
        </tr>
        <tr>
          <td id="L553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="553"></td>
          <td id="LC553" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="554"></td>
          <td id="LC554" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail When using this class simply inherit it privately</span></td>
        </tr>
        <tr>
          <td id="L555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="555"></td>
          <td id="LC555" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">NoCopy</span> {</td>
        </tr>
        <tr>
          <td id="L556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="556"></td>
          <td id="LC556" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="557"></td>
          <td id="LC557" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">NoCopy</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="558"></td>
          <td id="LC558" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="559"></td>
          <td id="LC559" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">NoCopy</span>(<span class="pl-k">const</span> NoCopy&amp;);</td>
        </tr>
        <tr>
          <td id="L560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="560"></td>
          <td id="LC560" class="blob-code blob-code-inner js-file-line">  NoCopy&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> NoCopy&amp;);</td>
        </tr>
        <tr>
          <td id="L561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="561"></td>
          <td id="LC561" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="562"></td>
          <td id="LC562" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Internal helper class that makes all default constructors private.</span></td>
        </tr>
        <tr>
          <td id="L563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="563"></td>
          <td id="LC563" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="564"></td>
          <td id="LC564" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail This prevents initializing class making it static unless an explicit constructor is declared.</span></td>
        </tr>
        <tr>
          <td id="L565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="565"></td>
          <td id="LC565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ When using this class simply inherit it privately</span></td>
        </tr>
        <tr>
          <td id="L566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="566"></td>
          <td id="LC566" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">StaticClass</span> {</td>
        </tr>
        <tr>
          <td id="L567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="567"></td>
          <td id="LC567" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="568"></td>
          <td id="LC568" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">StaticClass</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="569"></td>
          <td id="LC569" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">StaticClass</span>(<span class="pl-k">const</span> StaticClass&amp;);</td>
        </tr>
        <tr>
          <td id="L570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="570"></td>
          <td id="LC570" class="blob-code blob-code-inner js-file-line">  StaticClass&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> StaticClass&amp;);</td>
        </tr>
        <tr>
          <td id="L571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="571"></td>
          <td id="LC571" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="572"></td>
          <td id="LC572" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="573"></td>
          <td id="LC573" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents enumeration for severity level used to determine level of logging</span></td>
        </tr>
        <tr>
          <td id="L574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="574"></td>
          <td id="LC574" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="575"></td>
          <td id="LC575" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail With Easylogging++, developers may disable or enable any level regardless of</span></td>
        </tr>
        <tr>
          <td id="L576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="576"></td>
          <td id="LC576" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ what the severity is. Or they can choose to log using hierarchical logging flag</span></td>
        </tr>
        <tr>
          <td id="L577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="577"></td>
          <td id="LC577" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">Level</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="578"></td>
          <td id="LC578" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Generic level that represents all the levels. Useful when setting global configuration for all levels</span></td>
        </tr>
        <tr>
          <td id="L579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="579"></td>
          <td id="LC579" class="blob-code blob-code-inner js-file-line">  Global = <span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="580"></td>
          <td id="LC580" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Information that can be useful to back-trace certain events - mostly useful than debug logs.</span></td>
        </tr>
        <tr>
          <td id="L581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="581"></td>
          <td id="LC581" class="blob-code blob-code-inner js-file-line">  Trace = <span class="pl-c1">2</span>,</td>
        </tr>
        <tr>
          <td id="L582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="582"></td>
          <td id="LC582" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Informational events most useful for developers to debug application</span></td>
        </tr>
        <tr>
          <td id="L583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="583"></td>
          <td id="LC583" class="blob-code blob-code-inner js-file-line">  Debug = <span class="pl-c1">4</span>,</td>
        </tr>
        <tr>
          <td id="L584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="584"></td>
          <td id="LC584" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Severe error information that will presumably abort application</span></td>
        </tr>
        <tr>
          <td id="L585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="585"></td>
          <td id="LC585" class="blob-code blob-code-inner js-file-line">  Fatal = <span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="586"></td>
          <td id="LC586" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Information representing errors in application but application will keep running</span></td>
        </tr>
        <tr>
          <td id="L587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="587"></td>
          <td id="LC587" class="blob-code blob-code-inner js-file-line">  Error = <span class="pl-c1">16</span>,</td>
        </tr>
        <tr>
          <td id="L588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="588"></td>
          <td id="LC588" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Useful when application has potentially harmful situations</span></td>
        </tr>
        <tr>
          <td id="L589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="589"></td>
          <td id="LC589" class="blob-code blob-code-inner js-file-line">  Warning = <span class="pl-c1">32</span>,</td>
        </tr>
        <tr>
          <td id="L590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="590"></td>
          <td id="LC590" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Information that can be highly useful and vary with verbose logging level.</span></td>
        </tr>
        <tr>
          <td id="L591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="591"></td>
          <td id="LC591" class="blob-code blob-code-inner js-file-line">  Verbose = <span class="pl-c1">64</span>,</td>
        </tr>
        <tr>
          <td id="L592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="592"></td>
          <td id="LC592" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Mainly useful to represent current progress of application</span></td>
        </tr>
        <tr>
          <td id="L593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="593"></td>
          <td id="LC593" class="blob-code blob-code-inner js-file-line">  Info = <span class="pl-c1">128</span>,</td>
        </tr>
        <tr>
          <td id="L594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="594"></td>
          <td id="LC594" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Represents unknown level</span></td>
        </tr>
        <tr>
          <td id="L595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="595"></td>
          <td id="LC595" class="blob-code blob-code-inner js-file-line">  Unknown = <span class="pl-c1">1010</span></td>
        </tr>
        <tr>
          <td id="L596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="596"></td>
          <td id="LC596" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="597"></td>
          <td id="LC597" class="blob-code blob-code-inner js-file-line">} <span class="pl-c"><span class="pl-c">//</span> namespace el</span></td>
        </tr>
        <tr>
          <td id="L598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="598"></td>
          <td id="LC598" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">std</span> {</td>
        </tr>
        <tr>
          <td id="L599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="599"></td>
          <td id="LC599" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template</span>&lt;&gt; <span class="pl-k">struct</span> <span class="pl-en">hash</span>&lt;el::Level&gt; {</td>
        </tr>
        <tr>
          <td id="L600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="600"></td>
          <td id="LC600" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="601"></td>
          <td id="LC601" class="blob-code blob-code-inner js-file-line">  std::<span class="pl-c1">size_t</span> <span class="pl-en">operator</span>()(<span class="pl-k">const</span> el::Level&amp; l) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="602"></td>
          <td id="LC602" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> hash&lt;el::base::type::EnumType&gt; {}(<span class="pl-k">static_cast</span>&lt;el::base::type::EnumType&gt;(l));</td>
        </tr>
        <tr>
          <td id="L603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="603"></td>
          <td id="LC603" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="604"></td>
          <td id="LC604" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="605"></td>
          <td id="LC605" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="606"></td>
          <td id="LC606" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">el</span> {</td>
        </tr>
        <tr>
          <td id="L607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="607"></td>
          <td id="LC607" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Static class that contains helper functions for el::Level</span></td>
        </tr>
        <tr>
          <td id="L608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="608"></td>
          <td id="LC608" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LevelHelper</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="609"></td>
          <td id="LC609" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="610"></td>
          <td id="LC610" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Represents minimum valid level. Useful when iterating through enum.</span></td>
        </tr>
        <tr>
          <td id="L611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="611"></td>
          <td id="LC611" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> base::type::EnumType <span class="pl-c1">kMinValid</span> = <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(Level::Trace);</td>
        </tr>
        <tr>
          <td id="L612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="612"></td>
          <td id="LC612" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Represents maximum valid level. This is used internally and you should not need it.</span></td>
        </tr>
        <tr>
          <td id="L613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="613"></td>
          <td id="LC613" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> base::type::EnumType <span class="pl-c1">kMaxValid</span> = <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(Level::Info);</td>
        </tr>
        <tr>
          <td id="L614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="614"></td>
          <td id="LC614" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Casts level to int, useful for iterating through enum.</span></td>
        </tr>
        <tr>
          <td id="L615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="615"></td>
          <td id="LC615" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> base::type::EnumType <span class="pl-en">castToInt</span>(Level level) {</td>
        </tr>
        <tr>
          <td id="L616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="616"></td>
          <td id="LC616" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(level);</td>
        </tr>
        <tr>
          <td id="L617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="617"></td>
          <td id="LC617" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="618"></td>
          <td id="LC618" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Casts int(ushort) to level, useful for iterating through enum.</span></td>
        </tr>
        <tr>
          <td id="L619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="619"></td>
          <td id="LC619" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> Level <span class="pl-en">castFromInt</span>(base::type::EnumType l) {</td>
        </tr>
        <tr>
          <td id="L620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="620"></td>
          <td id="LC620" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;Level&gt;(l);</td>
        </tr>
        <tr>
          <td id="L621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="621"></td>
          <td id="LC621" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="622"></td>
          <td id="LC622" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts level to associated const char*</span></td>
        </tr>
        <tr>
          <td id="L623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="623"></td>
          <td id="LC623" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Upper case string based level.</span></td>
        </tr>
        <tr>
          <td id="L624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="624"></td>
          <td id="LC624" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">convertToString</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="625"></td>
          <td id="LC625" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts from levelStr to Level</span></td>
        </tr>
        <tr>
          <td id="L626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="626"></td>
          <td id="LC626" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param levelStr Upper case string based level.</span></td>
        </tr>
        <tr>
          <td id="L627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="627"></td>
          <td id="LC627" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        Lower case is also valid but providing upper case is recommended.</span></td>
        </tr>
        <tr>
          <td id="L628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="628"></td>
          <td id="LC628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> Level <span class="pl-en">convertFromString</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* levelStr);</td>
        </tr>
        <tr>
          <td id="L629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="629"></td>
          <td id="LC629" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Applies specified function to each level starting from startIndex</span></td>
        </tr>
        <tr>
          <td id="L630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="630"></td>
          <td id="LC630" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param startIndex initial value to start the iteration from. This is passed as pointer and</span></td>
        </tr>
        <tr>
          <td id="L631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="631"></td>
          <td id="LC631" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        is left-shifted so this can be used inside function (fn) to represent current level.</span></td>
        </tr>
        <tr>
          <td id="L632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="632"></td>
          <td id="LC632" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param fn function to apply with each level. This bool represent whether or not to stop iterating through levels.</span></td>
        </tr>
        <tr>
          <td id="L633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="633"></td>
          <td id="LC633" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">forEachLevel</span>(base::type::EnumType* startIndex, <span class="pl-k">const</span> std::function&lt;<span class="pl-k">bool</span>(<span class="pl-k">void</span>)&gt;&amp; fn);</td>
        </tr>
        <tr>
          <td id="L634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="634"></td>
          <td id="LC634" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="635"></td>
          <td id="LC635" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents enumeration of ConfigurationType used to configure or access certain aspect</span></td>
        </tr>
        <tr>
          <td id="L636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="636"></td>
          <td id="LC636" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ of logging</span></td>
        </tr>
        <tr>
          <td id="L637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="637"></td>
          <td id="LC637" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">ConfigurationType</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="638"></td>
          <td id="LC638" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not corresponding level and logger of logging is enabled</span></td>
        </tr>
        <tr>
          <td id="L639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="639"></td>
          <td id="LC639" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ You may disable all logs by using el::Level::Global</span></td>
        </tr>
        <tr>
          <td id="L640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="640"></td>
          <td id="LC640" class="blob-code blob-code-inner js-file-line">  Enabled = <span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="641"></td>
          <td id="LC641" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Whether or not to write corresponding log to log file</span></td>
        </tr>
        <tr>
          <td id="L642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="642"></td>
          <td id="LC642" class="blob-code blob-code-inner js-file-line">  ToFile = <span class="pl-c1">2</span>,</td>
        </tr>
        <tr>
          <td id="L643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="643"></td>
          <td id="LC643" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Whether or not to write corresponding level and logger log to standard output.</span></td>
        </tr>
        <tr>
          <td id="L644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="644"></td>
          <td id="LC644" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ By standard output meaning termnal, command prompt etc</span></td>
        </tr>
        <tr>
          <td id="L645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="645"></td>
          <td id="LC645" class="blob-code blob-code-inner js-file-line">  ToStandardOutput = <span class="pl-c1">4</span>,</td>
        </tr>
        <tr>
          <td id="L646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="646"></td>
          <td id="LC646" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines format of logging corresponding level and logger.</span></td>
        </tr>
        <tr>
          <td id="L647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="647"></td>
          <td id="LC647" class="blob-code blob-code-inner js-file-line">  Format = <span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="648"></td>
          <td id="LC648" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines log file (full path) to write logs to for corresponding level and logger</span></td>
        </tr>
        <tr>
          <td id="L649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="649"></td>
          <td id="LC649" class="blob-code blob-code-inner js-file-line">  Filename = <span class="pl-c1">16</span>,</td>
        </tr>
        <tr>
          <td id="L650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="650"></td>
          <td id="LC650" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Specifies precision of the subsecond part. It should be within range (1-6).</span></td>
        </tr>
        <tr>
          <td id="L651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="651"></td>
          <td id="LC651" class="blob-code blob-code-inner js-file-line">  SubsecondPrecision = <span class="pl-c1">32</span>,</td>
        </tr>
        <tr>
          <td id="L652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="652"></td>
          <td id="LC652" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Alias of SubsecondPrecision (for backward compatibility)</span></td>
        </tr>
        <tr>
          <td id="L653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="653"></td>
          <td id="LC653" class="blob-code blob-code-inner js-file-line">  MillisecondsWidth = SubsecondPrecision,</td>
        </tr>
        <tr>
          <td id="L654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="654"></td>
          <td id="LC654" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not performance tracking is enabled.</span></td>
        </tr>
        <tr>
          <td id="L655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="655"></td>
          <td id="LC655" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="656"></td>
          <td id="LC656" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail This does not depend on logger or level. Performance tracking always uses &#39;performance&#39; logger</span></td>
        </tr>
        <tr>
          <td id="L657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="657"></td>
          <td id="LC657" class="blob-code blob-code-inner js-file-line">  PerformanceTracking = <span class="pl-c1">64</span>,</td>
        </tr>
        <tr>
          <td id="L658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="658"></td>
          <td id="LC658" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Specifies log file max size.</span></td>
        </tr>
        <tr>
          <td id="L659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="659"></td>
          <td id="LC659" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="660"></td>
          <td id="LC660" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail If file size of corresponding log file (for corresponding level) is &gt;= specified size, log file will</span></td>
        </tr>
        <tr>
          <td id="L661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="661"></td>
          <td id="LC661" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ be truncated and re-initiated.</span></td>
        </tr>
        <tr>
          <td id="L662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="662"></td>
          <td id="LC662" class="blob-code blob-code-inner js-file-line">  MaxLogFileSize = <span class="pl-c1">128</span>,</td>
        </tr>
        <tr>
          <td id="L663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="663"></td>
          <td id="LC663" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Specifies number of log entries to hold until we flush pending log data</span></td>
        </tr>
        <tr>
          <td id="L664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="664"></td>
          <td id="LC664" class="blob-code blob-code-inner js-file-line">  LogFlushThreshold = <span class="pl-c1">256</span>,</td>
        </tr>
        <tr>
          <td id="L665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="665"></td>
          <td id="LC665" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Represents unknown configuration</span></td>
        </tr>
        <tr>
          <td id="L666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="666"></td>
          <td id="LC666" class="blob-code blob-code-inner js-file-line">  Unknown = <span class="pl-c1">1010</span></td>
        </tr>
        <tr>
          <td id="L667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="667"></td>
          <td id="LC667" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="668"></td>
          <td id="LC668" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Static class that contains helper functions for el::ConfigurationType</span></td>
        </tr>
        <tr>
          <td id="L669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="669"></td>
          <td id="LC669" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">ConfigurationTypeHelper</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="670"></td>
          <td id="LC670" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="671"></td>
          <td id="LC671" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Represents minimum valid configuration type. Useful when iterating through enum.</span></td>
        </tr>
        <tr>
          <td id="L672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="672"></td>
          <td id="LC672" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> base::type::EnumType <span class="pl-c1">kMinValid</span> = <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(ConfigurationType::Enabled);</td>
        </tr>
        <tr>
          <td id="L673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="673"></td>
          <td id="LC673" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Represents maximum valid configuration type. This is used internally and you should not need it.</span></td>
        </tr>
        <tr>
          <td id="L674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="674"></td>
          <td id="LC674" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> base::type::EnumType <span class="pl-c1">kMaxValid</span> = <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(ConfigurationType::MaxLogFileSize);</td>
        </tr>
        <tr>
          <td id="L675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="675"></td>
          <td id="LC675" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Casts configuration type to int, useful for iterating through enum.</span></td>
        </tr>
        <tr>
          <td id="L676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="676"></td>
          <td id="LC676" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> base::type::EnumType <span class="pl-en">castToInt</span>(ConfigurationType configurationType) {</td>
        </tr>
        <tr>
          <td id="L677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="677"></td>
          <td id="LC677" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(configurationType);</td>
        </tr>
        <tr>
          <td id="L678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="678"></td>
          <td id="LC678" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="679"></td>
          <td id="LC679" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Casts int(ushort) to configuration type, useful for iterating through enum.</span></td>
        </tr>
        <tr>
          <td id="L680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="680"></td>
          <td id="LC680" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> ConfigurationType <span class="pl-en">castFromInt</span>(base::type::EnumType c) {</td>
        </tr>
        <tr>
          <td id="L681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="681"></td>
          <td id="LC681" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;ConfigurationType&gt;(c);</td>
        </tr>
        <tr>
          <td id="L682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="682"></td>
          <td id="LC682" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="683"></td>
          <td id="LC683" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts configuration type to associated const char*</span></td>
        </tr>
        <tr>
          <td id="L684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="684"></td>
          <td id="LC684" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @returns Upper case string based configuration type.</span></td>
        </tr>
        <tr>
          <td id="L685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="685"></td>
          <td id="LC685" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">convertToString</span>(ConfigurationType configurationType);</td>
        </tr>
        <tr>
          <td id="L686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="686"></td>
          <td id="LC686" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts from configStr to ConfigurationType</span></td>
        </tr>
        <tr>
          <td id="L687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="687"></td>
          <td id="LC687" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configStr Upper case string based configuration type.</span></td>
        </tr>
        <tr>
          <td id="L688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="688"></td>
          <td id="LC688" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        Lower case is also valid but providing upper case is recommended.</span></td>
        </tr>
        <tr>
          <td id="L689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="689"></td>
          <td id="LC689" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> ConfigurationType <span class="pl-en">convertFromString</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* configStr);</td>
        </tr>
        <tr>
          <td id="L690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="690"></td>
          <td id="LC690" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Applies specified function to each configuration type starting from startIndex</span></td>
        </tr>
        <tr>
          <td id="L691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="691"></td>
          <td id="LC691" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param startIndex initial value to start the iteration from. This is passed by pointer and is left-shifted</span></td>
        </tr>
        <tr>
          <td id="L692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="692"></td>
          <td id="LC692" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        so this can be used inside function (fn) to represent current configuration type.</span></td>
        </tr>
        <tr>
          <td id="L693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="693"></td>
          <td id="LC693" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param fn function to apply with each configuration type.</span></td>
        </tr>
        <tr>
          <td id="L694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="694"></td>
          <td id="LC694" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        This bool represent whether or not to stop iterating through configurations.</span></td>
        </tr>
        <tr>
          <td id="L695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="695"></td>
          <td id="LC695" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">forEachConfigType</span>(base::type::EnumType* startIndex, <span class="pl-k">const</span> std::function&lt;<span class="pl-k">bool</span>(<span class="pl-k">void</span>)&gt;&amp; fn);</td>
        </tr>
        <tr>
          <td id="L696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="696"></td>
          <td id="LC696" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="697"></td>
          <td id="LC697" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Flags used while writing logs. This flags are set by user</span></td>
        </tr>
        <tr>
          <td id="L698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="698"></td>
          <td id="LC698" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">LoggingFlag</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="699"></td>
          <td id="LC699" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Makes sure we have new line for each container log entry</span></td>
        </tr>
        <tr>
          <td id="L700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="700"></td>
          <td id="LC700" class="blob-code blob-code-inner js-file-line">  NewLineForContainer = <span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="701"></td>
          <td id="LC701" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Makes sure if -vmodule is used and does not specifies a module, then verbose</span></td>
        </tr>
        <tr>
          <td id="L702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="702"></td>
          <td id="LC702" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ logging is allowed via that module.</span></td>
        </tr>
        <tr>
          <td id="L703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="703"></td>
          <td id="LC703" class="blob-code blob-code-inner js-file-line">  AllowVerboseIfModuleNotSpecified = <span class="pl-c1">2</span>,</td>
        </tr>
        <tr>
          <td id="L704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="704"></td>
          <td id="LC704" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief When handling crashes by default, detailed crash reason will be logged as well</span></td>
        </tr>
        <tr>
          <td id="L705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="705"></td>
          <td id="LC705" class="blob-code blob-code-inner js-file-line">  LogDetailedCrashReason = <span class="pl-c1">4</span>,</td>
        </tr>
        <tr>
          <td id="L706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="706"></td>
          <td id="LC706" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Allows to disable application abortion when logged using FATAL level</span></td>
        </tr>
        <tr>
          <td id="L707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="707"></td>
          <td id="LC707" class="blob-code blob-code-inner js-file-line">  DisableApplicationAbortOnFatalLog = <span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="708"></td>
          <td id="LC708" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Flushes log with every log-entry (performance sensitive) - Disabled by default</span></td>
        </tr>
        <tr>
          <td id="L709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="709"></td>
          <td id="LC709" class="blob-code blob-code-inner js-file-line">  ImmediateFlush = <span class="pl-c1">16</span>,</td>
        </tr>
        <tr>
          <td id="L710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="710"></td>
          <td id="LC710" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Enables strict file rolling</span></td>
        </tr>
        <tr>
          <td id="L711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="711"></td>
          <td id="LC711" class="blob-code blob-code-inner js-file-line">  StrictLogFileSizeCheck = <span class="pl-c1">32</span>,</td>
        </tr>
        <tr>
          <td id="L712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="712"></td>
          <td id="LC712" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Make terminal output colorful for supported terminals</span></td>
        </tr>
        <tr>
          <td id="L713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="713"></td>
          <td id="LC713" class="blob-code blob-code-inner js-file-line">  ColoredTerminalOutput = <span class="pl-c1">64</span>,</td>
        </tr>
        <tr>
          <td id="L714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="714"></td>
          <td id="LC714" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Supports use of multiple logging in same macro, e.g, CLOG(INFO, &quot;default&quot;, &quot;network&quot;)</span></td>
        </tr>
        <tr>
          <td id="L715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="715"></td>
          <td id="LC715" class="blob-code blob-code-inner js-file-line">  MultiLoggerSupport = <span class="pl-c1">128</span>,</td>
        </tr>
        <tr>
          <td id="L716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="716"></td>
          <td id="LC716" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Disables comparing performance tracker&#39;s checkpoints</span></td>
        </tr>
        <tr>
          <td id="L717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="717"></td>
          <td id="LC717" class="blob-code blob-code-inner js-file-line">  DisablePerformanceTrackingCheckpointComparison = <span class="pl-c1">256</span>,</td>
        </tr>
        <tr>
          <td id="L718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="718"></td>
          <td id="LC718" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Disable VModules</span></td>
        </tr>
        <tr>
          <td id="L719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="719"></td>
          <td id="LC719" class="blob-code blob-code-inner js-file-line">  DisableVModules = <span class="pl-c1">512</span>,</td>
        </tr>
        <tr>
          <td id="L720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="720"></td>
          <td id="LC720" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Disable VModules extensions</span></td>
        </tr>
        <tr>
          <td id="L721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="721"></td>
          <td id="LC721" class="blob-code blob-code-inner js-file-line">  DisableVModulesExtensions = <span class="pl-c1">1024</span>,</td>
        </tr>
        <tr>
          <td id="L722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="722"></td>
          <td id="LC722" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Enables hierarchical logging</span></td>
        </tr>
        <tr>
          <td id="L723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="723"></td>
          <td id="LC723" class="blob-code blob-code-inner js-file-line">  HierarchicalLogging = <span class="pl-c1">2048</span>,</td>
        </tr>
        <tr>
          <td id="L724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="724"></td>
          <td id="LC724" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Creates logger automatically when not available</span></td>
        </tr>
        <tr>
          <td id="L725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="725"></td>
          <td id="LC725" class="blob-code blob-code-inner js-file-line">  CreateLoggerAutomatically = <span class="pl-c1">4096</span>,</td>
        </tr>
        <tr>
          <td id="L726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="726"></td>
          <td id="LC726" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Adds spaces b/w logs that separated by left-shift operator</span></td>
        </tr>
        <tr>
          <td id="L727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="727"></td>
          <td id="LC727" class="blob-code blob-code-inner js-file-line">  AutoSpacing = <span class="pl-c1">8192</span>,</td>
        </tr>
        <tr>
          <td id="L728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="728"></td>
          <td id="LC728" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Preserves time format and does not convert it to sec, hour etc (performance tracking only)</span></td>
        </tr>
        <tr>
          <td id="L729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="729"></td>
          <td id="LC729" class="blob-code blob-code-inner js-file-line">  FixedTimeFormat = <span class="pl-c1">16384</span>,</td>
        </tr>
        <tr>
          <td id="L730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="730"></td>
          <td id="LC730" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> @brief Ignore SIGINT or crash</span></td>
        </tr>
        <tr>
          <td id="L731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="731"></td>
          <td id="LC731" class="blob-code blob-code-inner js-file-line">  IgnoreSigInt = <span class="pl-c1">32768</span>,</td>
        </tr>
        <tr>
          <td id="L732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="732"></td>
          <td id="LC732" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="733"></td>
          <td id="LC733" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="734"></td>
          <td id="LC734" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Namespace containing constants used internally.</span></td>
        </tr>
        <tr>
          <td id="L735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="735"></td>
          <td id="LC735" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">consts</span> {</td>
        </tr>
        <tr>
          <td id="L736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="736"></td>
          <td id="LC736" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>  <span class="pl-c1">kFormatSpecifierCharValue</span>               =      <span class="pl-s"><span class="pl-pds">&#39;</span>v<span class="pl-pds">&#39;</span></span>;</td>
        </tr>
        <tr>
          <td id="L737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="737"></td>
          <td id="LC737" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>  <span class="pl-c1">kFormatSpecifierChar</span>                    =      <span class="pl-s"><span class="pl-pds">&#39;</span>%<span class="pl-pds">&#39;</span></span>;</td>
        </tr>
        <tr>
          <td id="L738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="738"></td>
          <td id="LC738" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-c1">kMaxLogPerCounter</span>                =      <span class="pl-c1">100000</span>;</td>
        </tr>
        <tr>
          <td id="L739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="739"></td>
          <td id="LC739" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-c1">kMaxLogPerContainer</span>              =      <span class="pl-c1">100</span>;</td>
        </tr>
        <tr>
          <td id="L740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="740"></td>
          <td id="LC740" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-c1">kDefaultSubsecondPrecision</span>       =      <span class="pl-c1">3</span>;</td>
        </tr>
        <tr>
          <td id="L741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="741"></td>
          <td id="LC741" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="742"></td>
          <td id="LC742" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> ELPP_DEFAULT_LOGGER</td>
        </tr>
        <tr>
          <td id="L743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="743"></td>
          <td id="LC743" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kDefaultLoggerId</span>                        =      ELPP_DEFAULT_LOGGER;</td>
        </tr>
        <tr>
          <td id="L744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="744"></td>
          <td id="LC744" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="745"></td>
          <td id="LC745" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kDefaultLoggerId</span>                        =      <span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="746"></td>
          <td id="LC746" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="747"></td>
          <td id="LC747" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="748"></td>
          <td id="LC748" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</td>
        </tr>
        <tr>
          <td id="L749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="749"></td>
          <td id="LC749" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">ifdef</span> ELPP_DEFAULT_PERFORMANCE_LOGGER</td>
        </tr>
        <tr>
          <td id="L750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="750"></td>
          <td id="LC750" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kPerformanceLoggerId</span>                    =      ELPP_DEFAULT_PERFORMANCE_LOGGER;</td>
        </tr>
        <tr>
          <td id="L751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="751"></td>
          <td id="LC751" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="752"></td>
          <td id="LC752" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kPerformanceLoggerId</span>                    =      <span class="pl-s"><span class="pl-pds">&quot;</span>performance<span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="753"></td>
          <td id="LC753" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_DEFAULT_PERFORMANCE_LOGGER</span></td>
        </tr>
        <tr>
          <td id="L754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="754"></td>
          <td id="LC754" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="755"></td>
          <td id="LC755" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="756"></td>
          <td id="LC756" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_SYSLOG)</td>
        </tr>
        <tr>
          <td id="L757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="757"></td>
          <td id="LC757" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kSysLogLoggerId</span>                         =      <span class="pl-s"><span class="pl-pds">&quot;</span>syslog<span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="758"></td>
          <td id="LC758" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_SYSLOG)</span></td>
        </tr>
        <tr>
          <td id="L759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="759"></td>
          <td id="LC759" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="760"></td>
          <td id="LC760" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="761"></td>
          <td id="LC761" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kFilePathSeparator</span>                      =      <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="762"></td>
          <td id="LC762" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="763"></td>
          <td id="LC763" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-c1">kFilePathSeparator</span>                      =      <span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="764"></td>
          <td id="LC764" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_WINDOWS</span></td>
        </tr>
        <tr>
          <td id="L765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="765"></td>
          <td id="LC765" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="766"></td>
          <td id="LC766" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> std::<span class="pl-c1">size_t</span> <span class="pl-c1">kSourceFilenameMaxLength</span>          =      <span class="pl-c1">100</span>;</td>
        </tr>
        <tr>
          <td id="L767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="767"></td>
          <td id="LC767" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> std::<span class="pl-c1">size_t</span> <span class="pl-c1">kSourceLineMaxLength</span>              =      <span class="pl-c1">10</span>;</td>
        </tr>
        <tr>
          <td id="L768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="768"></td>
          <td id="LC768" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> Level <span class="pl-c1">kPerformanceTrackerDefaultLevel</span>         =      Level::Info;</td>
        </tr>
        <tr>
          <td id="L769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="769"></td>
          <td id="LC769" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">struct</span> {</td>
        </tr>
        <tr>
          <td id="L770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="770"></td>
          <td id="LC770" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">double</span> value;</td>
        </tr>
        <tr>
          <td id="L771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="771"></td>
          <td id="LC771" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::type::<span class="pl-c1">char_t</span>* unit;</td>
        </tr>
        <tr>
          <td id="L772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="772"></td>
          <td id="LC772" class="blob-code blob-code-inner js-file-line">} <span class="pl-c1">kTimeFormats</span>[] = {</td>
        </tr>
        <tr>
          <td id="L773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="773"></td>
          <td id="LC773" class="blob-code blob-code-inner js-file-line">  { <span class="pl-c1">1000</span>.<span class="pl-c1">0f</span>, <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>us<span class="pl-pds">&quot;</span></span>) },</td>
        </tr>
        <tr>
          <td id="L774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="774"></td>
          <td id="LC774" class="blob-code blob-code-inner js-file-line">  { <span class="pl-c1">1000</span>.<span class="pl-c1">0f</span>, <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ms<span class="pl-pds">&quot;</span></span>) },</td>
        </tr>
        <tr>
          <td id="L775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="775"></td>
          <td id="LC775" class="blob-code blob-code-inner js-file-line">  { <span class="pl-c1">60</span>.<span class="pl-c1">0f</span>, <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>seconds<span class="pl-pds">&quot;</span></span>) },</td>
        </tr>
        <tr>
          <td id="L776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="776"></td>
          <td id="LC776" class="blob-code blob-code-inner js-file-line">  { <span class="pl-c1">60</span>.<span class="pl-c1">0f</span>, <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>minutes<span class="pl-pds">&quot;</span></span>) },</td>
        </tr>
        <tr>
          <td id="L777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="777"></td>
          <td id="LC777" class="blob-code blob-code-inner js-file-line">  { <span class="pl-c1">24</span>.<span class="pl-c1">0f</span>, <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>hours<span class="pl-pds">&quot;</span></span>) },</td>
        </tr>
        <tr>
          <td id="L778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="778"></td>
          <td id="LC778" class="blob-code blob-code-inner js-file-line">  { <span class="pl-c1">7</span>.<span class="pl-c1">0f</span>, <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>days<span class="pl-pds">&quot;</span></span>) }</td>
        </tr>
        <tr>
          <td id="L779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="779"></td>
          <td id="LC779" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="780"></td>
          <td id="LC780" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> <span class="pl-c1">kTimeFormatsCount</span>                           =      <span class="pl-k">sizeof</span>(<span class="pl-c1">kTimeFormats</span>) / <span class="pl-k">sizeof</span>(<span class="pl-c1">kTimeFormats</span>[<span class="pl-c1">0</span>]);</td>
        </tr>
        <tr>
          <td id="L781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="781"></td>
          <td id="LC781" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> <span class="pl-k">struct</span> {</td>
        </tr>
        <tr>
          <td id="L782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="782"></td>
          <td id="LC782" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> numb;</td>
        </tr>
        <tr>
          <td id="L783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="783"></td>
          <td id="LC783" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* name;</td>
        </tr>
        <tr>
          <td id="L784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="784"></td>
          <td id="LC784" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* brief;</td>
        </tr>
        <tr>
          <td id="L785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="785"></td>
          <td id="LC785" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* detail;</td>
        </tr>
        <tr>
          <td id="L786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="786"></td>
          <td id="LC786" class="blob-code blob-code-inner js-file-line">} <span class="pl-c1">kCrashSignals</span>[] = {</td>
        </tr>
        <tr>
          <td id="L787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="787"></td>
          <td id="LC787" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> NOTE: Do not re-order, if you do please check CrashHandler(bool) constructor and CrashHandler::setHandler(..)</span></td>
        </tr>
        <tr>
          <td id="L788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="788"></td>
          <td id="LC788" class="blob-code blob-code-inner js-file-line">  {</td>
        </tr>
        <tr>
          <td id="L789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="789"></td>
          <td id="LC789" class="blob-code blob-code-inner js-file-line">    SIGABRT, <span class="pl-s"><span class="pl-pds">&quot;</span>SIGABRT<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Abnormal termination<span class="pl-pds">&quot;</span></span>,</td>
        </tr>
        <tr>
          <td id="L790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="790"></td>
          <td id="LC790" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>Program was abnormally terminated.<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="791"></td>
          <td id="LC791" class="blob-code blob-code-inner js-file-line">  },</td>
        </tr>
        <tr>
          <td id="L792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="792"></td>
          <td id="LC792" class="blob-code blob-code-inner js-file-line">  {</td>
        </tr>
        <tr>
          <td id="L793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="793"></td>
          <td id="LC793" class="blob-code blob-code-inner js-file-line">    SIGFPE, <span class="pl-s"><span class="pl-pds">&quot;</span>SIGFPE<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Erroneous arithmetic operation<span class="pl-pds">&quot;</span></span>,</td>
        </tr>
        <tr>
          <td id="L794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="794"></td>
          <td id="LC794" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>Arithmetic operation issue such as division by zero or operation resulting in overflow.<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="795"></td>
          <td id="LC795" class="blob-code blob-code-inner js-file-line">  },</td>
        </tr>
        <tr>
          <td id="L796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="796"></td>
          <td id="LC796" class="blob-code blob-code-inner js-file-line">  {</td>
        </tr>
        <tr>
          <td id="L797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="797"></td>
          <td id="LC797" class="blob-code blob-code-inner js-file-line">    SIGILL, <span class="pl-s"><span class="pl-pds">&quot;</span>SIGILL<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Illegal instruction<span class="pl-pds">&quot;</span></span>,</td>
        </tr>
        <tr>
          <td id="L798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="798"></td>
          <td id="LC798" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>Generally due to a corruption in the code or to an attempt to execute data.<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="799"></td>
          <td id="LC799" class="blob-code blob-code-inner js-file-line">  },</td>
        </tr>
        <tr>
          <td id="L800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="800"></td>
          <td id="LC800" class="blob-code blob-code-inner js-file-line">  {</td>
        </tr>
        <tr>
          <td id="L801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="801"></td>
          <td id="LC801" class="blob-code blob-code-inner js-file-line">    SIGSEGV, <span class="pl-s"><span class="pl-pds">&quot;</span>SIGSEGV<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Invalid access to memory<span class="pl-pds">&quot;</span></span>,</td>
        </tr>
        <tr>
          <td id="L802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="802"></td>
          <td id="LC802" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>Program is trying to read an invalid (unallocated, deleted or corrupted) or inaccessible memory.<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="803"></td>
          <td id="LC803" class="blob-code blob-code-inner js-file-line">  },</td>
        </tr>
        <tr>
          <td id="L804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="804"></td>
          <td id="LC804" class="blob-code blob-code-inner js-file-line">  {</td>
        </tr>
        <tr>
          <td id="L805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="805"></td>
          <td id="LC805" class="blob-code blob-code-inner js-file-line">    SIGINT, <span class="pl-s"><span class="pl-pds">&quot;</span>SIGINT<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Interactive attention signal<span class="pl-pds">&quot;</span></span>,</td>
        </tr>
        <tr>
          <td id="L806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="806"></td>
          <td id="LC806" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&quot;</span>Interruption generated (generally) by user or operating system.<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="807"></td>
          <td id="LC807" class="blob-code blob-code-inner js-file-line">  },</td>
        </tr>
        <tr>
          <td id="L808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="808"></td>
          <td id="LC808" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="809"></td>
          <td id="LC809" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">int</span> <span class="pl-c1">kCrashSignalsCount</span>                          =      <span class="pl-k">sizeof</span>(<span class="pl-c1">kCrashSignals</span>) / <span class="pl-k">sizeof</span>(<span class="pl-c1">kCrashSignals</span>[<span class="pl-c1">0</span>]);</td>
        </tr>
        <tr>
          <td id="L810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="810"></td>
          <td id="LC810" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace consts</span></td>
        </tr>
        <tr>
          <td id="L811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="811"></td>
          <td id="LC811" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="812"></td>
          <td id="LC812" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::function&lt;<span class="pl-k">void</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>*, std::<span class="pl-c1">size_t</span>)&gt; PreRollOutCallback;</td>
        </tr>
        <tr>
          <td id="L813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="813"></td>
          <td id="LC813" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="814"></td>
          <td id="LC814" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">defaultPreRollOutCallback</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>*, std::<span class="pl-c1">size_t</span>) {}</td>
        </tr>
        <tr>
          <td id="L815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="815"></td>
          <td id="LC815" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Enum to represent timestamp unit</span></td>
        </tr>
        <tr>
          <td id="L816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="816"></td>
          <td id="LC816" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">TimestampUnit</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="817"></td>
          <td id="LC817" class="blob-code blob-code-inner js-file-line">  Microsecond = <span class="pl-c1">0</span>, Millisecond = <span class="pl-c1">1</span>, Second = <span class="pl-c1">2</span>, Minute = <span class="pl-c1">3</span>, Hour = <span class="pl-c1">4</span>, Day = <span class="pl-c1">5</span></td>
        </tr>
        <tr>
          <td id="L818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="818"></td>
          <td id="LC818" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="819"></td>
          <td id="LC819" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Format flags used to determine specifiers that are active for performance improvements.</span></td>
        </tr>
        <tr>
          <td id="L820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="820"></td>
          <td id="LC820" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">FormatFlags</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="821"></td>
          <td id="LC821" class="blob-code blob-code-inner js-file-line">  DateTime = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="822"></td>
          <td id="LC822" class="blob-code blob-code-inner js-file-line">  LoggerId = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">2</span>,</td>
        </tr>
        <tr>
          <td id="L823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="823"></td>
          <td id="LC823" class="blob-code blob-code-inner js-file-line">  File = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">3</span>,</td>
        </tr>
        <tr>
          <td id="L824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="824"></td>
          <td id="LC824" class="blob-code blob-code-inner js-file-line">  Line = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">4</span>,</td>
        </tr>
        <tr>
          <td id="L825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="825"></td>
          <td id="LC825" class="blob-code blob-code-inner js-file-line">  Location = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">5</span>,</td>
        </tr>
        <tr>
          <td id="L826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="826"></td>
          <td id="LC826" class="blob-code blob-code-inner js-file-line">  Function = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">6</span>,</td>
        </tr>
        <tr>
          <td id="L827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="827"></td>
          <td id="LC827" class="blob-code blob-code-inner js-file-line">  User = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">7</span>,</td>
        </tr>
        <tr>
          <td id="L828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="828"></td>
          <td id="LC828" class="blob-code blob-code-inner js-file-line">  Host = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">8</span>,</td>
        </tr>
        <tr>
          <td id="L829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="829"></td>
          <td id="LC829" class="blob-code blob-code-inner js-file-line">  LogMessage = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">9</span>,</td>
        </tr>
        <tr>
          <td id="L830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="830"></td>
          <td id="LC830" class="blob-code blob-code-inner js-file-line">  VerboseLevel = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">10</span>,</td>
        </tr>
        <tr>
          <td id="L831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="831"></td>
          <td id="LC831" class="blob-code blob-code-inner js-file-line">  AppName = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">11</span>,</td>
        </tr>
        <tr>
          <td id="L832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="832"></td>
          <td id="LC832" class="blob-code blob-code-inner js-file-line">  ThreadId = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">12</span>,</td>
        </tr>
        <tr>
          <td id="L833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="833"></td>
          <td id="LC833" class="blob-code blob-code-inner js-file-line">  Level = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">13</span>,</td>
        </tr>
        <tr>
          <td id="L834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="834"></td>
          <td id="LC834" class="blob-code blob-code-inner js-file-line">  FileBase = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">14</span>,</td>
        </tr>
        <tr>
          <td id="L835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="835"></td>
          <td id="LC835" class="blob-code blob-code-inner js-file-line">  LevelShort = <span class="pl-c1">1</span> &lt;&lt; <span class="pl-c1">15</span></td>
        </tr>
        <tr>
          <td id="L836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="836"></td>
          <td id="LC836" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="837"></td>
          <td id="LC837" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief A subsecond precision class containing actual width and offset of the subsecond part</span></td>
        </tr>
        <tr>
          <td id="L838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="838"></td>
          <td id="LC838" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">SubsecondPrecision</span> {</td>
        </tr>
        <tr>
          <td id="L839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="839"></td>
          <td id="LC839" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="840"></td>
          <td id="LC840" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">SubsecondPrecision</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="841"></td>
          <td id="LC841" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">init</span>(base::consts::<span class="pl-c1">kDefaultSubsecondPrecision</span>);</td>
        </tr>
        <tr>
          <td id="L842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="842"></td>
          <td id="LC842" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="843"></td>
          <td id="LC843" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">SubsecondPrecision</span>(<span class="pl-k">int</span> width) {</td>
        </tr>
        <tr>
          <td id="L844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="844"></td>
          <td id="LC844" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">init</span>(width);</td>
        </tr>
        <tr>
          <td id="L845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="845"></td>
          <td id="LC845" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="846"></td>
          <td id="LC846" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-k">operator</span>==(<span class="pl-k">const</span> SubsecondPrecision&amp; ssPrec) {</td>
        </tr>
        <tr>
          <td id="L847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="847"></td>
          <td id="LC847" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_width == ssPrec.<span class="pl-smi">m_width</span> &amp;&amp; m_offset == ssPrec.<span class="pl-smi">m_offset</span>;</td>
        </tr>
        <tr>
          <td id="L848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="848"></td>
          <td id="LC848" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="849"></td>
          <td id="LC849" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> m_width;</td>
        </tr>
        <tr>
          <td id="L850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="850"></td>
          <td id="LC850" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">unsigned</span> <span class="pl-k">int</span> m_offset;</td>
        </tr>
        <tr>
          <td id="L851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="851"></td>
          <td id="LC851" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="852"></td>
          <td id="LC852" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">init</span>(<span class="pl-k">int</span> width);</td>
        </tr>
        <tr>
          <td id="L853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="853"></td>
          <td id="LC853" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="854"></td>
          <td id="LC854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Type alias of SubsecondPrecision</span></td>
        </tr>
        <tr>
          <td id="L855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="855"></td>
          <td id="LC855" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> SubsecondPrecision MillisecondsWidth;</td>
        </tr>
        <tr>
          <td id="L856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="856"></td>
          <td id="LC856" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Namespace containing utility functions/static classes used internally</span></td>
        </tr>
        <tr>
          <td id="L857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="857"></td>
          <td id="LC857" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">utils</span> {</td>
        </tr>
        <tr>
          <td id="L858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="858"></td>
          <td id="LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Deletes memory safely and points to null</span></td>
        </tr>
        <tr>
          <td id="L859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="859"></td>
          <td id="LC859" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="860"></td>
          <td id="LC860" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span></td>
        </tr>
        <tr>
          <td id="L861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="861"></td>
          <td id="LC861" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typename</span> std::enable_if&lt;std::is_pointer&lt;T*&gt;::value, <span class="pl-k">void</span>&gt;::type</td>
        </tr>
        <tr>
          <td id="L862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="862"></td>
          <td id="LC862" class="blob-code blob-code-inner js-file-line"><span class="pl-en">safeDelete</span>(T*&amp; pointer) {</td>
        </tr>
        <tr>
          <td id="L863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="863"></td>
          <td id="LC863" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (pointer == <span class="pl-c1">nullptr</span>)</td>
        </tr>
        <tr>
          <td id="L864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="864"></td>
          <td id="LC864" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="865"></td>
          <td id="LC865" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">delete</span> pointer;</td>
        </tr>
        <tr>
          <td id="L866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="866"></td>
          <td id="LC866" class="blob-code blob-code-inner js-file-line">  pointer = <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="867"></td>
          <td id="LC867" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="868"></td>
          <td id="LC868" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Bitwise operations for C++11 strong enum class. This casts e into Flag_T and returns value after bitwise operation</span></td>
        </tr>
        <tr>
          <td id="L869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="869"></td>
          <td id="LC869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ Use these function as &lt;pre&gt;flag = bitwise::Or&lt;MyEnum&gt;(MyEnum::val1, flag);&lt;/pre&gt;</span></td>
        </tr>
        <tr>
          <td id="L870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="870"></td>
          <td id="LC870" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">bitwise</span> {</td>
        </tr>
        <tr>
          <td id="L871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="871"></td>
          <td id="LC871" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Enum&gt;</td>
        </tr>
        <tr>
          <td id="L872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="872"></td>
          <td id="LC872" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> base::type::EnumType <span class="pl-en">And</span>(Enum e, base::type::EnumType flag) {</td>
        </tr>
        <tr>
          <td id="L873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="873"></td>
          <td id="LC873" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(flag) &amp; <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(e);</td>
        </tr>
        <tr>
          <td id="L874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="874"></td>
          <td id="LC874" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="875"></td>
          <td id="LC875" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Enum&gt;</td>
        </tr>
        <tr>
          <td id="L876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="876"></td>
          <td id="LC876" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> base::type::EnumType <span class="pl-en">Not</span>(Enum e, base::type::EnumType flag) {</td>
        </tr>
        <tr>
          <td id="L877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="877"></td>
          <td id="LC877" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(flag) &amp; ~(<span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(e));</td>
        </tr>
        <tr>
          <td id="L878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="878"></td>
          <td id="LC878" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="879"></td>
          <td id="LC879" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Enum&gt;</td>
        </tr>
        <tr>
          <td id="L880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="880"></td>
          <td id="LC880" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> base::type::EnumType <span class="pl-en">Or</span>(Enum e, base::type::EnumType flag) {</td>
        </tr>
        <tr>
          <td id="L881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="881"></td>
          <td id="LC881" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(flag) | <span class="pl-k">static_cast</span>&lt;base::type::EnumType&gt;(e);</td>
        </tr>
        <tr>
          <td id="L882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="882"></td>
          <td id="LC882" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="883"></td>
          <td id="LC883" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace bitwise</span></td>
        </tr>
        <tr>
          <td id="L884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="884"></td>
          <td id="LC884" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Enum&gt;</td>
        </tr>
        <tr>
          <td id="L885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="885"></td>
          <td id="LC885" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">addFlag</span>(Enum e, base::type::EnumType* flag) {</td>
        </tr>
        <tr>
          <td id="L886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="886"></td>
          <td id="LC886" class="blob-code blob-code-inner js-file-line">  *flag = base::utils::bitwise::Or&lt;Enum&gt;(e, *flag);</td>
        </tr>
        <tr>
          <td id="L887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="887"></td>
          <td id="LC887" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="888"></td>
          <td id="LC888" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Enum&gt;</td>
        </tr>
        <tr>
          <td id="L889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="889"></td>
          <td id="LC889" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">removeFlag</span>(Enum e, base::type::EnumType* flag) {</td>
        </tr>
        <tr>
          <td id="L890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="890"></td>
          <td id="LC890" class="blob-code blob-code-inner js-file-line">  *flag = base::utils::bitwise::Not&lt;Enum&gt;(e, *flag);</td>
        </tr>
        <tr>
          <td id="L891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="891"></td>
          <td id="LC891" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="892"></td>
          <td id="LC892" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Enum&gt;</td>
        </tr>
        <tr>
          <td id="L893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="893"></td>
          <td id="LC893" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">hasFlag</span>(Enum e, base::type::EnumType flag) {</td>
        </tr>
        <tr>
          <td id="L894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="894"></td>
          <td id="LC894" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> base::utils::bitwise::And&lt;Enum&gt;(e, flag) &gt; <span class="pl-c1">0x0</span>;</td>
        </tr>
        <tr>
          <td id="L895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="895"></td>
          <td id="LC895" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="896"></td>
          <td id="LC896" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace utils</span></td>
        </tr>
        <tr>
          <td id="L897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="897"></td>
          <td id="LC897" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">threading</span> {</td>
        </tr>
        <tr>
          <td id="L898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="898"></td>
          <td id="LC898" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_THREADING_ENABLED</td>
        </tr>
        <tr>
          <td id="L899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="899"></td>
          <td id="LC899" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> !ELPP_USE_STD_THREADING</td>
        </tr>
        <tr>
          <td id="L900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="900"></td>
          <td id="LC900" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">internal</span> {</td>
        </tr>
        <tr>
          <td id="L901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="901"></td>
          <td id="LC901" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief A mutex wrapper for compiler that dont yet support std::recursive_mutex</span></td>
        </tr>
        <tr>
          <td id="L902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="902"></td>
          <td id="LC902" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Mutex</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="903"></td>
          <td id="LC903" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="904"></td>
          <td id="LC904" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Mutex</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="905"></td>
          <td id="LC905" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="906"></td>
          <td id="LC906" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutexattr_t</span> attr;</td>
        </tr>
        <tr>
          <td id="L907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="907"></td>
          <td id="LC907" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutexattr_init</span>(&amp;attr);</td>
        </tr>
        <tr>
          <td id="L908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="908"></td>
          <td id="LC908" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutexattr_settype</span>(&amp;attr, PTHREAD_MUTEX_RECURSIVE);</td>
        </tr>
        <tr>
          <td id="L909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="909"></td>
          <td id="LC909" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutex_init</span>(&amp;m_underlyingMutex, &amp;attr);</td>
        </tr>
        <tr>
          <td id="L910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="910"></td>
          <td id="LC910" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutexattr_destroy</span>(&amp;attr);</td>
        </tr>
        <tr>
          <td id="L911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="911"></td>
          <td id="LC911" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="912"></td>
          <td id="LC912" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">InitializeCriticalSection</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="913"></td>
          <td id="LC913" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="914"></td>
          <td id="LC914" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="915"></td>
          <td id="LC915" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="916"></td>
          <td id="LC916" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Mutex</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="917"></td>
          <td id="LC917" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="918"></td>
          <td id="LC918" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutex_destroy</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="919"></td>
          <td id="LC919" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="920"></td>
          <td id="LC920" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">DeleteCriticalSection</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="921"></td>
          <td id="LC921" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="922"></td>
          <td id="LC922" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="923"></td>
          <td id="LC923" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="924"></td>
          <td id="LC924" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">lock</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="925"></td>
          <td id="LC925" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="926"></td>
          <td id="LC926" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutex_lock</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="927"></td>
          <td id="LC927" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="928"></td>
          <td id="LC928" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">EnterCriticalSection</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="929"></td>
          <td id="LC929" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="930"></td>
          <td id="LC930" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="931"></td>
          <td id="LC931" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="932"></td>
          <td id="LC932" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">try_lock</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="933"></td>
          <td id="LC933" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="934"></td>
          <td id="LC934" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (<span class="pl-c1">pthread_mutex_trylock</span>(&amp;m_underlyingMutex) == <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="935"></td>
          <td id="LC935" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="936"></td>
          <td id="LC936" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">TryEnterCriticalSection</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="937"></td>
          <td id="LC937" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="938"></td>
          <td id="LC938" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="939"></td>
          <td id="LC939" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="940"></td>
          <td id="LC940" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">unlock</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="941"></td>
          <td id="LC941" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="942"></td>
          <td id="LC942" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">pthread_mutex_unlock</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="943"></td>
          <td id="LC943" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="944"></td>
          <td id="LC944" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">LeaveCriticalSection</span>(&amp;m_underlyingMutex);</td>
        </tr>
        <tr>
          <td id="L945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="945"></td>
          <td id="LC945" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="946"></td>
          <td id="LC946" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="947"></td>
          <td id="LC947" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="948"></td>
          <td id="LC948" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="949"></td>
          <td id="LC949" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_OS_UNIX</td>
        </tr>
        <tr>
          <td id="L950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="950"></td>
          <td id="LC950" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">pthread_mutex_t</span> m_underlyingMutex;</td>
        </tr>
        <tr>
          <td id="L951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="951"></td>
          <td id="LC951" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">elif</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="952"></td>
          <td id="LC952" class="blob-code blob-code-inner js-file-line">  CRITICAL_SECTION m_underlyingMutex;</td>
        </tr>
        <tr>
          <td id="L953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="953"></td>
          <td id="LC953" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_UNIX</span></td>
        </tr>
        <tr>
          <td id="L954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="954"></td>
          <td id="LC954" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="955"></td>
          <td id="LC955" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Scoped lock for compiler that dont yet support std::lock_guard</span></td>
        </tr>
        <tr>
          <td id="L956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="956"></td>
          <td id="LC956" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> M&gt;</td>
        </tr>
        <tr>
          <td id="L957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="957"></td>
          <td id="LC957" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">ScopedLock</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="958"></td>
          <td id="LC958" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="959"></td>
          <td id="LC959" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">ScopedLock</span>(M&amp; mutex) {</td>
        </tr>
        <tr>
          <td id="L960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="960"></td>
          <td id="LC960" class="blob-code blob-code-inner js-file-line">    m_mutex = &amp;mutex;</td>
        </tr>
        <tr>
          <td id="L961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="961"></td>
          <td id="LC961" class="blob-code blob-code-inner js-file-line">    m_mutex-&gt;<span class="pl-c1">lock</span>();</td>
        </tr>
        <tr>
          <td id="L962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="962"></td>
          <td id="LC962" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="963"></td>
          <td id="LC963" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="964"></td>
          <td id="LC964" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~ScopedLock</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="965"></td>
          <td id="LC965" class="blob-code blob-code-inner js-file-line">    m_mutex-&gt;<span class="pl-c1">unlock</span>();</td>
        </tr>
        <tr>
          <td id="L966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="966"></td>
          <td id="LC966" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="967"></td>
          <td id="LC967" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="968"></td>
          <td id="LC968" class="blob-code blob-code-inner js-file-line">  M* m_mutex;</td>
        </tr>
        <tr>
          <td id="L969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="969"></td>
          <td id="LC969" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ScopedLock</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="970"></td>
          <td id="LC970" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="971"></td>
          <td id="LC971" class="blob-code blob-code-inner js-file-line">} <span class="pl-c"><span class="pl-c">//</span> namespace internal</span></td>
        </tr>
        <tr>
          <td id="L972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="972"></td>
          <td id="LC972" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> base::threading::internal::Mutex Mutex;</td>
        </tr>
        <tr>
          <td id="L973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="973"></td>
          <td id="LC973" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> base::threading::internal::ScopedLock&lt;base::threading::Mutex&gt; ScopedLock;</td>
        </tr>
        <tr>
          <td id="L974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="974"></td>
          <td id="LC974" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="975"></td>
          <td id="LC975" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::recursive_mutex Mutex;</td>
        </tr>
        <tr>
          <td id="L976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="976"></td>
          <td id="LC976" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::lock_guard&lt;base::threading::Mutex&gt; ScopedLock;</td>
        </tr>
        <tr>
          <td id="L977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="977"></td>
          <td id="LC977" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> !ELPP_USE_STD_THREADING</span></td>
        </tr>
        <tr>
          <td id="L978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="978"></td>
          <td id="LC978" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="979"></td>
          <td id="LC979" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">internal</span> {</td>
        </tr>
        <tr>
          <td id="L980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="980"></td>
          <td id="LC980" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Mutex wrapper used when multi-threading is disabled.</span></td>
        </tr>
        <tr>
          <td id="L981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="981"></td>
          <td id="LC981" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">NoMutex</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="982"></td>
          <td id="LC982" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="983"></td>
          <td id="LC983" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">NoMutex</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="984"></td>
          <td id="LC984" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">lock</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="985"></td>
          <td id="LC985" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">try_lock</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="986"></td>
          <td id="LC986" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="987"></td>
          <td id="LC987" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="988"></td>
          <td id="LC988" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">unlock</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="989"></td>
          <td id="LC989" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="990"></td>
          <td id="LC990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Lock guard wrapper used when multi-threading is disabled.</span></td>
        </tr>
        <tr>
          <td id="L991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="991"></td>
          <td id="LC991" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Mutex&gt;</td>
        </tr>
        <tr>
          <td id="L992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="992"></td>
          <td id="LC992" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">NoScopedLock</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="993"></td>
          <td id="LC993" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="994"></td>
          <td id="LC994" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">NoScopedLock</span>(Mutex&amp;) {</td>
        </tr>
        <tr>
          <td id="L995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="995"></td>
          <td id="LC995" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="996"></td>
          <td id="LC996" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~NoScopedLock</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="997"></td>
          <td id="LC997" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="998"></td>
          <td id="LC998" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="999"></td>
          <td id="LC999" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">NoScopedLock</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1000"></td>
          <td id="LC1000" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1001"></td>
          <td id="LC1001" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace internal</span></td>
        </tr>
        <tr>
          <td id="L1002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1002"></td>
          <td id="LC1002" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> base::threading::internal::NoMutex Mutex;</td>
        </tr>
        <tr>
          <td id="L1003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1003"></td>
          <td id="LC1003" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> base::threading::internal::NoScopedLock&lt;base::threading::Mutex&gt; ScopedLock;</td>
        </tr>
        <tr>
          <td id="L1004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1004"></td>
          <td id="LC1004" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_THREADING_ENABLED</span></td>
        </tr>
        <tr>
          <td id="L1005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1005"></td>
          <td id="LC1005" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Base of thread safe class, this class is inheritable-only</span></td>
        </tr>
        <tr>
          <td id="L1006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1006"></td>
          <td id="LC1006" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">ThreadSafe</span> {</td>
        </tr>
        <tr>
          <td id="L1007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1007"></td>
          <td id="LC1007" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1008"></td>
          <td id="LC1008" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">acquireLock</span>(<span class="pl-k">void</span>) ELPP_FINAL { m_mutex.<span class="pl-c1">lock</span>(); }</td>
        </tr>
        <tr>
          <td id="L1009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1009"></td>
          <td id="LC1009" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">releaseLock</span>(<span class="pl-k">void</span>) ELPP_FINAL { m_mutex.<span class="pl-c1">unlock</span>(); }</td>
        </tr>
        <tr>
          <td id="L1010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1010"></td>
          <td id="LC1010" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> base::threading::Mutex&amp; <span class="pl-en">lock</span>(<span class="pl-k">void</span>) ELPP_FINAL { <span class="pl-k">return</span> m_mutex; }</td>
        </tr>
        <tr>
          <td id="L1011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1011"></td>
          <td id="LC1011" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L1012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1012"></td>
          <td id="LC1012" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ThreadSafe</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1013"></td>
          <td id="LC1013" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~ThreadSafe</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1014"></td>
          <td id="LC1014" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1015"></td>
          <td id="LC1015" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex m_mutex;</td>
        </tr>
        <tr>
          <td id="L1016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1016"></td>
          <td id="LC1016" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1017"></td>
          <td id="LC1017" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1018"></td>
          <td id="LC1018" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_THREADING_ENABLED</td>
        </tr>
        <tr>
          <td id="L1019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1019"></td>
          <td id="LC1019" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> !ELPP_USE_STD_THREADING</td>
        </tr>
        <tr>
          <td id="L1020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1020"></td>
          <td id="LC1020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Gets ID of currently running threading in windows systems. On unix, nothing is returned.</span></td>
        </tr>
        <tr>
          <td id="L1021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1021"></td>
          <td id="LC1021" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> std::string <span class="pl-en">getCurrentThreadId</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1022"></td>
          <td id="LC1022" class="blob-code blob-code-inner js-file-line">  std::stringstream ss;</td>
        </tr>
        <tr>
          <td id="L1023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1023"></td>
          <td id="LC1023" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">if</span> (ELPP_OS_WINDOWS)</td>
        </tr>
        <tr>
          <td id="L1024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1024"></td>
          <td id="LC1024" class="blob-code blob-code-inner js-file-line">  ss &lt;&lt; <span class="pl-c1">GetCurrentThreadId</span>();</td>
        </tr>
        <tr>
          <td id="L1025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1025"></td>
          <td id="LC1025" class="blob-code blob-code-inner js-file-line">#      <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (ELPP_OS_WINDOWS)</span></td>
        </tr>
        <tr>
          <td id="L1026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1026"></td>
          <td id="LC1026" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> ss.<span class="pl-c1">str</span>();</td>
        </tr>
        <tr>
          <td id="L1027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1027"></td>
          <td id="LC1027" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1028"></td>
          <td id="LC1028" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1029"></td>
          <td id="LC1029" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Gets ID of currently running threading using std::this_thread::get_id()</span></td>
        </tr>
        <tr>
          <td id="L1030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1030"></td>
          <td id="LC1030" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> std::string <span class="pl-en">getCurrentThreadId</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1031"></td>
          <td id="LC1031" class="blob-code blob-code-inner js-file-line">  std::stringstream ss;</td>
        </tr>
        <tr>
          <td id="L1032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1032"></td>
          <td id="LC1032" class="blob-code blob-code-inner js-file-line">  ss &lt;&lt; <span class="pl-c1">std::this_thread::get_id</span>();</td>
        </tr>
        <tr>
          <td id="L1033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1033"></td>
          <td id="LC1033" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> ss.<span class="pl-c1">str</span>();</td>
        </tr>
        <tr>
          <td id="L1034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1034"></td>
          <td id="LC1034" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1035"></td>
          <td id="LC1035" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> !ELPP_USE_STD_THREADING</span></td>
        </tr>
        <tr>
          <td id="L1036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1036"></td>
          <td id="LC1036" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L1037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1037"></td>
          <td id="LC1037" class="blob-code blob-code-inner js-file-line"><span class="pl-k">static</span> <span class="pl-k">inline</span> std::string <span class="pl-en">getCurrentThreadId</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1038"></td>
          <td id="LC1038" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">std::string</span>();</td>
        </tr>
        <tr>
          <td id="L1039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1039"></td>
          <td id="LC1039" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L1040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1040"></td>
          <td id="LC1040" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_THREADING_ENABLED</span></td>
        </tr>
        <tr>
          <td id="L1041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1041"></td>
          <td id="LC1041" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace threading</span></td>
        </tr>
        <tr>
          <td id="L1042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1042"></td>
          <td id="LC1042" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">utils</span> {</td>
        </tr>
        <tr>
          <td id="L1043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1043"></td>
          <td id="LC1043" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">File</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L1044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1044"></td>
          <td id="LC1044" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1045"></td>
          <td id="LC1045" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Creates new out file stream for specified filename.</span></td>
        </tr>
        <tr>
          <td id="L1046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1046"></td>
          <td id="LC1046" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Pointer to newly created fstream or nullptr</span></td>
        </tr>
        <tr>
          <td id="L1047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1047"></td>
          <td id="LC1047" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> base::type::<span class="pl-c1">fstream_t</span>* <span class="pl-en">newFileStream</span>(<span class="pl-k">const</span> std::string&amp; filename);</td>
        </tr>
        <tr>
          <td id="L1048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1048"></td>
          <td id="LC1048" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1049"></td>
          <td id="LC1049" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets size of file provided in stream</span></td>
        </tr>
        <tr>
          <td id="L1050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1050"></td>
          <td id="LC1050" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::<span class="pl-c1">size_t</span> <span class="pl-en">getSizeOfFile</span>(base::type::<span class="pl-c1">fstream_t</span>* fs);</td>
        </tr>
        <tr>
          <td id="L1051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1051"></td>
          <td id="LC1051" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1052"></td>
          <td id="LC1052" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not provided path exist in current file system</span></td>
        </tr>
        <tr>
          <td id="L1053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1053"></td>
          <td id="LC1053" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">pathExists</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* path, <span class="pl-k">bool</span> considerFile = <span class="pl-c1">false</span>);</td>
        </tr>
        <tr>
          <td id="L1054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1054"></td>
          <td id="LC1054" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1055"></td>
          <td id="LC1055" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Creates specified path on file system</span></td>
        </tr>
        <tr>
          <td id="L1056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1056"></td>
          <td id="LC1056" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param path Path to create.</span></td>
        </tr>
        <tr>
          <td id="L1057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1057"></td>
          <td id="LC1057" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">createPath</span>(<span class="pl-k">const</span> std::string&amp; path);</td>
        </tr>
        <tr>
          <td id="L1058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1058"></td>
          <td id="LC1058" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Extracts path of filename with leading slash</span></td>
        </tr>
        <tr>
          <td id="L1059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1059"></td>
          <td id="LC1059" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">extractPathFromFilename</span>(<span class="pl-k">const</span> std::string&amp; fullPath,</td>
        </tr>
        <tr>
          <td id="L1060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1060"></td>
          <td id="LC1060" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">const</span> <span class="pl-k">char</span>* separator = base::consts::<span class="pl-c1">kFilePathSeparator</span>);</td>
        </tr>
        <tr>
          <td id="L1061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1061"></td>
          <td id="LC1061" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief builds stripped filename and puts it in buff</span></td>
        </tr>
        <tr>
          <td id="L1062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1062"></td>
          <td id="LC1062" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">buildStrippedFilename</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, <span class="pl-k">char</span> buff[],</td>
        </tr>
        <tr>
          <td id="L1063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1063"></td>
          <td id="LC1063" class="blob-code blob-code-inner js-file-line">                                    std::<span class="pl-c1">size_t</span> limit = base::consts::<span class="pl-c1">kSourceFilenameMaxLength</span>);</td>
        </tr>
        <tr>
          <td id="L1064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1064"></td>
          <td id="LC1064" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief builds base filename and puts it in buff</span></td>
        </tr>
        <tr>
          <td id="L1065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1065"></td>
          <td id="LC1065" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">buildBaseFilename</span>(<span class="pl-k">const</span> std::string&amp; fullPath, <span class="pl-k">char</span> buff[],</td>
        </tr>
        <tr>
          <td id="L1066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1066"></td>
          <td id="LC1066" class="blob-code blob-code-inner js-file-line">                                std::<span class="pl-c1">size_t</span> limit = base::consts::<span class="pl-c1">kSourceFilenameMaxLength</span>,</td>
        </tr>
        <tr>
          <td id="L1067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1067"></td>
          <td id="LC1067" class="blob-code blob-code-inner js-file-line">                                <span class="pl-k">const</span> <span class="pl-k">char</span>* separator = base::consts::<span class="pl-c1">kFilePathSeparator</span>);</td>
        </tr>
        <tr>
          <td id="L1068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1068"></td>
          <td id="LC1068" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1069"></td>
          <td id="LC1069" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief String utilities helper class used internally. You should not use it.</span></td>
        </tr>
        <tr>
          <td id="L1070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1070"></td>
          <td id="LC1070" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Str</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L1071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1071"></td>
          <td id="LC1071" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1072"></td>
          <td id="LC1072" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Checks if character is digit. Dont use libc implementation of it to prevent locale issues.</span></td>
        </tr>
        <tr>
          <td id="L1073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1073"></td>
          <td id="LC1073" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">isDigit</span>(<span class="pl-k">char</span> c) {</td>
        </tr>
        <tr>
          <td id="L1074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1074"></td>
          <td id="LC1074" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> c &gt;= <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> &amp;&amp; c &lt;= <span class="pl-s"><span class="pl-pds">&#39;</span>9<span class="pl-pds">&#39;</span></span>;</td>
        </tr>
        <tr>
          <td id="L1075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1075"></td>
          <td id="LC1075" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1076"></td>
          <td id="LC1076" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1077"></td>
          <td id="LC1077" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Matches wildcards, &#39;*&#39; and &#39;?&#39; only supported.</span></td>
        </tr>
        <tr>
          <td id="L1078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1078"></td>
          <td id="LC1078" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">wildCardMatch</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* str, <span class="pl-k">const</span> <span class="pl-k">char</span>* pattern);</td>
        </tr>
        <tr>
          <td id="L1079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1079"></td>
          <td id="LC1079" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1080"></td>
          <td id="LC1080" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string&amp; <span class="pl-en">ltrim</span>(std::string&amp; str);</td>
        </tr>
        <tr>
          <td id="L1081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1081"></td>
          <td id="LC1081" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string&amp; <span class="pl-en">rtrim</span>(std::string&amp; str);</td>
        </tr>
        <tr>
          <td id="L1082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1082"></td>
          <td id="LC1082" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string&amp; <span class="pl-en">trim</span>(std::string&amp; str);</td>
        </tr>
        <tr>
          <td id="L1083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1083"></td>
          <td id="LC1083" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1084"></td>
          <td id="LC1084" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not str starts with specified string</span></td>
        </tr>
        <tr>
          <td id="L1085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1085"></td>
          <td id="LC1085" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param str String to check</span></td>
        </tr>
        <tr>
          <td id="L1086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1086"></td>
          <td id="LC1086" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param start String to check against</span></td>
        </tr>
        <tr>
          <td id="L1087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1087"></td>
          <td id="LC1087" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Returns true if starts with specified string, false otherwise</span></td>
        </tr>
        <tr>
          <td id="L1088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1088"></td>
          <td id="LC1088" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">startsWith</span>(<span class="pl-k">const</span> std::string&amp; str, <span class="pl-k">const</span> std::string&amp; start);</td>
        </tr>
        <tr>
          <td id="L1089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1089"></td>
          <td id="LC1089" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1090"></td>
          <td id="LC1090" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not str ends with specified string</span></td>
        </tr>
        <tr>
          <td id="L1091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1091"></td>
          <td id="LC1091" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param str String to check</span></td>
        </tr>
        <tr>
          <td id="L1092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1092"></td>
          <td id="LC1092" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param end String to check against</span></td>
        </tr>
        <tr>
          <td id="L1093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1093"></td>
          <td id="LC1093" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Returns true if ends with specified string, false otherwise</span></td>
        </tr>
        <tr>
          <td id="L1094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1094"></td>
          <td id="LC1094" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">endsWith</span>(<span class="pl-k">const</span> std::string&amp; str, <span class="pl-k">const</span> std::string&amp; end);</td>
        </tr>
        <tr>
          <td id="L1095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1095"></td>
          <td id="LC1095" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1096"></td>
          <td id="LC1096" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Replaces all instances of replaceWhat with &#39;replaceWith&#39;. Original variable is changed for performance.</span></td>
        </tr>
        <tr>
          <td id="L1097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1097"></td>
          <td id="LC1097" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param [in,out] str String to replace from</span></td>
        </tr>
        <tr>
          <td id="L1098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1098"></td>
          <td id="LC1098" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param replaceWhat Character to replace</span></td>
        </tr>
        <tr>
          <td id="L1099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1099"></td>
          <td id="LC1099" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param replaceWith Character to replace with</span></td>
        </tr>
        <tr>
          <td id="L1100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1100"></td>
          <td id="LC1100" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Modified version of str</span></td>
        </tr>
        <tr>
          <td id="L1101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1101"></td>
          <td id="LC1101" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string&amp; <span class="pl-en">replaceAll</span>(std::string&amp; str, <span class="pl-k">char</span> replaceWhat, <span class="pl-k">char</span> replaceWith);</td>
        </tr>
        <tr>
          <td id="L1102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1102"></td>
          <td id="LC1102" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1103"></td>
          <td id="LC1103" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Replaces all instances of &#39;replaceWhat&#39; with &#39;replaceWith&#39;. (String version) Replaces in place</span></td>
        </tr>
        <tr>
          <td id="L1104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1104"></td>
          <td id="LC1104" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param str String to replace from</span></td>
        </tr>
        <tr>
          <td id="L1105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1105"></td>
          <td id="LC1105" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param replaceWhat Character to replace</span></td>
        </tr>
        <tr>
          <td id="L1106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1106"></td>
          <td id="LC1106" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param replaceWith Character to replace with</span></td>
        </tr>
        <tr>
          <td id="L1107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1107"></td>
          <td id="LC1107" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Modified (original) str</span></td>
        </tr>
        <tr>
          <td id="L1108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1108"></td>
          <td id="LC1108" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string&amp; <span class="pl-en">replaceAll</span>(std::string&amp; str, <span class="pl-k">const</span> std::string&amp; replaceWhat,</td>
        </tr>
        <tr>
          <td id="L1109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1109"></td>
          <td id="LC1109" class="blob-code blob-code-inner js-file-line">                                 <span class="pl-k">const</span> std::string&amp; replaceWith);</td>
        </tr>
        <tr>
          <td id="L1110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1110"></td>
          <td id="LC1110" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1111"></td>
          <td id="LC1111" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">replaceFirstWithEscape</span>(base::type::<span class="pl-c1">string_t</span>&amp; str, <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; replaceWhat,</td>
        </tr>
        <tr>
          <td id="L1112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1112"></td>
          <td id="LC1112" class="blob-code blob-code-inner js-file-line">                                     <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; replaceWith);</td>
        </tr>
        <tr>
          <td id="L1113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1113"></td>
          <td id="LC1113" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L1114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1114"></td>
          <td id="LC1114" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">replaceFirstWithEscape</span>(base::type::<span class="pl-c1">string_t</span>&amp; str, <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; replaceWhat,</td>
        </tr>
        <tr>
          <td id="L1115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1115"></td>
          <td id="LC1115" class="blob-code blob-code-inner js-file-line">                                     <span class="pl-k">const</span> std::string&amp; replaceWith);</td>
        </tr>
        <tr>
          <td id="L1116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1116"></td>
          <td id="LC1116" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L1117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1117"></td>
          <td id="LC1117" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts string to uppercase</span></td>
        </tr>
        <tr>
          <td id="L1118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1118"></td>
          <td id="LC1118" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param str String to convert</span></td>
        </tr>
        <tr>
          <td id="L1119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1119"></td>
          <td id="LC1119" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Uppercase string</span></td>
        </tr>
        <tr>
          <td id="L1120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1120"></td>
          <td id="LC1120" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string&amp; <span class="pl-en">toUpper</span>(std::string&amp; str);</td>
        </tr>
        <tr>
          <td id="L1121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1121"></td>
          <td id="LC1121" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1122"></td>
          <td id="LC1122" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Compares cstring equality - uses strcmp</span></td>
        </tr>
        <tr>
          <td id="L1123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1123"></td>
          <td id="LC1123" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">cStringEq</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* s1, <span class="pl-k">const</span> <span class="pl-k">char</span>* s2);</td>
        </tr>
        <tr>
          <td id="L1124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1124"></td>
          <td id="LC1124" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1125"></td>
          <td id="LC1125" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Compares cstring equality (case-insensitive) - uses toupper(char)</span></td>
        </tr>
        <tr>
          <td id="L1126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1126"></td>
          <td id="LC1126" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ Dont use strcasecmp because of CRT (VC++)</span></td>
        </tr>
        <tr>
          <td id="L1127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1127"></td>
          <td id="LC1127" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">cStringCaseEq</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* s1, <span class="pl-k">const</span> <span class="pl-k">char</span>* s2);</td>
        </tr>
        <tr>
          <td id="L1128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1128"></td>
          <td id="LC1128" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1129"></td>
          <td id="LC1129" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns true if c exist in str</span></td>
        </tr>
        <tr>
          <td id="L1130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1130"></td>
          <td id="LC1130" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">contains</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* str, <span class="pl-k">char</span> c);</td>
        </tr>
        <tr>
          <td id="L1131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1131"></td>
          <td id="LC1131" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1132"></td>
          <td id="LC1132" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">char</span>* <span class="pl-en">convertAndAddToBuff</span>(std::<span class="pl-c1">size_t</span> n, <span class="pl-k">int</span> len, <span class="pl-k">char</span>* buf, <span class="pl-k">const</span> <span class="pl-k">char</span>* bufLim, <span class="pl-k">bool</span> zeroPadded = <span class="pl-c1">true</span>);</td>
        </tr>
        <tr>
          <td id="L1133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1133"></td>
          <td id="LC1133" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">char</span>* <span class="pl-en">addToBuff</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* str, <span class="pl-k">char</span>* buf, <span class="pl-k">const</span> <span class="pl-k">char</span>* bufLim);</td>
        </tr>
        <tr>
          <td id="L1134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1134"></td>
          <td id="LC1134" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">char</span>* <span class="pl-en">clearBuff</span>(<span class="pl-k">char</span> buff[], std::<span class="pl-c1">size_t</span> lim);</td>
        </tr>
        <tr>
          <td id="L1135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1135"></td>
          <td id="LC1135" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1136"></td>
          <td id="LC1136" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts wchar* to char*</span></td>
        </tr>
        <tr>
          <td id="L1137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1137"></td>
          <td id="LC1137" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        NOTE: Need to free return value after use!</span></td>
        </tr>
        <tr>
          <td id="L1138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1138"></td>
          <td id="LC1138" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">char</span>* <span class="pl-en">wcharPtrToCharPtr</span>(<span class="pl-k">const</span> <span class="pl-c1">wchar_t</span>* line);</td>
        </tr>
        <tr>
          <td id="L1139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1139"></td>
          <td id="LC1139" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1140"></td>
          <td id="LC1140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Operating System helper static class used internally. You should not use it.</span></td>
        </tr>
        <tr>
          <td id="L1141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1141"></td>
          <td id="LC1141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">OS</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L1142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1142"></td>
          <td id="LC1142" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1143"></td>
          <td id="LC1143" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_OS_WINDOWS</td>
        </tr>
        <tr>
          <td id="L1144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1144"></td>
          <td id="LC1144" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets environment variables for Windows based OS.</span></td>
        </tr>
        <tr>
          <td id="L1145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1145"></td>
          <td id="LC1145" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        We are not using &lt;code&gt;getenv(const char*)&lt;/code&gt; because of CRT deprecation</span></td>
        </tr>
        <tr>
          <td id="L1146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1146"></td>
          <td id="LC1146" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param varname Variable name to get environment variable value for</span></td>
        </tr>
        <tr>
          <td id="L1147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1147"></td>
          <td id="LC1147" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return If variable exist the value of it otherwise nullptr</span></td>
        </tr>
        <tr>
          <td id="L1148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1148"></td>
          <td id="LC1148" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">getWindowsEnvironmentVariable</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* varname);</td>
        </tr>
        <tr>
          <td id="L1149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1149"></td>
          <td id="LC1149" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_WINDOWS</span></td>
        </tr>
        <tr>
          <td id="L1150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1150"></td>
          <td id="LC1150" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_OS_ANDROID</td>
        </tr>
        <tr>
          <td id="L1151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1151"></td>
          <td id="LC1151" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reads android property value</span></td>
        </tr>
        <tr>
          <td id="L1152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1152"></td>
          <td id="LC1152" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">getProperty</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* prop);</td>
        </tr>
        <tr>
          <td id="L1153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1153"></td>
          <td id="LC1153" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1154"></td>
          <td id="LC1154" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reads android device name</span></td>
        </tr>
        <tr>
          <td id="L1155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1155"></td>
          <td id="LC1155" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">getDeviceName</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1156"></td>
          <td id="LC1156" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_OS_ANDROID</span></td>
        </tr>
        <tr>
          <td id="L1157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1157"></td>
          <td id="LC1157" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1158"></td>
          <td id="LC1158" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Runs command on terminal and returns the output.</span></td>
        </tr>
        <tr>
          <td id="L1159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1159"></td>
          <td id="LC1159" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1160"></td>
          <td id="LC1160" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail This is applicable only on unix based systems, for all other OS, an empty string is returned.</span></td>
        </tr>
        <tr>
          <td id="L1161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1161"></td>
          <td id="LC1161" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param command Bash command</span></td>
        </tr>
        <tr>
          <td id="L1162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1162"></td>
          <td id="LC1162" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Result of bash output or empty string if no result found.</span></td>
        </tr>
        <tr>
          <td id="L1163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1163"></td>
          <td id="LC1163" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> std::string <span class="pl-en">getBashOutput</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* command);</td>
        </tr>
        <tr>
          <td id="L1164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1164"></td>
          <td id="LC1164" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1165"></td>
          <td id="LC1165" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets environment variable. This is cross-platform and CRT safe (for VC++)</span></td>
        </tr>
        <tr>
          <td id="L1166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1166"></td>
          <td id="LC1166" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param variableName Environment variable name</span></td>
        </tr>
        <tr>
          <td id="L1167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1167"></td>
          <td id="LC1167" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param defaultVal If no environment variable or value found the value to return by default</span></td>
        </tr>
        <tr>
          <td id="L1168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1168"></td>
          <td id="LC1168" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param alternativeBashCommand If environment variable not found what would be alternative bash command</span></td>
        </tr>
        <tr>
          <td id="L1169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1169"></td>
          <td id="LC1169" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        in order to look for value user is looking for. E.g, for &#39;user&#39; alternative command will &#39;whoami&#39;</span></td>
        </tr>
        <tr>
          <td id="L1170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1170"></td>
          <td id="LC1170" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">getEnvironmentVariable</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* variableName, <span class="pl-k">const</span> <span class="pl-k">char</span>* defaultVal,</td>
        </tr>
        <tr>
          <td id="L1171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1171"></td>
          <td id="LC1171" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">const</span> <span class="pl-k">char</span>* alternativeBashCommand = <span class="pl-c1">nullptr</span>);</td>
        </tr>
        <tr>
          <td id="L1172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1172"></td>
          <td id="LC1172" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets current username.</span></td>
        </tr>
        <tr>
          <td id="L1173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1173"></td>
          <td id="LC1173" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">currentUser</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1174"></td>
          <td id="LC1174" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1175"></td>
          <td id="LC1175" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets current host name or computer name.</span></td>
        </tr>
        <tr>
          <td id="L1176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1176"></td>
          <td id="LC1176" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1177"></td>
          <td id="LC1177" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail For android systems this is device name with its manufacturer and model separated by hyphen</span></td>
        </tr>
        <tr>
          <td id="L1178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1178"></td>
          <td id="LC1178" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">currentHost</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1179"></td>
          <td id="LC1179" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Whether or not terminal supports colors</span></td>
        </tr>
        <tr>
          <td id="L1180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1180"></td>
          <td id="LC1180" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">termSupportsColor</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1181"></td>
          <td id="LC1181" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1182"></td>
          <td id="LC1182" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Contains utilities for cross-platform date/time. This class make use of el::base::utils::Str</span></td>
        </tr>
        <tr>
          <td id="L1183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1183"></td>
          <td id="LC1183" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DateTime</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L1184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1184"></td>
          <td id="LC1184" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1185"></td>
          <td id="LC1185" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Cross platform gettimeofday for Windows and unix platform. This can be used to determine current microsecond.</span></td>
        </tr>
        <tr>
          <td id="L1186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1186"></td>
          <td id="LC1186" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1187"></td>
          <td id="LC1187" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail For unix system it uses gettimeofday(timeval*, timezone*) and for Windows, a separate implementation is provided</span></td>
        </tr>
        <tr>
          <td id="L1188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1188"></td>
          <td id="LC1188" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param [in,out] tv Pointer that gets updated</span></td>
        </tr>
        <tr>
          <td id="L1189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1189"></td>
          <td id="LC1189" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">gettimeofday</span>(<span class="pl-k">struct</span> <span class="pl-en">timeval</span>* tv);</td>
        </tr>
        <tr>
          <td id="L1190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1190"></td>
          <td id="LC1190" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1191"></td>
          <td id="LC1191" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets current date and time with a subsecond part.</span></td>
        </tr>
        <tr>
          <td id="L1192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1192"></td>
          <td id="LC1192" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param format User provided date/time format</span></td>
        </tr>
        <tr>
          <td id="L1193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1193"></td>
          <td id="LC1193" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param ssPrec A pointer to base::SubsecondPrecision from configuration (non-null)</span></td>
        </tr>
        <tr>
          <td id="L1194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1194"></td>
          <td id="LC1194" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @returns string based date time in specified format.</span></td>
        </tr>
        <tr>
          <td id="L1195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1195"></td>
          <td id="LC1195" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">getDateTime</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* format, <span class="pl-k">const</span> base::SubsecondPrecision* ssPrec);</td>
        </tr>
        <tr>
          <td id="L1196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1196"></td>
          <td id="LC1196" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1197"></td>
          <td id="LC1197" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts timeval (struct from ctime) to string using specified format and subsecond precision</span></td>
        </tr>
        <tr>
          <td id="L1198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1198"></td>
          <td id="LC1198" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-en">timevalToString</span>(<span class="pl-k">struct</span> <span class="pl-en">timeval</span> tval, <span class="pl-k">const</span> <span class="pl-k">char</span>* format,</td>
        </tr>
        <tr>
          <td id="L1199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1199"></td>
          <td id="LC1199" class="blob-code blob-code-inner js-file-line">                                     <span class="pl-k">const</span> el::base::SubsecondPrecision* ssPrec);</td>
        </tr>
        <tr>
          <td id="L1200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1200"></td>
          <td id="LC1200" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1201"></td>
          <td id="LC1201" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Formats time to get unit accordingly, units like second if &gt; 1000 or minutes if &gt; 60000 etc</span></td>
        </tr>
        <tr>
          <td id="L1202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1202"></td>
          <td id="LC1202" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> base::type::<span class="pl-c1">string_t</span> <span class="pl-en">formatTime</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> time, base::TimestampUnit timestampUnit);</td>
        </tr>
        <tr>
          <td id="L1203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1203"></td>
          <td id="LC1203" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1204"></td>
          <td id="LC1204" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets time difference in milli/micro second depending on timestampUnit</span></td>
        </tr>
        <tr>
          <td id="L1205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1205"></td>
          <td id="LC1205" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-k">long</span> <span class="pl-en">getTimeDifference</span>(<span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>&amp; endTime, <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>&amp; startTime,</td>
        </tr>
        <tr>
          <td id="L1206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1206"></td>
          <td id="LC1206" class="blob-code blob-code-inner js-file-line">      base::TimestampUnit timestampUnit);</td>
        </tr>
        <tr>
          <td id="L1207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1207"></td>
          <td id="LC1207" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1208"></td>
          <td id="LC1208" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1209"></td>
          <td id="LC1209" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">struct</span> ::<span class="pl-c1">tm</span>* <span class="pl-en">buildTimeInfo</span>(<span class="pl-k">struct</span> <span class="pl-en">timeval</span>* currTime, <span class="pl-k">struct</span> ::<span class="pl-c1">tm</span>* timeInfo);</td>
        </tr>
        <tr>
          <td id="L1210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1210"></td>
          <td id="LC1210" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1211"></td>
          <td id="LC1211" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">char</span>* <span class="pl-en">parseFormat</span>(<span class="pl-k">char</span>* buf, std::<span class="pl-c1">size_t</span> bufSz, <span class="pl-k">const</span> <span class="pl-k">char</span>* format, <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">tm</span>* tInfo,</td>
        </tr>
        <tr>
          <td id="L1212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1212"></td>
          <td id="LC1212" class="blob-code blob-code-inner js-file-line">                           std::<span class="pl-c1">size_t</span> msec, <span class="pl-k">const</span> base::SubsecondPrecision* ssPrec);</td>
        </tr>
        <tr>
          <td id="L1213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1213"></td>
          <td id="LC1213" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1214"></td>
          <td id="LC1214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Command line arguments for application if specified using el::Helpers::setArgs(..) or START_EASYLOGGINGPP(..)</span></td>
        </tr>
        <tr>
          <td id="L1215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1215"></td>
          <td id="LC1215" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">CommandLineArgs</span> {</td>
        </tr>
        <tr>
          <td id="L1216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1216"></td>
          <td id="LC1216" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1217"></td>
          <td id="LC1217" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">CommandLineArgs</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1218"></td>
          <td id="LC1218" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setArgs</span>(<span class="pl-c1">0</span>, <span class="pl-k">static_cast</span>&lt;<span class="pl-k">char</span>**&gt;(<span class="pl-c1">nullptr</span>));</td>
        </tr>
        <tr>
          <td id="L1219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1219"></td>
          <td id="LC1219" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1220"></td>
          <td id="LC1220" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">CommandLineArgs</span>(<span class="pl-k">int</span> argc, <span class="pl-k">const</span> <span class="pl-k">char</span>** argv) {</td>
        </tr>
        <tr>
          <td id="L1221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1221"></td>
          <td id="LC1221" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setArgs</span>(argc, argv);</td>
        </tr>
        <tr>
          <td id="L1222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1222"></td>
          <td id="LC1222" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1223"></td>
          <td id="LC1223" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">CommandLineArgs</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>** argv) {</td>
        </tr>
        <tr>
          <td id="L1224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1224"></td>
          <td id="LC1224" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setArgs</span>(argc, argv);</td>
        </tr>
        <tr>
          <td id="L1225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1225"></td>
          <td id="LC1225" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1226"></td>
          <td id="LC1226" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~CommandLineArgs</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1227"></td>
          <td id="LC1227" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets arguments and parses them</span></td>
        </tr>
        <tr>
          <td id="L1228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1228"></td>
          <td id="LC1228" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setArgs</span>(<span class="pl-k">int</span> argc, <span class="pl-k">const</span> <span class="pl-k">char</span>** argv) {</td>
        </tr>
        <tr>
          <td id="L1229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1229"></td>
          <td id="LC1229" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setArgs</span>(argc, <span class="pl-k">const_cast</span>&lt;<span class="pl-k">char</span>**&gt;(argv));</td>
        </tr>
        <tr>
          <td id="L1230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1230"></td>
          <td id="LC1230" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1231"></td>
          <td id="LC1231" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets arguments and parses them</span></td>
        </tr>
        <tr>
          <td id="L1232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1232"></td>
          <td id="LC1232" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setArgs</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>** argv);</td>
        </tr>
        <tr>
          <td id="L1233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1233"></td>
          <td id="LC1233" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns true if arguments contain paramKey with a value (separated by &#39;=&#39;)</span></td>
        </tr>
        <tr>
          <td id="L1234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1234"></td>
          <td id="LC1234" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">hasParamWithValue</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* paramKey) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1235"></td>
          <td id="LC1235" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns value of arguments</span></td>
        </tr>
        <tr>
          <td id="L1236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1236"></td>
          <td id="LC1236" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see hasParamWithValue(const char*)</span></td>
        </tr>
        <tr>
          <td id="L1237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1237"></td>
          <td id="LC1237" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">getParamValue</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* paramKey) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1238"></td>
          <td id="LC1238" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Return true if arguments has a param (not having a value) i,e without &#39;=&#39;</span></td>
        </tr>
        <tr>
          <td id="L1239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1239"></td>
          <td id="LC1239" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">hasParam</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* paramKey) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1240"></td>
          <td id="LC1240" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns true if no params available. This exclude argv[0]</span></td>
        </tr>
        <tr>
          <td id="L1241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1241"></td>
          <td id="LC1241" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">empty</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1242"></td>
          <td id="LC1242" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns total number of arguments. This exclude argv[0]</span></td>
        </tr>
        <tr>
          <td id="L1243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1243"></td>
          <td id="LC1243" class="blob-code blob-code-inner js-file-line">  std::<span class="pl-c1">size_t</span> <span class="pl-en">size</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1244"></td>
          <td id="LC1244" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> base::type::<span class="pl-c1">ostream_t</span>&amp; <span class="pl-k">operator</span>&lt;&lt;(base::type::<span class="pl-c1">ostream_t</span>&amp; os, <span class="pl-k">const</span> CommandLineArgs&amp; c);</td>
        </tr>
        <tr>
          <td id="L1245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1245"></td>
          <td id="LC1245" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1246"></td>
          <td id="LC1246" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1247"></td>
          <td id="LC1247" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">int</span> m_argc;</td>
        </tr>
        <tr>
          <td id="L1248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1248"></td>
          <td id="LC1248" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">char</span>** m_argv;</td>
        </tr>
        <tr>
          <td id="L1249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1249"></td>
          <td id="LC1249" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, std::string&gt; m_paramsWithValue;</td>
        </tr>
        <tr>
          <td id="L1250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1250"></td>
          <td id="LC1250" class="blob-code blob-code-inner js-file-line">  std::vector&lt;std::string&gt; m_params;</td>
        </tr>
        <tr>
          <td id="L1251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1251"></td>
          <td id="LC1251" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1252"></td>
          <td id="LC1252" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Abstract registry (aka repository) that provides basic interface for pointer repository specified by T_Ptr type.</span></td>
        </tr>
        <tr>
          <td id="L1253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1253"></td>
          <td id="LC1253" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1254"></td>
          <td id="LC1254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail Most of the functions are virtual final methods but anything implementing this abstract class should implement</span></td>
        </tr>
        <tr>
          <td id="L1255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1255"></td>
          <td id="LC1255" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ unregisterAll() and deepCopy(const AbstractRegistry&lt;T_Ptr, Container&gt;&amp;) and write registerNew() method according to container</span></td>
        </tr>
        <tr>
          <td id="L1256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1256"></td>
          <td id="LC1256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ and few more methods; get() to find element, unregister() to unregister single entry.</span></td>
        </tr>
        <tr>
          <td id="L1257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1257"></td>
          <td id="LC1257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ Please note that this is thread-unsafe and should also implement thread-safety mechanisms in implementation.</span></td>
        </tr>
        <tr>
          <td id="L1258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1258"></td>
          <td id="LC1258" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T_Ptr, <span class="pl-k">typename</span> Container&gt;</td>
        </tr>
        <tr>
          <td id="L1259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1259"></td>
          <td id="LC1259" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AbstractRegistry</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L1260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1260"></td>
          <td id="LC1260" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1261"></td>
          <td id="LC1261" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> Container::iterator iterator;</td>
        </tr>
        <tr>
          <td id="L1262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1262"></td>
          <td id="LC1262" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> Container::const_iterator const_iterator;</td>
        </tr>
        <tr>
          <td id="L1263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1263"></td>
          <td id="LC1263" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1264"></td>
          <td id="LC1264" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Default constructor</span></td>
        </tr>
        <tr>
          <td id="L1265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1265"></td>
          <td id="LC1265" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">AbstractRegistry</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1266"></td>
          <td id="LC1266" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1267"></td>
          <td id="LC1267" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Move constructor that is useful for base classes</span></td>
        </tr>
        <tr>
          <td id="L1268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1268"></td>
          <td id="LC1268" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">AbstractRegistry</span>(AbstractRegistry&amp;&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1269"></td>
          <td id="LC1269" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">this</span> == &amp;sr) {</td>
        </tr>
        <tr>
          <td id="L1270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1270"></td>
          <td id="LC1270" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L1271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1271"></td>
          <td id="LC1271" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1272"></td>
          <td id="LC1272" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregisterAll</span>();</td>
        </tr>
        <tr>
          <td id="L1273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1273"></td>
          <td id="LC1273" class="blob-code blob-code-inner js-file-line">    m_list = <span class="pl-c1">std::move</span>(sr.<span class="pl-smi">m_list</span>);</td>
        </tr>
        <tr>
          <td id="L1274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1274"></td>
          <td id="LC1274" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1275"></td>
          <td id="LC1275" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1276"></td>
          <td id="LC1276" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-k">operator</span>==(<span class="pl-k">const</span> AbstractRegistry&lt;T_Ptr, Container&gt;&amp; other) {</td>
        </tr>
        <tr>
          <td id="L1277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1277"></td>
          <td id="LC1277" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">size</span>() != other.<span class="pl-c1">size</span>()) {</td>
        </tr>
        <tr>
          <td id="L1278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1278"></td>
          <td id="LC1278" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
        </tr>
        <tr>
          <td id="L1279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1279"></td>
          <td id="LC1279" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1280"></td>
          <td id="LC1280" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (std::<span class="pl-c1">size_t</span> i = <span class="pl-c1">0</span>; i &lt; m_list.<span class="pl-c1">size</span>(); ++i) {</td>
        </tr>
        <tr>
          <td id="L1281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1281"></td>
          <td id="LC1281" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (m_list.<span class="pl-c1">at</span>(i) != other.<span class="pl-smi">m_list</span>.<span class="pl-c1">at</span>(i)) {</td>
        </tr>
        <tr>
          <td id="L1282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1282"></td>
          <td id="LC1282" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
        </tr>
        <tr>
          <td id="L1283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1283"></td>
          <td id="LC1283" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1284"></td>
          <td id="LC1284" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1285"></td>
          <td id="LC1285" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L1286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1286"></td>
          <td id="LC1286" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1287"></td>
          <td id="LC1287" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1288"></td>
          <td id="LC1288" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-k">operator</span>!=(<span class="pl-k">const</span> AbstractRegistry&lt;T_Ptr, Container&gt;&amp; other) {</td>
        </tr>
        <tr>
          <td id="L1289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1289"></td>
          <td id="LC1289" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">size</span>() != other.<span class="pl-c1">size</span>()) {</td>
        </tr>
        <tr>
          <td id="L1290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1290"></td>
          <td id="LC1290" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L1291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1291"></td>
          <td id="LC1291" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1292"></td>
          <td id="LC1292" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (std::<span class="pl-c1">size_t</span> i = <span class="pl-c1">0</span>; i &lt; m_list.<span class="pl-c1">size</span>(); ++i) {</td>
        </tr>
        <tr>
          <td id="L1293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1293"></td>
          <td id="LC1293" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (m_list.<span class="pl-c1">at</span>(i) != other.<span class="pl-smi">m_list</span>.<span class="pl-c1">at</span>(i)) {</td>
        </tr>
        <tr>
          <td id="L1294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1294"></td>
          <td id="LC1294" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L1295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1295"></td>
          <td id="LC1295" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1296"></td>
          <td id="LC1296" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1297"></td>
          <td id="LC1297" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
        </tr>
        <tr>
          <td id="L1298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1298"></td>
          <td id="LC1298" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1299"></td>
          <td id="LC1299" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1300"></td>
          <td id="LC1300" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Assignment move operator</span></td>
        </tr>
        <tr>
          <td id="L1301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1301"></td>
          <td id="LC1301" class="blob-code blob-code-inner js-file-line">  AbstractRegistry&amp; <span class="pl-k">operator</span>=(AbstractRegistry&amp;&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1302"></td>
          <td id="LC1302" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">this</span> == &amp;sr) {</td>
        </tr>
        <tr>
          <td id="L1303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1303"></td>
          <td id="LC1303" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L1304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1304"></td>
          <td id="LC1304" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1305"></td>
          <td id="LC1305" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregisterAll</span>();</td>
        </tr>
        <tr>
          <td id="L1306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1306"></td>
          <td id="LC1306" class="blob-code blob-code-inner js-file-line">    m_list = <span class="pl-c1">std::move</span>(sr.<span class="pl-smi">m_list</span>);</td>
        </tr>
        <tr>
          <td id="L1307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1307"></td>
          <td id="LC1307" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L1308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1308"></td>
          <td id="LC1308" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1309"></td>
          <td id="LC1309" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1310"></td>
          <td id="LC1310" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~AbstractRegistry</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1311"></td>
          <td id="LC1311" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1312"></td>
          <td id="LC1312" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1313"></td>
          <td id="LC1313" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Iterator pointer from start of repository</span></td>
        </tr>
        <tr>
          <td id="L1314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1314"></td>
          <td id="LC1314" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> iterator <span class="pl-en">begin</span>(<span class="pl-k">void</span>) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1315"></td>
          <td id="LC1315" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list.<span class="pl-c1">begin</span>();</td>
        </tr>
        <tr>
          <td id="L1316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1316"></td>
          <td id="LC1316" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1317"></td>
          <td id="LC1317" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1318"></td>
          <td id="LC1318" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Iterator pointer from end of repository</span></td>
        </tr>
        <tr>
          <td id="L1319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1319"></td>
          <td id="LC1319" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> iterator <span class="pl-en">end</span>(<span class="pl-k">void</span>) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1320"></td>
          <td id="LC1320" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list.<span class="pl-c1">end</span>();</td>
        </tr>
        <tr>
          <td id="L1321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1321"></td>
          <td id="LC1321" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1322"></td>
          <td id="LC1322" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1323"></td>
          <td id="LC1323" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1324"></td>
          <td id="LC1324" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Constant iterator pointer from start of repository</span></td>
        </tr>
        <tr>
          <td id="L1325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1325"></td>
          <td id="LC1325" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> const_iterator <span class="pl-en">cbegin</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1326"></td>
          <td id="LC1326" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list.<span class="pl-c1">cbegin</span>();</td>
        </tr>
        <tr>
          <td id="L1327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1327"></td>
          <td id="LC1327" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1328"></td>
          <td id="LC1328" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1329"></td>
          <td id="LC1329" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return End of repository</span></td>
        </tr>
        <tr>
          <td id="L1330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1330"></td>
          <td id="LC1330" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> const_iterator <span class="pl-en">cend</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1331"></td>
          <td id="LC1331" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list.<span class="pl-c1">cend</span>();</td>
        </tr>
        <tr>
          <td id="L1332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1332"></td>
          <td id="LC1332" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1333"></td>
          <td id="LC1333" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1334"></td>
          <td id="LC1334" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Whether or not repository is empty</span></td>
        </tr>
        <tr>
          <td id="L1335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1335"></td>
          <td id="LC1335" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">empty</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1336"></td>
          <td id="LC1336" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list.<span class="pl-c1">empty</span>();</td>
        </tr>
        <tr>
          <td id="L1337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1337"></td>
          <td id="LC1337" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1338"></td>
          <td id="LC1338" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1339"></td>
          <td id="LC1339" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Size of repository</span></td>
        </tr>
        <tr>
          <td id="L1340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1340"></td>
          <td id="LC1340" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> std::<span class="pl-c1">size_t</span> <span class="pl-en">size</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1341"></td>
          <td id="LC1341" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list.<span class="pl-c1">size</span>();</td>
        </tr>
        <tr>
          <td id="L1342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1342"></td>
          <td id="LC1342" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1343"></td>
          <td id="LC1343" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1344"></td>
          <td id="LC1344" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns underlying container by reference</span></td>
        </tr>
        <tr>
          <td id="L1345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1345"></td>
          <td id="LC1345" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> Container&amp; <span class="pl-en">list</span>(<span class="pl-k">void</span>) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1346"></td>
          <td id="LC1346" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list;</td>
        </tr>
        <tr>
          <td id="L1347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1347"></td>
          <td id="LC1347" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1348"></td>
          <td id="LC1348" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1349"></td>
          <td id="LC1349" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns underlying container by constant reference.</span></td>
        </tr>
        <tr>
          <td id="L1350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1350"></td>
          <td id="LC1350" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">const</span> Container&amp; <span class="pl-en">list</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1351"></td>
          <td id="LC1351" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_list;</td>
        </tr>
        <tr>
          <td id="L1352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1352"></td>
          <td id="LC1352" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1353"></td>
          <td id="LC1353" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1354"></td>
          <td id="LC1354" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Unregisters all the pointers from current repository.</span></td>
        </tr>
        <tr>
          <td id="L1355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1355"></td>
          <td id="LC1355" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">unregisterAll</span>(<span class="pl-k">void</span>) = 0;</td>
        </tr>
        <tr>
          <td id="L1356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1356"></td>
          <td id="LC1356" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1357"></td>
          <td id="LC1357" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L1358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1358"></td>
          <td id="LC1358" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">deepCopy</span>(<span class="pl-k">const</span> AbstractRegistry&lt;T_Ptr, Container&gt;&amp;) = 0;</td>
        </tr>
        <tr>
          <td id="L1359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1359"></td>
          <td id="LC1359" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">reinitDeepCopy</span>(<span class="pl-k">const</span> AbstractRegistry&lt;T_Ptr, Container&gt;&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1360"></td>
          <td id="LC1360" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregisterAll</span>();</td>
        </tr>
        <tr>
          <td id="L1361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1361"></td>
          <td id="LC1361" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">deepCopy</span>(sr);</td>
        </tr>
        <tr>
          <td id="L1362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1362"></td>
          <td id="LC1362" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1363"></td>
          <td id="LC1363" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1364"></td>
          <td id="LC1364" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1365"></td>
          <td id="LC1365" class="blob-code blob-code-inner js-file-line">  Container m_list;</td>
        </tr>
        <tr>
          <td id="L1366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1366"></td>
          <td id="LC1366" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1367"></td>
          <td id="LC1367" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1368"></td>
          <td id="LC1368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief A pointer registry mechanism to manage memory and provide search functionalities. (non-predicate version)</span></td>
        </tr>
        <tr>
          <td id="L1369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1369"></td>
          <td id="LC1369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1370"></td>
          <td id="LC1370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail NOTE: This is thread-unsafe implementation (although it contains lock function, it does not use these functions)</span></td>
        </tr>
        <tr>
          <td id="L1371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1371"></td>
          <td id="LC1371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/         of AbstractRegistry&lt;T_Ptr, Container&gt;. Any implementation of this class should be</span></td>
        </tr>
        <tr>
          <td id="L1372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1372"></td>
          <td id="LC1372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/         explicitly (by using lock functions)</span></td>
        </tr>
        <tr>
          <td id="L1373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1373"></td>
          <td id="LC1373" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T_Ptr, <span class="pl-k">typename</span> T_Key = <span class="pl-k">const</span> <span class="pl-k">char</span>*&gt;</td>
        </tr>
        <tr>
          <td id="L1374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1374"></td>
          <td id="LC1374" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Registry</span> : <span class="pl-k">public</span> <span class="pl-en">AbstractRegistry</span>&lt;T_Ptr, std::unordered_map&lt;T_Key, T_Ptr*&gt;&gt; {</td>
        </tr>
        <tr>
          <td id="L1375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1375"></td>
          <td id="LC1375" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1376"></td>
          <td id="LC1376" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> Registry&lt;T_Ptr, T_Key&gt;::iterator iterator;</td>
        </tr>
        <tr>
          <td id="L1377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1377"></td>
          <td id="LC1377" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> Registry&lt;T_Ptr, T_Key&gt;::const_iterator const_iterator;</td>
        </tr>
        <tr>
          <td id="L1378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1378"></td>
          <td id="LC1378" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1379"></td>
          <td id="LC1379" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Registry</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1380"></td>
          <td id="LC1380" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1381"></td>
          <td id="LC1381" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Copy constructor that is useful for base classes. Try to avoid this constructor, use move constructor.</span></td>
        </tr>
        <tr>
          <td id="L1382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1382"></td>
          <td id="LC1382" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Registry</span>(<span class="pl-k">const</span> Registry&amp; sr) : AbstractRegistry&lt;T_Ptr, std::vector&lt;T_Ptr*&gt;&gt;() {</td>
        </tr>
        <tr>
          <td id="L1383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1383"></td>
          <td id="LC1383" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">this</span> == &amp;sr) {</td>
        </tr>
        <tr>
          <td id="L1384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1384"></td>
          <td id="LC1384" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L1385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1385"></td>
          <td id="LC1385" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1386"></td>
          <td id="LC1386" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>-&gt;<span class="pl-c1">reinitDeepCopy</span>(sr);</td>
        </tr>
        <tr>
          <td id="L1387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1387"></td>
          <td id="LC1387" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1388"></td>
          <td id="LC1388" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1389"></td>
          <td id="LC1389" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Assignment operator that unregisters all the existing registries and deeply copies each of repo element</span></td>
        </tr>
        <tr>
          <td id="L1390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1390"></td>
          <td id="LC1390" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see unregisterAll()</span></td>
        </tr>
        <tr>
          <td id="L1391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1391"></td>
          <td id="LC1391" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see deepCopy(const AbstractRegistry&amp;)</span></td>
        </tr>
        <tr>
          <td id="L1392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1392"></td>
          <td id="LC1392" class="blob-code blob-code-inner js-file-line">  Registry&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> Registry&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1393"></td>
          <td id="LC1393" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">this</span> == &amp;sr) {</td>
        </tr>
        <tr>
          <td id="L1394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1394"></td>
          <td id="LC1394" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L1395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1395"></td>
          <td id="LC1395" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1396"></td>
          <td id="LC1396" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>-&gt;<span class="pl-c1">reinitDeepCopy</span>(sr);</td>
        </tr>
        <tr>
          <td id="L1397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1397"></td>
          <td id="LC1397" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L1398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1398"></td>
          <td id="LC1398" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1399"></td>
          <td id="LC1399" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1400"></td>
          <td id="LC1400" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Registry</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1401"></td>
          <td id="LC1401" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregisterAll</span>();</td>
        </tr>
        <tr>
          <td id="L1402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1402"></td>
          <td id="LC1402" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1403"></td>
          <td id="LC1403" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1404"></td>
          <td id="LC1404" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L1405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1405"></td>
          <td id="LC1405" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">unregisterAll</span>(<span class="pl-k">void</span>) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1406"></td>
          <td id="LC1406" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (!<span class="pl-c1">this</span>-&gt;<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L1407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1407"></td>
          <td id="LC1407" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">auto</span>&amp;&amp; curr : <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>()) {</td>
        </tr>
        <tr>
          <td id="L1408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1408"></td>
          <td id="LC1408" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">base::utils::safeDelete</span>(curr.<span class="pl-smi">second</span>);</td>
        </tr>
        <tr>
          <td id="L1409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1409"></td>
          <td id="LC1409" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1410"></td>
          <td id="LC1410" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">clear</span>();</td>
        </tr>
        <tr>
          <td id="L1411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1411"></td>
          <td id="LC1411" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1412"></td>
          <td id="LC1412" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1413"></td>
          <td id="LC1413" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1414"></td>
          <td id="LC1414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Registers new registry to repository.</span></td>
        </tr>
        <tr>
          <td id="L1415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1415"></td>
          <td id="LC1415" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">registerNew</span>(<span class="pl-k">const</span> T_Key&amp; uniqKey, T_Ptr* ptr) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1416"></td>
          <td id="LC1416" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregister</span>(uniqKey);</td>
        </tr>
        <tr>
          <td id="L1417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1417"></td>
          <td id="LC1417" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">insert</span>(<span class="pl-c1">std::make_pair</span>(uniqKey, ptr));</td>
        </tr>
        <tr>
          <td id="L1418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1418"></td>
          <td id="LC1418" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1419"></td>
          <td id="LC1419" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1420"></td>
          <td id="LC1420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Unregisters single entry mapped to specified unique key</span></td>
        </tr>
        <tr>
          <td id="L1421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1421"></td>
          <td id="LC1421" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">unregister</span>(<span class="pl-k">const</span> T_Key&amp; uniqKey) {</td>
        </tr>
        <tr>
          <td id="L1422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1422"></td>
          <td id="LC1422" class="blob-code blob-code-inner js-file-line">    T_Ptr* existing = <span class="pl-c1">get</span>(uniqKey);</td>
        </tr>
        <tr>
          <td id="L1423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1423"></td>
          <td id="LC1423" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (existing != <span class="pl-c1">nullptr</span>) {</td>
        </tr>
        <tr>
          <td id="L1424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1424"></td>
          <td id="LC1424" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">erase</span>(uniqKey);</td>
        </tr>
        <tr>
          <td id="L1425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1425"></td>
          <td id="LC1425" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">base::utils::safeDelete</span>(existing);</td>
        </tr>
        <tr>
          <td id="L1426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1426"></td>
          <td id="LC1426" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1427"></td>
          <td id="LC1427" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1428"></td>
          <td id="LC1428" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1429"></td>
          <td id="LC1429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Gets pointer from repository. If none found, nullptr is returned.</span></td>
        </tr>
        <tr>
          <td id="L1430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1430"></td>
          <td id="LC1430" class="blob-code blob-code-inner js-file-line">  T_Ptr* <span class="pl-en">get</span>(<span class="pl-k">const</span> T_Key&amp; uniqKey) {</td>
        </tr>
        <tr>
          <td id="L1431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1431"></td>
          <td id="LC1431" class="blob-code blob-code-inner js-file-line">    iterator it = <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">find</span>(uniqKey);</td>
        </tr>
        <tr>
          <td id="L1432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1432"></td>
          <td id="LC1432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> it == <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">end</span>()</td>
        </tr>
        <tr>
          <td id="L1433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1433"></td>
          <td id="LC1433" class="blob-code blob-code-inner js-file-line">           ? <span class="pl-c1">nullptr</span></td>
        </tr>
        <tr>
          <td id="L1434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1434"></td>
          <td id="LC1434" class="blob-code blob-code-inner js-file-line">           : it-&gt;<span class="pl-smi">second</span>;</td>
        </tr>
        <tr>
          <td id="L1435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1435"></td>
          <td id="LC1435" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1436"></td>
          <td id="LC1436" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1437"></td>
          <td id="LC1437" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1438"></td>
          <td id="LC1438" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">deepCopy</span>(<span class="pl-k">const</span> AbstractRegistry&lt;T_Ptr, std::unordered_map&lt;T_Key, T_Ptr*&gt;&gt;&amp; sr) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1439"></td>
          <td id="LC1439" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (const_iterator it = sr.<span class="pl-c1">cbegin</span>(); it != sr.<span class="pl-c1">cend</span>(); ++it) {</td>
        </tr>
        <tr>
          <td id="L1440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1440"></td>
          <td id="LC1440" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">registerNew</span>(it-&gt;<span class="pl-smi">first</span>, <span class="pl-k">new</span> <span class="pl-c1">T_Ptr</span>(*it-&gt;<span class="pl-smi">second</span>));</td>
        </tr>
        <tr>
          <td id="L1441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1441"></td>
          <td id="LC1441" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1442"></td>
          <td id="LC1442" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1443"></td>
          <td id="LC1443" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1444"></td>
          <td id="LC1444" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1445"></td>
          <td id="LC1445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief A pointer registry mechanism to manage memory and provide search functionalities. (predicate version)</span></td>
        </tr>
        <tr>
          <td id="L1446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1446"></td>
          <td id="LC1446" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1447"></td>
          <td id="LC1447" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail NOTE: This is thread-unsafe implementation of AbstractRegistry&lt;T_Ptr, Container&gt;. Any implementation of this class</span></td>
        </tr>
        <tr>
          <td id="L1448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1448"></td>
          <td id="LC1448" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ should be made thread-safe explicitly</span></td>
        </tr>
        <tr>
          <td id="L1449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1449"></td>
          <td id="LC1449" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T_Ptr, <span class="pl-k">typename</span> Pred&gt;</td>
        </tr>
        <tr>
          <td id="L1450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1450"></td>
          <td id="LC1450" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">RegistryWithPred</span> : <span class="pl-k">public</span> <span class="pl-en">AbstractRegistry</span>&lt;T_Ptr, std::vector&lt;T_Ptr*&gt;&gt; {</td>
        </tr>
        <tr>
          <td id="L1451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1451"></td>
          <td id="LC1451" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1452"></td>
          <td id="LC1452" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> RegistryWithPred&lt;T_Ptr, Pred&gt;::iterator iterator;</td>
        </tr>
        <tr>
          <td id="L1453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1453"></td>
          <td id="LC1453" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> RegistryWithPred&lt;T_Ptr, Pred&gt;::const_iterator const_iterator;</td>
        </tr>
        <tr>
          <td id="L1454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1454"></td>
          <td id="LC1454" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1455"></td>
          <td id="LC1455" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">RegistryWithPred</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1456"></td>
          <td id="LC1456" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1457"></td>
          <td id="LC1457" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1458"></td>
          <td id="LC1458" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~RegistryWithPred</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1459"></td>
          <td id="LC1459" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregisterAll</span>();</td>
        </tr>
        <tr>
          <td id="L1460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1460"></td>
          <td id="LC1460" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1461"></td>
          <td id="LC1461" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1462"></td>
          <td id="LC1462" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Copy constructor that is useful for base classes. Try to avoid this constructor, use move constructor.</span></td>
        </tr>
        <tr>
          <td id="L1463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1463"></td>
          <td id="LC1463" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">RegistryWithPred</span>(<span class="pl-k">const</span> RegistryWithPred&amp; sr) : AbstractRegistry&lt;T_Ptr, std::vector&lt;T_Ptr*&gt;&gt;() {</td>
        </tr>
        <tr>
          <td id="L1464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1464"></td>
          <td id="LC1464" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">this</span> == &amp;sr) {</td>
        </tr>
        <tr>
          <td id="L1465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1465"></td>
          <td id="LC1465" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L1466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1466"></td>
          <td id="LC1466" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1467"></td>
          <td id="LC1467" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>-&gt;<span class="pl-c1">reinitDeepCopy</span>(sr);</td>
        </tr>
        <tr>
          <td id="L1468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1468"></td>
          <td id="LC1468" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1469"></td>
          <td id="LC1469" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1470"></td>
          <td id="LC1470" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Assignment operator that unregisters all the existing registries and deeply copies each of repo element</span></td>
        </tr>
        <tr>
          <td id="L1471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1471"></td>
          <td id="LC1471" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see unregisterAll()</span></td>
        </tr>
        <tr>
          <td id="L1472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1472"></td>
          <td id="LC1472" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see deepCopy(const AbstractRegistry&amp;)</span></td>
        </tr>
        <tr>
          <td id="L1473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1473"></td>
          <td id="LC1473" class="blob-code blob-code-inner js-file-line">  RegistryWithPred&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> RegistryWithPred&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1474"></td>
          <td id="LC1474" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">this</span> == &amp;sr) {</td>
        </tr>
        <tr>
          <td id="L1475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1475"></td>
          <td id="LC1475" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L1476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1476"></td>
          <td id="LC1476" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1477"></td>
          <td id="LC1477" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>-&gt;<span class="pl-c1">reinitDeepCopy</span>(sr);</td>
        </tr>
        <tr>
          <td id="L1478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1478"></td>
          <td id="LC1478" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L1479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1479"></td>
          <td id="LC1479" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1480"></td>
          <td id="LC1480" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1481"></td>
          <td id="LC1481" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> base::type::<span class="pl-c1">ostream_t</span>&amp; <span class="pl-k">operator</span>&lt;&lt;(base::type::<span class="pl-c1">ostream_t</span>&amp; os, <span class="pl-k">const</span> RegistryWithPred&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1482"></td>
          <td id="LC1482" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (const_iterator it = sr.<span class="pl-c1">list</span>().<span class="pl-c1">begin</span>(); it != sr.<span class="pl-c1">list</span>().<span class="pl-c1">end</span>(); ++it) {</td>
        </tr>
        <tr>
          <td id="L1483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1483"></td>
          <td id="LC1483" class="blob-code blob-code-inner js-file-line">      os &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>    <span class="pl-pds">&quot;</span></span>) &lt;&lt; **it &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L1484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1484"></td>
          <td id="LC1484" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1485"></td>
          <td id="LC1485" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> os;</td>
        </tr>
        <tr>
          <td id="L1486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1486"></td>
          <td id="LC1486" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1487"></td>
          <td id="LC1487" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1488"></td>
          <td id="LC1488" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L1489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1489"></td>
          <td id="LC1489" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">unregisterAll</span>(<span class="pl-k">void</span>) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1490"></td>
          <td id="LC1490" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (!<span class="pl-c1">this</span>-&gt;<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L1491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1491"></td>
          <td id="LC1491" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">auto</span>&amp;&amp; curr : <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>()) {</td>
        </tr>
        <tr>
          <td id="L1492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1492"></td>
          <td id="LC1492" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">base::utils::safeDelete</span>(curr);</td>
        </tr>
        <tr>
          <td id="L1493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1493"></td>
          <td id="LC1493" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1494"></td>
          <td id="LC1494" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">clear</span>();</td>
        </tr>
        <tr>
          <td id="L1495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1495"></td>
          <td id="LC1495" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1496"></td>
          <td id="LC1496" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1497"></td>
          <td id="LC1497" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1498"></td>
          <td id="LC1498" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">unregister</span>(T_Ptr*&amp; ptr) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1499"></td>
          <td id="LC1499" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ptr) {</td>
        </tr>
        <tr>
          <td id="L1500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1500"></td>
          <td id="LC1500" class="blob-code blob-code-inner js-file-line">      iterator iter = <span class="pl-c1">this</span>-&gt;<span class="pl-c1">begin</span>();</td>
        </tr>
        <tr>
          <td id="L1501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1501"></td>
          <td id="LC1501" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (; iter != <span class="pl-c1">this</span>-&gt;<span class="pl-c1">end</span>(); ++iter) {</td>
        </tr>
        <tr>
          <td id="L1502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1502"></td>
          <td id="LC1502" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ptr == *iter) {</td>
        </tr>
        <tr>
          <td id="L1503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1503"></td>
          <td id="LC1503" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
        </tr>
        <tr>
          <td id="L1504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1504"></td>
          <td id="LC1504" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L1505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1505"></td>
          <td id="LC1505" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1506"></td>
          <td id="LC1506" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (iter != <span class="pl-c1">this</span>-&gt;<span class="pl-c1">end</span>() &amp;&amp; *iter != <span class="pl-c1">nullptr</span>) {</td>
        </tr>
        <tr>
          <td id="L1507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1507"></td>
          <td id="LC1507" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">erase</span>(iter);</td>
        </tr>
        <tr>
          <td id="L1508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1508"></td>
          <td id="LC1508" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">base::utils::safeDelete</span>(*iter);</td>
        </tr>
        <tr>
          <td id="L1509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1509"></td>
          <td id="LC1509" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1510"></td>
          <td id="LC1510" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1511"></td>
          <td id="LC1511" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1512"></td>
          <td id="LC1512" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1513"></td>
          <td id="LC1513" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">registerNew</span>(T_Ptr* ptr) ELPP_FINAL {</td>
        </tr>
        <tr>
          <td id="L1514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1514"></td>
          <td id="LC1514" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">push_back</span>(ptr);</td>
        </tr>
        <tr>
          <td id="L1515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1515"></td>
          <td id="LC1515" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1516"></td>
          <td id="LC1516" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1517"></td>
          <td id="LC1517" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Gets pointer from repository with specified arguments. Arguments are passed to predicate</span></td>
        </tr>
        <tr>
          <td id="L1518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1518"></td>
          <td id="LC1518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ in order to validate pointer.</span></td>
        </tr>
        <tr>
          <td id="L1519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1519"></td>
          <td id="LC1519" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> T2&gt;</td>
        </tr>
        <tr>
          <td id="L1520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1520"></td>
          <td id="LC1520" class="blob-code blob-code-inner js-file-line">  T_Ptr* <span class="pl-en">get</span>(<span class="pl-k">const</span> T&amp; arg1, <span class="pl-k">const</span> T2 arg2) {</td>
        </tr>
        <tr>
          <td id="L1521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1521"></td>
          <td id="LC1521" class="blob-code blob-code-inner js-file-line">    iterator iter = <span class="pl-c1">std::find_if</span>(<span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">begin</span>(), <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">end</span>(), <span class="pl-c1">Pred</span>(arg1, arg2));</td>
        </tr>
        <tr>
          <td id="L1522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1522"></td>
          <td id="LC1522" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (iter != <span class="pl-c1">this</span>-&gt;<span class="pl-c1">list</span>().<span class="pl-c1">end</span>() &amp;&amp; *iter != <span class="pl-c1">nullptr</span>) {</td>
        </tr>
        <tr>
          <td id="L1523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1523"></td>
          <td id="LC1523" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> *iter;</td>
        </tr>
        <tr>
          <td id="L1524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1524"></td>
          <td id="LC1524" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1525"></td>
          <td id="LC1525" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L1526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1526"></td>
          <td id="LC1526" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1527"></td>
          <td id="LC1527" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1528"></td>
          <td id="LC1528" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1529"></td>
          <td id="LC1529" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">deepCopy</span>(<span class="pl-k">const</span> AbstractRegistry&lt;T_Ptr, std::vector&lt;T_Ptr*&gt;&gt;&amp; sr) {</td>
        </tr>
        <tr>
          <td id="L1530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1530"></td>
          <td id="LC1530" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (const_iterator it = sr.<span class="pl-c1">list</span>().<span class="pl-c1">begin</span>(); it != sr.<span class="pl-c1">list</span>().<span class="pl-c1">end</span>(); ++it) {</td>
        </tr>
        <tr>
          <td id="L1531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1531"></td>
          <td id="LC1531" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">registerNew</span>(<span class="pl-k">new</span> <span class="pl-c1">T_Ptr</span>(**it));</td>
        </tr>
        <tr>
          <td id="L1532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1532"></td>
          <td id="LC1532" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1533"></td>
          <td id="LC1533" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1534"></td>
          <td id="LC1534" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1535"></td>
          <td id="LC1535" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Utils</span> {</td>
        </tr>
        <tr>
          <td id="L1536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1536"></td>
          <td id="LC1536" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1537"></td>
          <td id="LC1537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> TPtr&gt;</td>
        </tr>
        <tr>
          <td id="L1538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1538"></td>
          <td id="LC1538" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">installCallback</span>(<span class="pl-k">const</span> std::string&amp; id, std::unordered_map&lt;std::string, TPtr&gt;* mapT) {</td>
        </tr>
        <tr>
          <td id="L1539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1539"></td>
          <td id="LC1539" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (mapT-&gt;<span class="pl-c1">find</span>(id) == mapT-&gt;<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L1540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1540"></td>
          <td id="LC1540" class="blob-code blob-code-inner js-file-line">      mapT-&gt;<span class="pl-c1">insert</span>(<span class="pl-c1">std::make_pair</span>(id, <span class="pl-c1">TPtr</span>(<span class="pl-k">new</span> <span class="pl-c1">T</span>())));</td>
        </tr>
        <tr>
          <td id="L1541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1541"></td>
          <td id="LC1541" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L1542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1542"></td>
          <td id="LC1542" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1543"></td>
          <td id="LC1543" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
        </tr>
        <tr>
          <td id="L1544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1544"></td>
          <td id="LC1544" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1545"></td>
          <td id="LC1545" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1546"></td>
          <td id="LC1546" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> TPtr&gt;</td>
        </tr>
        <tr>
          <td id="L1547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1547"></td>
          <td id="LC1547" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">uninstallCallback</span>(<span class="pl-k">const</span> std::string&amp; id, std::unordered_map&lt;std::string, TPtr&gt;* mapT) {</td>
        </tr>
        <tr>
          <td id="L1548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1548"></td>
          <td id="LC1548" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (mapT-&gt;<span class="pl-c1">find</span>(id) != mapT-&gt;<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L1549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1549"></td>
          <td id="LC1549" class="blob-code blob-code-inner js-file-line">      mapT-&gt;<span class="pl-c1">erase</span>(id);</td>
        </tr>
        <tr>
          <td id="L1550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1550"></td>
          <td id="LC1550" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1551"></td>
          <td id="LC1551" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1552"></td>
          <td id="LC1552" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1553"></td>
          <td id="LC1553" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> TPtr&gt;</td>
        </tr>
        <tr>
          <td id="L1554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1554"></td>
          <td id="LC1554" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> T* <span class="pl-en">callback</span>(<span class="pl-k">const</span> std::string&amp; id, std::unordered_map&lt;std::string, TPtr&gt;* mapT) {</td>
        </tr>
        <tr>
          <td id="L1555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1555"></td>
          <td id="LC1555" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> std::unordered_map&lt;std::string, TPtr&gt;::iterator iter = mapT-&gt;<span class="pl-c1">find</span>(id);</td>
        </tr>
        <tr>
          <td id="L1556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1556"></td>
          <td id="LC1556" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (iter != mapT-&gt;<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L1557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1557"></td>
          <td id="LC1557" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">static_cast</span>&lt;T*&gt;(iter-&gt;<span class="pl-smi">second</span>.<span class="pl-c1">get</span>());</td>
        </tr>
        <tr>
          <td id="L1558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1558"></td>
          <td id="LC1558" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1559"></td>
          <td id="LC1559" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L1560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1560"></td>
          <td id="LC1560" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1561"></td>
          <td id="LC1561" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1562"></td>
          <td id="LC1562" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace utils</span></td>
        </tr>
        <tr>
          <td id="L1563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1563"></td>
          <td id="LC1563" class="blob-code blob-code-inner js-file-line">} <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L1564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1564"></td>
          <td id="LC1564" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Base of Easylogging++ friendly class</span></td>
        </tr>
        <tr>
          <td id="L1565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1565"></td>
          <td id="LC1565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1566"></td>
          <td id="LC1566" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail After inheriting this class publicly, implement pure-virtual function `void log(std::ostream&amp;) const`</span></td>
        </tr>
        <tr>
          <td id="L1567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1567"></td>
          <td id="LC1567" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Loggable</span> {</td>
        </tr>
        <tr>
          <td id="L1568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1568"></td>
          <td id="LC1568" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1569"></td>
          <td id="LC1569" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Loggable</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1570"></td>
          <td id="LC1570" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(el::base::type::<span class="pl-c1">ostream_t</span>&amp;) <span class="pl-k">const</span> = 0;</td>
        </tr>
        <tr>
          <td id="L1571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1571"></td>
          <td id="LC1571" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1572"></td>
          <td id="LC1572" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">inline</span> el::base::type::<span class="pl-c1">ostream_t</span>&amp; <span class="pl-k">operator</span>&lt;&lt;(el::base::type::<span class="pl-c1">ostream_t</span>&amp; os, <span class="pl-k">const</span> Loggable&amp; loggable) {</td>
        </tr>
        <tr>
          <td id="L1573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1573"></td>
          <td id="LC1573" class="blob-code blob-code-inner js-file-line">    loggable.<span class="pl-c1">log</span>(os);</td>
        </tr>
        <tr>
          <td id="L1574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1574"></td>
          <td id="LC1574" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> os;</td>
        </tr>
        <tr>
          <td id="L1575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1575"></td>
          <td id="LC1575" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1576"></td>
          <td id="LC1576" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1577"></td>
          <td id="LC1577" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L1578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1578"></td>
          <td id="LC1578" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents log format containing flags and date format. This is used internally to start initial log</span></td>
        </tr>
        <tr>
          <td id="L1579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1579"></td>
          <td id="LC1579" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogFormat</span> : <span class="pl-k">public</span> <span class="pl-en">Loggable</span> {</td>
        </tr>
        <tr>
          <td id="L1580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1580"></td>
          <td id="LC1580" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1581"></td>
          <td id="LC1581" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogFormat</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1582"></td>
          <td id="LC1582" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogFormat</span>(Level level, <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; format);</td>
        </tr>
        <tr>
          <td id="L1583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1583"></td>
          <td id="LC1583" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogFormat</span>(<span class="pl-k">const</span> LogFormat&amp; logFormat);</td>
        </tr>
        <tr>
          <td id="L1584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1584"></td>
          <td id="LC1584" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogFormat</span>(LogFormat&amp;&amp; logFormat);</td>
        </tr>
        <tr>
          <td id="L1585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1585"></td>
          <td id="LC1585" class="blob-code blob-code-inner js-file-line">  LogFormat&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> LogFormat&amp; logFormat);</td>
        </tr>
        <tr>
          <td id="L1586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1586"></td>
          <td id="LC1586" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~LogFormat</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L1587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1587"></td>
          <td id="LC1587" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-k">operator</span>==(<span class="pl-k">const</span> LogFormat&amp; other);</td>
        </tr>
        <tr>
          <td id="L1588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1588"></td>
          <td id="LC1588" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1589"></td>
          <td id="LC1589" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Updates format to be used while logging.</span></td>
        </tr>
        <tr>
          <td id="L1590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1590"></td>
          <td id="LC1590" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param userFormat User provided format</span></td>
        </tr>
        <tr>
          <td id="L1591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1591"></td>
          <td id="LC1591" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">parseFromFormat</span>(<span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; userFormat);</td>
        </tr>
        <tr>
          <td id="L1592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1592"></td>
          <td id="LC1592" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1593"></td>
          <td id="LC1593" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Level <span class="pl-en">level</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1594"></td>
          <td id="LC1594" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_level;</td>
        </tr>
        <tr>
          <td id="L1595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1595"></td>
          <td id="LC1595" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1596"></td>
          <td id="LC1596" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1597"></td>
          <td id="LC1597" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; <span class="pl-en">userFormat</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1598"></td>
          <td id="LC1598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_userFormat;</td>
        </tr>
        <tr>
          <td id="L1599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1599"></td>
          <td id="LC1599" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1600"></td>
          <td id="LC1600" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1601"></td>
          <td id="LC1601" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; <span class="pl-en">format</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1602"></td>
          <td id="LC1602" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_format;</td>
        </tr>
        <tr>
          <td id="L1603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1603"></td>
          <td id="LC1603" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1604"></td>
          <td id="LC1604" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1605"></td>
          <td id="LC1605" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">dateTimeFormat</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1606"></td>
          <td id="LC1606" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_dateTimeFormat;</td>
        </tr>
        <tr>
          <td id="L1607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1607"></td>
          <td id="LC1607" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1608"></td>
          <td id="LC1608" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1609"></td>
          <td id="LC1609" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::EnumType <span class="pl-en">flags</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1610"></td>
          <td id="LC1610" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_flags;</td>
        </tr>
        <tr>
          <td id="L1611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1611"></td>
          <td id="LC1611" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1612"></td>
          <td id="LC1612" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1613"></td>
          <td id="LC1613" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">hasFlag</span>(base::FormatFlags flag) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1614"></td>
          <td id="LC1614" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">base::utils::hasFlag</span>(flag, m_flags);</td>
        </tr>
        <tr>
          <td id="L1615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1615"></td>
          <td id="LC1615" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1616"></td>
          <td id="LC1616" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1617"></td>
          <td id="LC1617" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(el::base::type::<span class="pl-c1">ostream_t</span>&amp; os) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1618"></td>
          <td id="LC1618" class="blob-code blob-code-inner js-file-line">    os &lt;&lt; m_format;</td>
        </tr>
        <tr>
          <td id="L1619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1619"></td>
          <td id="LC1619" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1620"></td>
          <td id="LC1620" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1621"></td>
          <td id="LC1621" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L1622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1622"></td>
          <td id="LC1622" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Updates date time format if available in currFormat.</span></td>
        </tr>
        <tr>
          <td id="L1623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1623"></td>
          <td id="LC1623" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param index Index where %datetime, %date or %time was found</span></td>
        </tr>
        <tr>
          <td id="L1624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1624"></td>
          <td id="LC1624" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param [in,out] currFormat current format that is being used to format</span></td>
        </tr>
        <tr>
          <td id="L1625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1625"></td>
          <td id="LC1625" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">updateDateFormat</span>(std::<span class="pl-c1">size_t</span> index, base::type::<span class="pl-c1">string_t</span>&amp; currFormat) ELPP_FINAL;</td>
        </tr>
        <tr>
          <td id="L1626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1626"></td>
          <td id="LC1626" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1627"></td>
          <td id="LC1627" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Updates %level from format. This is so that we dont have to do it at log-writing-time. It uses m_format and m_level</span></td>
        </tr>
        <tr>
          <td id="L1628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1628"></td>
          <td id="LC1628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">updateFormatSpec</span>(<span class="pl-k">void</span>) ELPP_FINAL;</td>
        </tr>
        <tr>
          <td id="L1629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1629"></td>
          <td id="LC1629" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1630"></td>
          <td id="LC1630" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">addFlag</span>(base::FormatFlags flag) {</td>
        </tr>
        <tr>
          <td id="L1631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1631"></td>
          <td id="LC1631" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">base::utils::addFlag</span>(flag, &amp;m_flags);</td>
        </tr>
        <tr>
          <td id="L1632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1632"></td>
          <td id="LC1632" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1633"></td>
          <td id="LC1633" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1634"></td>
          <td id="LC1634" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1635"></td>
          <td id="LC1635" class="blob-code blob-code-inner js-file-line">  Level m_level;</td>
        </tr>
        <tr>
          <td id="L1636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1636"></td>
          <td id="LC1636" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">string_t</span> m_userFormat;</td>
        </tr>
        <tr>
          <td id="L1637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1637"></td>
          <td id="LC1637" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">string_t</span> m_format;</td>
        </tr>
        <tr>
          <td id="L1638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1638"></td>
          <td id="LC1638" class="blob-code blob-code-inner js-file-line">  std::string m_dateTimeFormat;</td>
        </tr>
        <tr>
          <td id="L1639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1639"></td>
          <td id="LC1639" class="blob-code blob-code-inner js-file-line">  base::type::EnumType m_flags;</td>
        </tr>
        <tr>
          <td id="L1640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1640"></td>
          <td id="LC1640" class="blob-code blob-code-inner js-file-line">  std::string m_currentUser;</td>
        </tr>
        <tr>
          <td id="L1641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1641"></td>
          <td id="LC1641" class="blob-code blob-code-inner js-file-line">  std::string m_currentHost;</td>
        </tr>
        <tr>
          <td id="L1642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1642"></td>
          <td id="LC1642" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Logger;  <span class="pl-c"><span class="pl-c">//</span> To resolve loggerId format specifier easily</span></td>
        </tr>
        <tr>
          <td id="L1643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1643"></td>
          <td id="LC1643" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1644"></td>
          <td id="LC1644" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L1645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1645"></td>
          <td id="LC1645" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Resolving function for format specifier</span></td>
        </tr>
        <tr>
          <td id="L1646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1646"></td>
          <td id="LC1646" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::function&lt;std::string(<span class="pl-k">const</span> LogMessage*)&gt; FormatSpecifierValueResolver;</td>
        </tr>
        <tr>
          <td id="L1647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1647"></td>
          <td id="LC1647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief User-provided custom format specifier</span></td>
        </tr>
        <tr>
          <td id="L1648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1648"></td>
          <td id="LC1648" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @see el::Helpers::installCustomFormatSpecifier</span></td>
        </tr>
        <tr>
          <td id="L1649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1649"></td>
          <td id="LC1649" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @see FormatSpecifierValueResolver</span></td>
        </tr>
        <tr>
          <td id="L1650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1650"></td>
          <td id="LC1650" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">CustomFormatSpecifier</span> {</td>
        </tr>
        <tr>
          <td id="L1651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1651"></td>
          <td id="LC1651" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1652"></td>
          <td id="LC1652" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">CustomFormatSpecifier</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* formatSpecifier, <span class="pl-k">const</span> FormatSpecifierValueResolver&amp; resolver) :</td>
        </tr>
        <tr>
          <td id="L1653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1653"></td>
          <td id="LC1653" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_formatSpecifier</span>(formatSpecifier), m_resolver(resolver) {}</td>
        </tr>
        <tr>
          <td id="L1654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1654"></td>
          <td id="LC1654" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">formatSpecifier</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1655"></td>
          <td id="LC1655" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_formatSpecifier;</td>
        </tr>
        <tr>
          <td id="L1656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1656"></td>
          <td id="LC1656" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1657"></td>
          <td id="LC1657" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> FormatSpecifierValueResolver&amp; <span class="pl-en">resolver</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1658"></td>
          <td id="LC1658" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_resolver;</td>
        </tr>
        <tr>
          <td id="L1659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1659"></td>
          <td id="LC1659" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1660"></td>
          <td id="LC1660" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-k">operator</span>==(<span class="pl-k">const</span> <span class="pl-k">char</span>* formatSpecifier) {</td>
        </tr>
        <tr>
          <td id="L1661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1661"></td>
          <td id="LC1661" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">strcmp</span>(m_formatSpecifier, formatSpecifier) == <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L1662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1662"></td>
          <td id="LC1662" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1663"></td>
          <td id="LC1663" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1664"></td>
          <td id="LC1664" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1665"></td>
          <td id="LC1665" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* m_formatSpecifier;</td>
        </tr>
        <tr>
          <td id="L1666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1666"></td>
          <td id="LC1666" class="blob-code blob-code-inner js-file-line">  FormatSpecifierValueResolver m_resolver;</td>
        </tr>
        <tr>
          <td id="L1667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1667"></td>
          <td id="LC1667" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1668"></td>
          <td id="LC1668" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents single configuration that has representing level, configuration type and a string based value.</span></td>
        </tr>
        <tr>
          <td id="L1669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1669"></td>
          <td id="LC1669" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1670"></td>
          <td id="LC1670" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail String based value means any value either its boolean, integer or string itself, it will be embedded inside quotes</span></td>
        </tr>
        <tr>
          <td id="L1671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1671"></td>
          <td id="LC1671" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ and will be parsed later.</span></td>
        </tr>
        <tr>
          <td id="L1672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1672"></td>
          <td id="LC1672" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1673"></td>
          <td id="LC1673" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ Consider some examples below:</span></td>
        </tr>
        <tr>
          <td id="L1674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1674"></td>
          <td id="LC1674" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/   * el::Configuration confEnabledInfo(el::Level::Info, el::ConfigurationType::Enabled, &quot;true&quot;);</span></td>
        </tr>
        <tr>
          <td id="L1675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1675"></td>
          <td id="LC1675" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/   * el::Configuration confMaxLogFileSizeInfo(el::Level::Info, el::ConfigurationType::MaxLogFileSize, &quot;2048&quot;);</span></td>
        </tr>
        <tr>
          <td id="L1676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1676"></td>
          <td id="LC1676" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/   * el::Configuration confFilenameInfo(el::Level::Info, el::ConfigurationType::Filename, &quot;/var/log/my.log&quot;);</span></td>
        </tr>
        <tr>
          <td id="L1677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1677"></td>
          <td id="LC1677" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Configuration</span> : <span class="pl-k">public</span> <span class="pl-en">Loggable</span> {</td>
        </tr>
        <tr>
          <td id="L1678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1678"></td>
          <td id="LC1678" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1679"></td>
          <td id="LC1679" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Configuration</span>(<span class="pl-k">const</span> Configuration&amp; c);</td>
        </tr>
        <tr>
          <td id="L1680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1680"></td>
          <td id="LC1680" class="blob-code blob-code-inner js-file-line">  Configuration&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> Configuration&amp; c);</td>
        </tr>
        <tr>
          <td id="L1681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1681"></td>
          <td id="LC1681" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1682"></td>
          <td id="LC1682" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Configuration</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1683"></td>
          <td id="LC1683" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1684"></td>
          <td id="LC1684" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1685"></td>
          <td id="LC1685" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Full constructor used to sets value of configuration</span></td>
        </tr>
        <tr>
          <td id="L1686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1686"></td>
          <td id="LC1686" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Configuration</span>(Level level, ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value);</td>
        </tr>
        <tr>
          <td id="L1687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1687"></td>
          <td id="LC1687" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1688"></td>
          <td id="LC1688" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets level of current configuration</span></td>
        </tr>
        <tr>
          <td id="L1689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1689"></td>
          <td id="LC1689" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Level <span class="pl-en">level</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1690"></td>
          <td id="LC1690" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_level;</td>
        </tr>
        <tr>
          <td id="L1691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1691"></td>
          <td id="LC1691" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1692"></td>
          <td id="LC1692" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1693"></td>
          <td id="LC1693" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets configuration type of current configuration</span></td>
        </tr>
        <tr>
          <td id="L1694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1694"></td>
          <td id="LC1694" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> ConfigurationType <span class="pl-en">configurationType</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1695"></td>
          <td id="LC1695" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_configurationType;</td>
        </tr>
        <tr>
          <td id="L1696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1696"></td>
          <td id="LC1696" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1697"></td>
          <td id="LC1697" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1698"></td>
          <td id="LC1698" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets string based configuration value</span></td>
        </tr>
        <tr>
          <td id="L1699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1699"></td>
          <td id="LC1699" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">value</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1700"></td>
          <td id="LC1700" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_value;</td>
        </tr>
        <tr>
          <td id="L1701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1701"></td>
          <td id="LC1701" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1702"></td>
          <td id="LC1702" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1703"></td>
          <td id="LC1703" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Set string based configuration value</span></td>
        </tr>
        <tr>
          <td id="L1704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1704"></td>
          <td id="LC1704" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param value Value to set. Values have to be std::string; For boolean values use &quot;true&quot;, &quot;false&quot;, for any integral values</span></td>
        </tr>
        <tr>
          <td id="L1705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1705"></td>
          <td id="LC1705" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        use them in quotes. They will be parsed when configuring</span></td>
        </tr>
        <tr>
          <td id="L1706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1706"></td>
          <td id="LC1706" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setValue</span>(<span class="pl-k">const</span> std::string&amp; value) {</td>
        </tr>
        <tr>
          <td id="L1707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1707"></td>
          <td id="LC1707" class="blob-code blob-code-inner js-file-line">    m_value = value;</td>
        </tr>
        <tr>
          <td id="L1708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1708"></td>
          <td id="LC1708" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1709"></td>
          <td id="LC1709" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1710"></td>
          <td id="LC1710" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(el::base::type::<span class="pl-c1">ostream_t</span>&amp; os) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1711"></td>
          <td id="LC1711" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1712"></td>
          <td id="LC1712" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Used to find configuration from configuration (pointers) repository. Avoid using it.</span></td>
        </tr>
        <tr>
          <td id="L1713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1713"></td>
          <td id="LC1713" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">class</span> <span class="pl-en">Predicate</span> {</td>
        </tr>
        <tr>
          <td id="L1714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1714"></td>
          <td id="LC1714" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1715"></td>
          <td id="LC1715" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">Predicate</span>(Level level, ConfigurationType configurationType);</td>
        </tr>
        <tr>
          <td id="L1716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1716"></td>
          <td id="LC1716" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1717"></td>
          <td id="LC1717" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">bool</span> <span class="pl-en">operator</span>()(<span class="pl-k">const</span> Configuration* conf) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L1718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1718"></td>
          <td id="LC1718" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1719"></td>
          <td id="LC1719" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1720"></td>
          <td id="LC1720" class="blob-code blob-code-inner js-file-line">    Level m_level;</td>
        </tr>
        <tr>
          <td id="L1721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1721"></td>
          <td id="LC1721" class="blob-code blob-code-inner js-file-line">    ConfigurationType m_configurationType;</td>
        </tr>
        <tr>
          <td id="L1722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1722"></td>
          <td id="LC1722" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L1723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1723"></td>
          <td id="LC1723" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1724"></td>
          <td id="LC1724" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1725"></td>
          <td id="LC1725" class="blob-code blob-code-inner js-file-line">  Level m_level;</td>
        </tr>
        <tr>
          <td id="L1726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1726"></td>
          <td id="LC1726" class="blob-code blob-code-inner js-file-line">  ConfigurationType m_configurationType;</td>
        </tr>
        <tr>
          <td id="L1727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1727"></td>
          <td id="LC1727" class="blob-code blob-code-inner js-file-line">  std::string m_value;</td>
        </tr>
        <tr>
          <td id="L1728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1728"></td>
          <td id="LC1728" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1729"></td>
          <td id="LC1729" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1730"></td>
          <td id="LC1730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Thread-safe Configuration repository</span></td>
        </tr>
        <tr>
          <td id="L1731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1731"></td>
          <td id="LC1731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1732"></td>
          <td id="LC1732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail This repository represents configurations for all the levels and configuration type mapped to a value.</span></td>
        </tr>
        <tr>
          <td id="L1733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1733"></td>
          <td id="LC1733" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Configurations</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::utils::RegistryWithPred&lt;Configuration, Configuration::Predicate&gt; {</td>
        </tr>
        <tr>
          <td id="L1734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1734"></td>
          <td id="LC1734" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1735"></td>
          <td id="LC1735" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Default constructor with empty repository</span></td>
        </tr>
        <tr>
          <td id="L1736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1736"></td>
          <td id="LC1736" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Configurations</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1737"></td>
          <td id="LC1737" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1738"></td>
          <td id="LC1738" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Constructor used to set configurations using configuration file.</span></td>
        </tr>
        <tr>
          <td id="L1739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1739"></td>
          <td id="LC1739" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurationFile Full path to configuration file</span></td>
        </tr>
        <tr>
          <td id="L1740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1740"></td>
          <td id="LC1740" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param useDefaultsForRemaining Lets you set the remaining configurations to default.</span></td>
        </tr>
        <tr>
          <td id="L1741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1741"></td>
          <td id="LC1741" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param base If provided, this configuration will be based off existing repository that this argument is pointing to.</span></td>
        </tr>
        <tr>
          <td id="L1742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1742"></td>
          <td id="LC1742" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see parseFromFile(const std::string&amp;, Configurations* base)</span></td>
        </tr>
        <tr>
          <td id="L1743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1743"></td>
          <td id="LC1743" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see setRemainingToDefault()</span></td>
        </tr>
        <tr>
          <td id="L1744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1744"></td>
          <td id="LC1744" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Configurations</span>(<span class="pl-k">const</span> std::string&amp; configurationFile, <span class="pl-k">bool</span> useDefaultsForRemaining = <span class="pl-c1">true</span>,</td>
        </tr>
        <tr>
          <td id="L1745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1745"></td>
          <td id="LC1745" class="blob-code blob-code-inner js-file-line">                 Configurations* base = <span class="pl-c1">nullptr</span>);</td>
        </tr>
        <tr>
          <td id="L1746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1746"></td>
          <td id="LC1746" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1747"></td>
          <td id="LC1747" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Configurations</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1748"></td>
          <td id="LC1748" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1749"></td>
          <td id="LC1749" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1750"></td>
          <td id="LC1750" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Parses configuration from file.</span></td>
        </tr>
        <tr>
          <td id="L1751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1751"></td>
          <td id="LC1751" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurationFile Full path to configuration file</span></td>
        </tr>
        <tr>
          <td id="L1752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1752"></td>
          <td id="LC1752" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param base Configurations to base new configuration repository off. This value is used when you want to use</span></td>
        </tr>
        <tr>
          <td id="L1753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1753"></td>
          <td id="LC1753" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        existing Configurations to base all the values and then set rest of configuration via configuration file.</span></td>
        </tr>
        <tr>
          <td id="L1754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1754"></td>
          <td id="LC1754" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return True if successfully parsed, false otherwise. You may define &#39;ELPP_DEBUG_ASSERT_FAILURE&#39; to make sure you</span></td>
        </tr>
        <tr>
          <td id="L1755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1755"></td>
          <td id="LC1755" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/         do not proceed without successful parse.</span></td>
        </tr>
        <tr>
          <td id="L1756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1756"></td>
          <td id="LC1756" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">parseFromFile</span>(<span class="pl-k">const</span> std::string&amp; configurationFile, Configurations* base = <span class="pl-c1">nullptr</span>);</td>
        </tr>
        <tr>
          <td id="L1757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1757"></td>
          <td id="LC1757" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1758"></td>
          <td id="LC1758" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Parse configurations from configuration string.</span></td>
        </tr>
        <tr>
          <td id="L1759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1759"></td>
          <td id="LC1759" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1760"></td>
          <td id="LC1760" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail This configuration string has same syntax as configuration file contents. Make sure all the necessary</span></td>
        </tr>
        <tr>
          <td id="L1761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1761"></td>
          <td id="LC1761" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ new line characters are provided.</span></td>
        </tr>
        <tr>
          <td id="L1762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1762"></td>
          <td id="LC1762" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param base Configurations to base new configuration repository off. This value is used when you want to use</span></td>
        </tr>
        <tr>
          <td id="L1763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1763"></td>
          <td id="LC1763" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        existing Configurations to base all the values and then set rest of configuration via configuration text.</span></td>
        </tr>
        <tr>
          <td id="L1764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1764"></td>
          <td id="LC1764" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return True if successfully parsed, false otherwise. You may define &#39;ELPP_DEBUG_ASSERT_FAILURE&#39; to make sure you</span></td>
        </tr>
        <tr>
          <td id="L1765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1765"></td>
          <td id="LC1765" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/         do not proceed without successful parse.</span></td>
        </tr>
        <tr>
          <td id="L1766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1766"></td>
          <td id="LC1766" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">parseFromText</span>(<span class="pl-k">const</span> std::string&amp; configurationsString, Configurations* base = <span class="pl-c1">nullptr</span>);</td>
        </tr>
        <tr>
          <td id="L1767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1767"></td>
          <td id="LC1767" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1768"></td>
          <td id="LC1768" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets configuration based-off an existing configurations.</span></td>
        </tr>
        <tr>
          <td id="L1769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1769"></td>
          <td id="LC1769" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param base Pointer to existing configurations.</span></td>
        </tr>
        <tr>
          <td id="L1770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1770"></td>
          <td id="LC1770" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setFromBase</span>(Configurations* base);</td>
        </tr>
        <tr>
          <td id="L1771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1771"></td>
          <td id="LC1771" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1772"></td>
          <td id="LC1772" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not specified configuration type exists in the repository.</span></td>
        </tr>
        <tr>
          <td id="L1773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1773"></td>
          <td id="LC1773" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1774"></td>
          <td id="LC1774" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail Returns as soon as first level is found.</span></td>
        </tr>
        <tr>
          <td id="L1775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1775"></td>
          <td id="LC1775" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurationType Type of configuration to check existence for.</span></td>
        </tr>
        <tr>
          <td id="L1776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1776"></td>
          <td id="LC1776" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">hasConfiguration</span>(ConfigurationType configurationType);</td>
        </tr>
        <tr>
          <td id="L1777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1777"></td>
          <td id="LC1777" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1778"></td>
          <td id="LC1778" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not specified configuration type exists for specified level</span></td>
        </tr>
        <tr>
          <td id="L1779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1779"></td>
          <td id="LC1779" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param level Level to check</span></td>
        </tr>
        <tr>
          <td id="L1780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1780"></td>
          <td id="LC1780" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurationType Type of configuration to check existence for.</span></td>
        </tr>
        <tr>
          <td id="L1781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1781"></td>
          <td id="LC1781" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">hasConfiguration</span>(Level level, ConfigurationType configurationType);</td>
        </tr>
        <tr>
          <td id="L1782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1782"></td>
          <td id="LC1782" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1783"></td>
          <td id="LC1783" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets value of configuration for specified level.</span></td>
        </tr>
        <tr>
          <td id="L1784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1784"></td>
          <td id="LC1784" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1785"></td>
          <td id="LC1785" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail Any existing configuration for specified level will be replaced. Also note that configuration types</span></td>
        </tr>
        <tr>
          <td id="L1786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1786"></td>
          <td id="LC1786" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ ConfigurationType::SubsecondPrecision and ConfigurationType::PerformanceTracking will be ignored if not set for</span></td>
        </tr>
        <tr>
          <td id="L1787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1787"></td>
          <td id="LC1787" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ Level::Global because these configurations are not dependant on level.</span></td>
        </tr>
        <tr>
          <td id="L1788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1788"></td>
          <td id="LC1788" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param level Level to set configuration for (el::Level).</span></td>
        </tr>
        <tr>
          <td id="L1789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1789"></td>
          <td id="LC1789" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurationType Type of configuration (el::ConfigurationType)</span></td>
        </tr>
        <tr>
          <td id="L1790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1790"></td>
          <td id="LC1790" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param value A string based value. Regardless of what the data type of configuration is, it will always be string</span></td>
        </tr>
        <tr>
          <td id="L1791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1791"></td>
          <td id="LC1791" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ from users&#39; point of view. This is then parsed later to be used internally.</span></td>
        </tr>
        <tr>
          <td id="L1792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1792"></td>
          <td id="LC1792" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see Configuration::setValue(const std::string&amp; value)</span></td>
        </tr>
        <tr>
          <td id="L1793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1793"></td>
          <td id="LC1793" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see el::Level</span></td>
        </tr>
        <tr>
          <td id="L1794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1794"></td>
          <td id="LC1794" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see el::ConfigurationType</span></td>
        </tr>
        <tr>
          <td id="L1795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1795"></td>
          <td id="LC1795" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">set</span>(Level level, ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value);</td>
        </tr>
        <tr>
          <td id="L1796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1796"></td>
          <td id="LC1796" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1797"></td>
          <td id="LC1797" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets single configuration based on other single configuration.</span></td>
        </tr>
        <tr>
          <td id="L1798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1798"></td>
          <td id="LC1798" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see set(Level level, ConfigurationType configurationType, const std::string&amp; value)</span></td>
        </tr>
        <tr>
          <td id="L1799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1799"></td>
          <td id="LC1799" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">set</span>(Configuration* conf);</td>
        </tr>
        <tr>
          <td id="L1800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1800"></td>
          <td id="LC1800" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1801"></td>
          <td id="LC1801" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Configuration* <span class="pl-en">get</span>(Level level, ConfigurationType configurationType) {</td>
        </tr>
        <tr>
          <td id="L1802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1802"></td>
          <td id="LC1802" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L1803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1803"></td>
          <td id="LC1803" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> RegistryWithPred&lt;Configuration, Configuration::Predicate&gt;::<span class="pl-c1">get</span>(level, configurationType);</td>
        </tr>
        <tr>
          <td id="L1804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1804"></td>
          <td id="LC1804" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1805"></td>
          <td id="LC1805" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1806"></td>
          <td id="LC1806" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets configuration for all levels.</span></td>
        </tr>
        <tr>
          <td id="L1807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1807"></td>
          <td id="LC1807" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurationType Type of configuration</span></td>
        </tr>
        <tr>
          <td id="L1808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1808"></td>
          <td id="LC1808" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param value String based value</span></td>
        </tr>
        <tr>
          <td id="L1809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1809"></td>
          <td id="LC1809" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see Configurations::set(Level level, ConfigurationType configurationType, const std::string&amp; value)</span></td>
        </tr>
        <tr>
          <td id="L1810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1810"></td>
          <td id="LC1810" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setGlobally</span>(ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value) {</td>
        </tr>
        <tr>
          <td id="L1811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1811"></td>
          <td id="LC1811" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setGlobally</span>(configurationType, value, <span class="pl-c1">false</span>);</td>
        </tr>
        <tr>
          <td id="L1812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1812"></td>
          <td id="LC1812" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1813"></td>
          <td id="LC1813" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1814"></td>
          <td id="LC1814" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Clears repository so that all the configurations are unset</span></td>
        </tr>
        <tr>
          <td id="L1815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1815"></td>
          <td id="LC1815" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">clear</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1816"></td>
          <td id="LC1816" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L1817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1817"></td>
          <td id="LC1817" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unregisterAll</span>();</td>
        </tr>
        <tr>
          <td id="L1818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1818"></td>
          <td id="LC1818" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1819"></td>
          <td id="LC1819" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1820"></td>
          <td id="LC1820" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets configuration file used in parsing this configurations.</span></td>
        </tr>
        <tr>
          <td id="L1821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1821"></td>
          <td id="LC1821" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1822"></td>
          <td id="LC1822" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail If this repository was set manually or by text this returns empty string.</span></td>
        </tr>
        <tr>
          <td id="L1823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1823"></td>
          <td id="LC1823" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">configurationFile</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1824"></td>
          <td id="LC1824" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_configurationFile;</td>
        </tr>
        <tr>
          <td id="L1825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1825"></td>
          <td id="LC1825" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1826"></td>
          <td id="LC1826" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1827"></td>
          <td id="LC1827" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets configurations to &quot;factory based&quot; configurations.</span></td>
        </tr>
        <tr>
          <td id="L1828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1828"></td>
          <td id="LC1828" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setToDefault</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1829"></td>
          <td id="LC1829" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1830"></td>
          <td id="LC1830" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Lets you set the remaining configurations to default.</span></td>
        </tr>
        <tr>
          <td id="L1831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1831"></td>
          <td id="LC1831" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1832"></td>
          <td id="LC1832" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail By remaining, it means that the level/type a configuration does not exist for.</span></td>
        </tr>
        <tr>
          <td id="L1833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1833"></td>
          <td id="LC1833" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ This function is useful when you want to minimize chances of failures, e.g, if you have a configuration file that sets</span></td>
        </tr>
        <tr>
          <td id="L1834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1834"></td>
          <td id="LC1834" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ configuration for all the configurations except for Enabled or not, we use this so that ENABLED is set to default i.e,</span></td>
        </tr>
        <tr>
          <td id="L1835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1835"></td>
          <td id="LC1835" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ true. If you dont do this explicitly (either by calling this function or by using second param in Constructor</span></td>
        </tr>
        <tr>
          <td id="L1836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1836"></td>
          <td id="LC1836" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ and try to access a value, an error is thrown</span></td>
        </tr>
        <tr>
          <td id="L1837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1837"></td>
          <td id="LC1837" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setRemainingToDefault</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L1838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1838"></td>
          <td id="LC1838" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1839"></td>
          <td id="LC1839" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Parser used internally to parse configurations from file or text.</span></td>
        </tr>
        <tr>
          <td id="L1840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1840"></td>
          <td id="LC1840" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1841"></td>
          <td id="LC1841" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail This class makes use of base::utils::Str.</span></td>
        </tr>
        <tr>
          <td id="L1842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1842"></td>
          <td id="LC1842" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ You should not need this unless you are working on some tool for Easylogging++</span></td>
        </tr>
        <tr>
          <td id="L1843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1843"></td>
          <td id="LC1843" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">class</span> <span class="pl-en">Parser</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L1844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1844"></td>
          <td id="LC1844" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1845"></td>
          <td id="LC1845" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @brief Parses configuration from file.</span></td>
        </tr>
        <tr>
          <td id="L1846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1846"></td>
          <td id="LC1846" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @param configurationFile Full path to configuration file</span></td>
        </tr>
        <tr>
          <td id="L1847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1847"></td>
          <td id="LC1847" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @param sender Sender configurations pointer. Usually &#39;this&#39; is used from calling class</span></td>
        </tr>
        <tr>
          <td id="L1848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1848"></td>
          <td id="LC1848" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @param base Configurations to base new configuration repository off. This value is used when you want to use</span></td>
        </tr>
        <tr>
          <td id="L1849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1849"></td>
          <td id="LC1849" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/        existing Configurations to base all the values and then set rest of configuration via configuration file.</span></td>
        </tr>
        <tr>
          <td id="L1850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1850"></td>
          <td id="LC1850" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @return True if successfully parsed, false otherwise. You may define &#39;_STOP_ON_FIRSTELPP_ASSERTION&#39; to make sure you</span></td>
        </tr>
        <tr>
          <td id="L1851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1851"></td>
          <td id="LC1851" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/         do not proceed without successful parse.</span></td>
        </tr>
        <tr>
          <td id="L1852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1852"></td>
          <td id="LC1852" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">parseFromFile</span>(<span class="pl-k">const</span> std::string&amp; configurationFile, Configurations* sender,</td>
        </tr>
        <tr>
          <td id="L1853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1853"></td>
          <td id="LC1853" class="blob-code blob-code-inner js-file-line">                              Configurations* base = <span class="pl-c1">nullptr</span>);</td>
        </tr>
        <tr>
          <td id="L1854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1854"></td>
          <td id="LC1854" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1855"></td>
          <td id="LC1855" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @brief Parse configurations from configuration string.</span></td>
        </tr>
        <tr>
          <td id="L1856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1856"></td>
          <td id="LC1856" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1857"></td>
          <td id="LC1857" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @detail This configuration string has same syntax as configuration file contents. Make sure all the necessary</span></td>
        </tr>
        <tr>
          <td id="L1858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1858"></td>
          <td id="LC1858" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ new line characters are provided. You may define &#39;_STOP_ON_FIRSTELPP_ASSERTION&#39; to make sure you</span></td>
        </tr>
        <tr>
          <td id="L1859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1859"></td>
          <td id="LC1859" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ do not proceed without successful parse (This is recommended)</span></td>
        </tr>
        <tr>
          <td id="L1860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1860"></td>
          <td id="LC1860" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @param configurationsString the configuration in plain text format</span></td>
        </tr>
        <tr>
          <td id="L1861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1861"></td>
          <td id="LC1861" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @param sender Sender configurations pointer. Usually &#39;this&#39; is used from calling class</span></td>
        </tr>
        <tr>
          <td id="L1862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1862"></td>
          <td id="LC1862" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @param base Configurations to base new configuration repository off. This value is used when you want to use</span></td>
        </tr>
        <tr>
          <td id="L1863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1863"></td>
          <td id="LC1863" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/        existing Configurations to base all the values and then set rest of configuration via configuration text.</span></td>
        </tr>
        <tr>
          <td id="L1864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1864"></td>
          <td id="LC1864" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span>/ @return True if successfully parsed, false otherwise.</span></td>
        </tr>
        <tr>
          <td id="L1865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1865"></td>
          <td id="LC1865" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">parseFromText</span>(<span class="pl-k">const</span> std::string&amp; configurationsString, Configurations* sender,</td>
        </tr>
        <tr>
          <td id="L1866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1866"></td>
          <td id="LC1866" class="blob-code blob-code-inner js-file-line">                              Configurations* base = <span class="pl-c1">nullptr</span>);</td>
        </tr>
        <tr>
          <td id="L1867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1867"></td>
          <td id="LC1867" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1868"></td>
          <td id="LC1868" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1869"></td>
          <td id="LC1869" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Loggers;</td>
        </tr>
        <tr>
          <td id="L1870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1870"></td>
          <td id="LC1870" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">ignoreComments</span>(std::string* line);</td>
        </tr>
        <tr>
          <td id="L1871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1871"></td>
          <td id="LC1871" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">isLevel</span>(<span class="pl-k">const</span> std::string&amp; line);</td>
        </tr>
        <tr>
          <td id="L1872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1872"></td>
          <td id="LC1872" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">isComment</span>(<span class="pl-k">const</span> std::string&amp; line);</td>
        </tr>
        <tr>
          <td id="L1873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1873"></td>
          <td id="LC1873" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">isConfig</span>(<span class="pl-k">const</span> std::string&amp; line);</td>
        </tr>
        <tr>
          <td id="L1874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1874"></td>
          <td id="LC1874" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">parseLine</span>(std::string* line, std::string* currConfigStr, std::string* currLevelStr, Level* currLevel,</td>
        </tr>
        <tr>
          <td id="L1875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1875"></td>
          <td id="LC1875" class="blob-code blob-code-inner js-file-line">                          Configurations* conf);</td>
        </tr>
        <tr>
          <td id="L1876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1876"></td>
          <td id="LC1876" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L1877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1877"></td>
          <td id="LC1877" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1878"></td>
          <td id="LC1878" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1879"></td>
          <td id="LC1879" class="blob-code blob-code-inner js-file-line">  std::string m_configurationFile;</td>
        </tr>
        <tr>
          <td id="L1880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1880"></td>
          <td id="LC1880" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_isFromFile;</td>
        </tr>
        <tr>
          <td id="L1881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1881"></td>
          <td id="LC1881" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Loggers;</td>
        </tr>
        <tr>
          <td id="L1882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1882"></td>
          <td id="LC1882" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1883"></td>
          <td id="LC1883" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Unsafely sets configuration if does not already exist</span></td>
        </tr>
        <tr>
          <td id="L1884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1884"></td>
          <td id="LC1884" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">unsafeSetIfNotExist</span>(Level level, ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value);</td>
        </tr>
        <tr>
          <td id="L1885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1885"></td>
          <td id="LC1885" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1886"></td>
          <td id="LC1886" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Thread unsafe set</span></td>
        </tr>
        <tr>
          <td id="L1887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1887"></td>
          <td id="LC1887" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">unsafeSet</span>(Level level, ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value);</td>
        </tr>
        <tr>
          <td id="L1888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1888"></td>
          <td id="LC1888" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1889"></td>
          <td id="LC1889" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets configurations for all levels including Level::Global if includeGlobalLevel is true</span></td>
        </tr>
        <tr>
          <td id="L1890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1890"></td>
          <td id="LC1890" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see Configurations::setGlobally(ConfigurationType configurationType, const std::string&amp; value)</span></td>
        </tr>
        <tr>
          <td id="L1891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1891"></td>
          <td id="LC1891" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setGlobally</span>(ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value, <span class="pl-k">bool</span> includeGlobalLevel);</td>
        </tr>
        <tr>
          <td id="L1892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1892"></td>
          <td id="LC1892" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1893"></td>
          <td id="LC1893" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets configurations (Unsafely) for all levels including Level::Global if includeGlobalLevel is true</span></td>
        </tr>
        <tr>
          <td id="L1894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1894"></td>
          <td id="LC1894" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see Configurations::setGlobally(ConfigurationType configurationType, const std::string&amp; value)</span></td>
        </tr>
        <tr>
          <td id="L1895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1895"></td>
          <td id="LC1895" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">unsafeSetGlobally</span>(ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value, <span class="pl-k">bool</span> includeGlobalLevel);</td>
        </tr>
        <tr>
          <td id="L1896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1896"></td>
          <td id="LC1896" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L1897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1897"></td>
          <td id="LC1897" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1898"></td>
          <td id="LC1898" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L1899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1899"></td>
          <td id="LC1899" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;base::type::<span class="pl-c1">fstream_t</span>&gt; FileStreamPtr;</td>
        </tr>
        <tr>
          <td id="L1900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1900"></td>
          <td id="LC1900" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::unordered_map&lt;std::string, FileStreamPtr&gt; LogStreamsReferenceMap;</td>
        </tr>
        <tr>
          <td id="L1901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1901"></td>
          <td id="LC1901" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;base::LogStreamsReferenceMap&gt; LogStreamsReferenceMapPtr;</td>
        </tr>
        <tr>
          <td id="L1902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1902"></td>
          <td id="LC1902" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Configurations with data types.</span></td>
        </tr>
        <tr>
          <td id="L1903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1903"></td>
          <td id="LC1903" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1904"></td>
          <td id="LC1904" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail el::Configurations have string based values. This is whats used internally in order to read correct configurations.</span></td>
        </tr>
        <tr>
          <td id="L1905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1905"></td>
          <td id="LC1905" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ This is to perform faster while writing logs using correct configurations.</span></td>
        </tr>
        <tr>
          <td id="L1906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1906"></td>
          <td id="LC1906" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L1907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1907"></td>
          <td id="LC1907" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ This is thread safe and final class containing non-virtual destructor (means nothing should inherit this class)</span></td>
        </tr>
        <tr>
          <td id="L1908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1908"></td>
          <td id="LC1908" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">TypedConfigurations</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L1909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1909"></td>
          <td id="LC1909" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L1910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1910"></td>
          <td id="LC1910" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Constructor to initialize (construct) the object off el::Configurations</span></td>
        </tr>
        <tr>
          <td id="L1911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1911"></td>
          <td id="LC1911" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param configurations Configurations pointer/reference to base this typed configurations off.</span></td>
        </tr>
        <tr>
          <td id="L1912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1912"></td>
          <td id="LC1912" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param logStreamsReference Use ELPP-&gt;registeredLoggers()-&gt;logStreamsReference()</span></td>
        </tr>
        <tr>
          <td id="L1913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1913"></td>
          <td id="LC1913" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">TypedConfigurations</span>(Configurations* configurations, LogStreamsReferenceMapPtr logStreamsReference);</td>
        </tr>
        <tr>
          <td id="L1914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1914"></td>
          <td id="LC1914" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1915"></td>
          <td id="LC1915" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">TypedConfigurations</span>(<span class="pl-k">const</span> TypedConfigurations&amp; other);</td>
        </tr>
        <tr>
          <td id="L1916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1916"></td>
          <td id="LC1916" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1917"></td>
          <td id="LC1917" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~TypedConfigurations</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L1918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1918"></td>
          <td id="LC1918" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1919"></td>
          <td id="LC1919" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1920"></td>
          <td id="LC1920" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> Configurations* <span class="pl-en">configurations</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L1921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1921"></td>
          <td id="LC1921" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_configurations;</td>
        </tr>
        <tr>
          <td id="L1922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1922"></td>
          <td id="LC1922" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1923"></td>
          <td id="LC1923" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1924"></td>
          <td id="LC1924" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">enabled</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1925"></td>
          <td id="LC1925" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">toFile</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1926"></td>
          <td id="LC1926" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> std::string&amp; <span class="pl-en">filename</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1927"></td>
          <td id="LC1927" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">toStandardOutput</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1928"></td>
          <td id="LC1928" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::LogFormat&amp; <span class="pl-en">logFormat</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1929"></td>
          <td id="LC1929" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::SubsecondPrecision&amp; <span class="pl-en">subsecondPrecision</span>(Level level = Level::Global);</td>
        </tr>
        <tr>
          <td id="L1930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1930"></td>
          <td id="LC1930" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::MillisecondsWidth&amp; <span class="pl-en">millisecondsWidth</span>(Level level = Level::Global);</td>
        </tr>
        <tr>
          <td id="L1931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1931"></td>
          <td id="LC1931" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">performanceTracking</span>(Level level = Level::Global);</td>
        </tr>
        <tr>
          <td id="L1932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1932"></td>
          <td id="LC1932" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">fstream_t</span>* <span class="pl-en">fileStream</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1933"></td>
          <td id="LC1933" class="blob-code blob-code-inner js-file-line">  std::<span class="pl-c1">size_t</span> <span class="pl-en">maxLogFileSize</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1934"></td>
          <td id="LC1934" class="blob-code blob-code-inner js-file-line">  std::<span class="pl-c1">size_t</span> <span class="pl-en">logFlushThreshold</span>(Level level);</td>
        </tr>
        <tr>
          <td id="L1935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1935"></td>
          <td id="LC1935" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1936"></td>
          <td id="LC1936" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L1937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1937"></td>
          <td id="LC1937" class="blob-code blob-code-inner js-file-line">  Configurations* m_configurations;</td>
        </tr>
        <tr>
          <td id="L1938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1938"></td>
          <td id="LC1938" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, <span class="pl-k">bool</span>&gt; m_enabledMap;</td>
        </tr>
        <tr>
          <td id="L1939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1939"></td>
          <td id="LC1939" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, <span class="pl-k">bool</span>&gt; m_toFileMap;</td>
        </tr>
        <tr>
          <td id="L1940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1940"></td>
          <td id="LC1940" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, std::string&gt; m_filenameMap;</td>
        </tr>
        <tr>
          <td id="L1941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1941"></td>
          <td id="LC1941" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, <span class="pl-k">bool</span>&gt; m_toStandardOutputMap;</td>
        </tr>
        <tr>
          <td id="L1942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1942"></td>
          <td id="LC1942" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, base::LogFormat&gt; m_logFormatMap;</td>
        </tr>
        <tr>
          <td id="L1943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1943"></td>
          <td id="LC1943" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, base::SubsecondPrecision&gt; m_subsecondPrecisionMap;</td>
        </tr>
        <tr>
          <td id="L1944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1944"></td>
          <td id="LC1944" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, <span class="pl-k">bool</span>&gt; m_performanceTrackingMap;</td>
        </tr>
        <tr>
          <td id="L1945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1945"></td>
          <td id="LC1945" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, base::FileStreamPtr&gt; m_fileStreamMap;</td>
        </tr>
        <tr>
          <td id="L1946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1946"></td>
          <td id="LC1946" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, std::<span class="pl-c1">size_t</span>&gt; m_maxLogFileSizeMap;</td>
        </tr>
        <tr>
          <td id="L1947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1947"></td>
          <td id="LC1947" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, std::<span class="pl-c1">size_t</span>&gt; m_logFlushThresholdMap;</td>
        </tr>
        <tr>
          <td id="L1948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1948"></td>
          <td id="LC1948" class="blob-code blob-code-inner js-file-line">  LogStreamsReferenceMapPtr m_logStreamsReference = <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L1949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1949"></td>
          <td id="LC1949" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1950"></td>
          <td id="LC1950" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Helpers;</td>
        </tr>
        <tr>
          <td id="L1951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1951"></td>
          <td id="LC1951" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::MessageBuilder;</td>
        </tr>
        <tr>
          <td id="L1952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1952"></td>
          <td id="LC1952" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::Writer;</td>
        </tr>
        <tr>
          <td id="L1953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1953"></td>
          <td id="LC1953" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::DefaultLogDispatchCallback;</td>
        </tr>
        <tr>
          <td id="L1954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1954"></td>
          <td id="LC1954" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::LogDispatcher;</td>
        </tr>
        <tr>
          <td id="L1955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1955"></td>
          <td id="LC1955" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1956"></td>
          <td id="LC1956" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Conf_T&gt;</td>
        </tr>
        <tr>
          <td id="L1957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1957"></td>
          <td id="LC1957" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Conf_T <span class="pl-en">getConfigByVal</span>(Level level, <span class="pl-k">const</span> std::unordered_map&lt;Level, Conf_T&gt;* confMap, <span class="pl-k">const</span> <span class="pl-k">char</span>* confName) {</td>
        </tr>
        <tr>
          <td id="L1958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1958"></td>
          <td id="LC1958" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L1959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1959"></td>
          <td id="LC1959" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">unsafeGetConfigByVal</span>(level, confMap, confName);  <span class="pl-c"><span class="pl-c">//</span> This is not unsafe anymore - mutex locked in scope</span></td>
        </tr>
        <tr>
          <td id="L1960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1960"></td>
          <td id="LC1960" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1961"></td>
          <td id="LC1961" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1962"></td>
          <td id="LC1962" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Conf_T&gt;</td>
        </tr>
        <tr>
          <td id="L1963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1963"></td>
          <td id="LC1963" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Conf_T&amp; <span class="pl-en">getConfigByRef</span>(Level level, std::unordered_map&lt;Level, Conf_T&gt;* confMap, <span class="pl-k">const</span> <span class="pl-k">char</span>* confName) {</td>
        </tr>
        <tr>
          <td id="L1964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1964"></td>
          <td id="LC1964" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L1965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1965"></td>
          <td id="LC1965" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">unsafeGetConfigByRef</span>(level, confMap, confName);  <span class="pl-c"><span class="pl-c">//</span> This is not unsafe anymore - mutex locked in scope</span></td>
        </tr>
        <tr>
          <td id="L1966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1966"></td>
          <td id="LC1966" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1967"></td>
          <td id="LC1967" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1968"></td>
          <td id="LC1968" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Conf_T&gt;</td>
        </tr>
        <tr>
          <td id="L1969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1969"></td>
          <td id="LC1969" class="blob-code blob-code-inner js-file-line">  Conf_T <span class="pl-en">unsafeGetConfigByVal</span>(Level level, <span class="pl-k">const</span> std::unordered_map&lt;Level, Conf_T&gt;* confMap, <span class="pl-k">const</span> <span class="pl-k">char</span>* confName) {</td>
        </tr>
        <tr>
          <td id="L1970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1970"></td>
          <td id="LC1970" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_UNUSED</span>(confName);</td>
        </tr>
        <tr>
          <td id="L1971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1971"></td>
          <td id="LC1971" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> std::unordered_map&lt;Level, Conf_T&gt;::const_iterator it = confMap-&gt;<span class="pl-c1">find</span>(level);</td>
        </tr>
        <tr>
          <td id="L1972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1972"></td>
          <td id="LC1972" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (it == confMap-&gt;<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L1973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1973"></td>
          <td id="LC1973" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
        </tr>
        <tr>
          <td id="L1974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1974"></td>
          <td id="LC1974" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> confMap-&gt;<span class="pl-c1">at</span>(Level::Global);</td>
        </tr>
        <tr>
          <td id="L1975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1975"></td>
          <td id="LC1975" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">catch</span> (...) {</td>
        </tr>
        <tr>
          <td id="L1976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1976"></td>
          <td id="LC1976" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">ELPP_INTERNAL_ERROR</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unable to get configuration [<span class="pl-pds">&quot;</span></span> &lt;&lt; confName &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] for level [<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L1977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1977"></td>
          <td id="LC1977" class="blob-code blob-code-inner js-file-line">                            &lt;&lt; <span class="pl-c1">LevelHelper::convertToString</span>(level) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L1978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1978"></td>
          <td id="LC1978" class="blob-code blob-code-inner js-file-line">                            &lt;&lt; std::endl &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Please ensure you have properly configured logger.<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">false</span>);</td>
        </tr>
        <tr>
          <td id="L1979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1979"></td>
          <td id="LC1979" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">Conf_T</span>();</td>
        </tr>
        <tr>
          <td id="L1980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1980"></td>
          <td id="LC1980" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1981"></td>
          <td id="LC1981" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1982"></td>
          <td id="LC1982" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> it-&gt;<span class="pl-smi">second</span>;</td>
        </tr>
        <tr>
          <td id="L1983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1983"></td>
          <td id="LC1983" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L1984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1984"></td>
          <td id="LC1984" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L1985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1985"></td>
          <td id="LC1985" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Conf_T&gt;</td>
        </tr>
        <tr>
          <td id="L1986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1986"></td>
          <td id="LC1986" class="blob-code blob-code-inner js-file-line">  Conf_T&amp; <span class="pl-en">unsafeGetConfigByRef</span>(Level level, std::unordered_map&lt;Level, Conf_T&gt;* confMap, <span class="pl-k">const</span> <span class="pl-k">char</span>* confName) {</td>
        </tr>
        <tr>
          <td id="L1987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1987"></td>
          <td id="LC1987" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_UNUSED</span>(confName);</td>
        </tr>
        <tr>
          <td id="L1988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1988"></td>
          <td id="LC1988" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> std::unordered_map&lt;Level, Conf_T&gt;::iterator it = confMap-&gt;<span class="pl-c1">find</span>(level);</td>
        </tr>
        <tr>
          <td id="L1989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1989"></td>
          <td id="LC1989" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (it == confMap-&gt;<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L1990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1990"></td>
          <td id="LC1990" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
        </tr>
        <tr>
          <td id="L1991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1991"></td>
          <td id="LC1991" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> confMap-&gt;<span class="pl-c1">at</span>(Level::Global);</td>
        </tr>
        <tr>
          <td id="L1992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1992"></td>
          <td id="LC1992" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">catch</span> (...) {</td>
        </tr>
        <tr>
          <td id="L1993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1993"></td>
          <td id="LC1993" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">ELPP_INTERNAL_ERROR</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unable to get configuration [<span class="pl-pds">&quot;</span></span> &lt;&lt; confName &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] for level [<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L1994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1994"></td>
          <td id="LC1994" class="blob-code blob-code-inner js-file-line">                            &lt;&lt; <span class="pl-c1">LevelHelper::convertToString</span>(level) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L1995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1995"></td>
          <td id="LC1995" class="blob-code blob-code-inner js-file-line">                            &lt;&lt; std::endl &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Please ensure you have properly configured logger.<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">false</span>);</td>
        </tr>
        <tr>
          <td id="L1996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1996"></td>
          <td id="LC1996" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L1997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1997"></td>
          <td id="LC1997" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L1998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1998"></td>
          <td id="LC1998" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> it-&gt;<span class="pl-smi">second</span>;</td>
        </tr>
        <tr>
          <td id="L1999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1999"></td>
          <td id="LC1999" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2000"></td>
          <td id="LC2000" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2001"></td>
          <td id="LC2001" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> Conf_T&gt;</td>
        </tr>
        <tr>
          <td id="L2002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2002"></td>
          <td id="LC2002" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setValue</span>(Level level, <span class="pl-k">const</span> Conf_T&amp; value, std::unordered_map&lt;Level, Conf_T&gt;* confMap,</td>
        </tr>
        <tr>
          <td id="L2003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2003"></td>
          <td id="LC2003" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">bool</span> includeGlobalLevel = <span class="pl-c1">true</span>) {</td>
        </tr>
        <tr>
          <td id="L2004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2004"></td>
          <td id="LC2004" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> If map is empty and we are allowed to add into generic level (Level::Global), do it!</span></td>
        </tr>
        <tr>
          <td id="L2005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2005"></td>
          <td id="LC2005" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (confMap-&gt;<span class="pl-c1">empty</span>() &amp;&amp; includeGlobalLevel) {</td>
        </tr>
        <tr>
          <td id="L2006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2006"></td>
          <td id="LC2006" class="blob-code blob-code-inner js-file-line">      confMap-&gt;<span class="pl-c1">insert</span>(<span class="pl-c1">std::make_pair</span>(Level::Global, value));</td>
        </tr>
        <tr>
          <td id="L2007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2007"></td>
          <td id="LC2007" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L2008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2008"></td>
          <td id="LC2008" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2009"></td>
          <td id="LC2009" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> If same value exist in generic level already, dont add it to explicit level</span></td>
        </tr>
        <tr>
          <td id="L2010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2010"></td>
          <td id="LC2010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> std::unordered_map&lt;Level, Conf_T&gt;::iterator it = confMap-&gt;<span class="pl-c1">find</span>(Level::Global);</td>
        </tr>
        <tr>
          <td id="L2011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2011"></td>
          <td id="LC2011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (it != confMap-&gt;<span class="pl-c1">end</span>() &amp;&amp; it-&gt;<span class="pl-smi">second</span> == value) {</td>
        </tr>
        <tr>
          <td id="L2012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2012"></td>
          <td id="LC2012" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L2013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2013"></td>
          <td id="LC2013" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2014"></td>
          <td id="LC2014" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> Now make sure we dont double up values if we really need to add it to explicit level</span></td>
        </tr>
        <tr>
          <td id="L2015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2015"></td>
          <td id="LC2015" class="blob-code blob-code-inner js-file-line">    it = confMap-&gt;<span class="pl-c1">find</span>(level);</td>
        </tr>
        <tr>
          <td id="L2016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2016"></td>
          <td id="LC2016" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (it == confMap-&gt;<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L2017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2017"></td>
          <td id="LC2017" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Value not found for level, add new</span></td>
        </tr>
        <tr>
          <td id="L2018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2018"></td>
          <td id="LC2018" class="blob-code blob-code-inner js-file-line">      confMap-&gt;<span class="pl-c1">insert</span>(<span class="pl-c1">std::make_pair</span>(level, value));</td>
        </tr>
        <tr>
          <td id="L2019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2019"></td>
          <td id="LC2019" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L2020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2020"></td>
          <td id="LC2020" class="blob-code blob-code-inner js-file-line">      <span class="pl-c"><span class="pl-c">//</span> Value found, just update value</span></td>
        </tr>
        <tr>
          <td id="L2021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2021"></td>
          <td id="LC2021" class="blob-code blob-code-inner js-file-line">      confMap-&gt;<span class="pl-c1">at</span>(level) = value;</td>
        </tr>
        <tr>
          <td id="L2022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2022"></td>
          <td id="LC2022" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2023"></td>
          <td id="LC2023" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2024"></td>
          <td id="LC2024" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2025"></td>
          <td id="LC2025" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">build</span>(Configurations* configurations);</td>
        </tr>
        <tr>
          <td id="L2026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2026"></td>
          <td id="LC2026" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">unsigned</span> <span class="pl-k">long</span> <span class="pl-en">getULong</span>(std::string confVal);</td>
        </tr>
        <tr>
          <td id="L2027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2027"></td>
          <td id="LC2027" class="blob-code blob-code-inner js-file-line">  std::string <span class="pl-en">resolveFilename</span>(<span class="pl-k">const</span> std::string&amp; filename);</td>
        </tr>
        <tr>
          <td id="L2028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2028"></td>
          <td id="LC2028" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">insertFile</span>(Level level, <span class="pl-k">const</span> std::string&amp; fullFilename);</td>
        </tr>
        <tr>
          <td id="L2029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2029"></td>
          <td id="LC2029" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">unsafeValidateFileRolling</span>(Level level, <span class="pl-k">const</span> PreRollOutCallback&amp; preRollOutCallback);</td>
        </tr>
        <tr>
          <td id="L2030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2030"></td>
          <td id="LC2030" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2031"></td>
          <td id="LC2031" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">validateFileRolling</span>(Level level, <span class="pl-k">const</span> PreRollOutCallback&amp; preRollOutCallback) {</td>
        </tr>
        <tr>
          <td id="L2032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2032"></td>
          <td id="LC2032" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2033"></td>
          <td id="LC2033" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">unsafeValidateFileRolling</span>(level, preRollOutCallback);</td>
        </tr>
        <tr>
          <td id="L2034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2034"></td>
          <td id="LC2034" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2035"></td>
          <td id="LC2035" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2036"></td>
          <td id="LC2036" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Class that keeps record of current line hit for occasional logging</span></td>
        </tr>
        <tr>
          <td id="L2037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2037"></td>
          <td id="LC2037" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">HitCounter</span> {</td>
        </tr>
        <tr>
          <td id="L2038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2038"></td>
          <td id="LC2038" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2039"></td>
          <td id="LC2039" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">HitCounter</span>(<span class="pl-k">void</span>) :</td>
        </tr>
        <tr>
          <td id="L2040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2040"></td>
          <td id="LC2040" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_filename</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
        </tr>
        <tr>
          <td id="L2041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2041"></td>
          <td id="LC2041" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_lineNumber</span>(<span class="pl-c1">0</span>),</td>
        </tr>
        <tr>
          <td id="L2042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2042"></td>
          <td id="LC2042" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_hitCounts</span>(<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2043"></td>
          <td id="LC2043" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2044"></td>
          <td id="LC2044" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2045"></td>
          <td id="LC2045" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">HitCounter</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber) :</td>
        </tr>
        <tr>
          <td id="L2046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2046"></td>
          <td id="LC2046" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_filename</span>(filename),</td>
        </tr>
        <tr>
          <td id="L2047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2047"></td>
          <td id="LC2047" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_lineNumber</span>(lineNumber),</td>
        </tr>
        <tr>
          <td id="L2048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2048"></td>
          <td id="LC2048" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_hitCounts</span>(<span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L2049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2049"></td>
          <td id="LC2049" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2050"></td>
          <td id="LC2050" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2051"></td>
          <td id="LC2051" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">HitCounter</span>(<span class="pl-k">const</span> HitCounter&amp; hitCounter) :</td>
        </tr>
        <tr>
          <td id="L2052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2052"></td>
          <td id="LC2052" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_filename</span>(hitCounter.m_filename),</td>
        </tr>
        <tr>
          <td id="L2053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2053"></td>
          <td id="LC2053" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_lineNumber</span>(hitCounter.m_lineNumber),</td>
        </tr>
        <tr>
          <td id="L2054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2054"></td>
          <td id="LC2054" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_hitCounts</span>(hitCounter.m_hitCounts) {</td>
        </tr>
        <tr>
          <td id="L2055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2055"></td>
          <td id="LC2055" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2056"></td>
          <td id="LC2056" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2057"></td>
          <td id="LC2057" class="blob-code blob-code-inner js-file-line">  HitCounter&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> HitCounter&amp; hitCounter) {</td>
        </tr>
        <tr>
          <td id="L2058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2058"></td>
          <td id="LC2058" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (&amp;hitCounter != <span class="pl-c1">this</span>) {</td>
        </tr>
        <tr>
          <td id="L2059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2059"></td>
          <td id="LC2059" class="blob-code blob-code-inner js-file-line">      m_filename = hitCounter.<span class="pl-smi">m_filename</span>;</td>
        </tr>
        <tr>
          <td id="L2060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2060"></td>
          <td id="LC2060" class="blob-code blob-code-inner js-file-line">      m_lineNumber = hitCounter.<span class="pl-smi">m_lineNumber</span>;</td>
        </tr>
        <tr>
          <td id="L2061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2061"></td>
          <td id="LC2061" class="blob-code blob-code-inner js-file-line">      m_hitCounts = hitCounter.<span class="pl-smi">m_hitCounts</span>;</td>
        </tr>
        <tr>
          <td id="L2062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2062"></td>
          <td id="LC2062" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2063"></td>
          <td id="LC2063" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L2064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2064"></td>
          <td id="LC2064" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2065"></td>
          <td id="LC2065" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2066"></td>
          <td id="LC2066" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~HitCounter</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2067"></td>
          <td id="LC2067" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2068"></td>
          <td id="LC2068" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2069"></td>
          <td id="LC2069" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Resets location of current hit counter</span></td>
        </tr>
        <tr>
          <td id="L2070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2070"></td>
          <td id="LC2070" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">resetLocation</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber) {</td>
        </tr>
        <tr>
          <td id="L2071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2071"></td>
          <td id="LC2071" class="blob-code blob-code-inner js-file-line">    m_filename = filename;</td>
        </tr>
        <tr>
          <td id="L2072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2072"></td>
          <td id="LC2072" class="blob-code blob-code-inner js-file-line">    m_lineNumber = lineNumber;</td>
        </tr>
        <tr>
          <td id="L2073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2073"></td>
          <td id="LC2073" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2074"></td>
          <td id="LC2074" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2075"></td>
          <td id="LC2075" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Validates hit counts and resets it if necessary</span></td>
        </tr>
        <tr>
          <td id="L2076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2076"></td>
          <td id="LC2076" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">validateHitCounts</span>(std::<span class="pl-c1">size_t</span> n) {</td>
        </tr>
        <tr>
          <td id="L2077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2077"></td>
          <td id="LC2077" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m_hitCounts &gt;= base::consts::<span class="pl-c1">kMaxLogPerCounter</span>) {</td>
        </tr>
        <tr>
          <td id="L2078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2078"></td>
          <td id="LC2078" class="blob-code blob-code-inner js-file-line">      m_hitCounts = (n &gt;= <span class="pl-c1">1</span> ? base::consts::<span class="pl-c1">kMaxLogPerCounter</span> % n : <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L2079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2079"></td>
          <td id="LC2079" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2080"></td>
          <td id="LC2080" class="blob-code blob-code-inner js-file-line">    ++m_hitCounts;</td>
        </tr>
        <tr>
          <td id="L2081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2081"></td>
          <td id="LC2081" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2082"></td>
          <td id="LC2082" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2083"></td>
          <td id="LC2083" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">filename</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2084"></td>
          <td id="LC2084" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_filename;</td>
        </tr>
        <tr>
          <td id="L2085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2085"></td>
          <td id="LC2085" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2086"></td>
          <td id="LC2086" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2087"></td>
          <td id="LC2087" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::LineNumber <span class="pl-en">lineNumber</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2088"></td>
          <td id="LC2088" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_lineNumber;</td>
        </tr>
        <tr>
          <td id="L2089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2089"></td>
          <td id="LC2089" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2090"></td>
          <td id="LC2090" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2091"></td>
          <td id="LC2091" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> std::<span class="pl-c1">size_t</span> <span class="pl-en">hitCounts</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2092"></td>
          <td id="LC2092" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_hitCounts;</td>
        </tr>
        <tr>
          <td id="L2093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2093"></td>
          <td id="LC2093" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2094"></td>
          <td id="LC2094" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2095"></td>
          <td id="LC2095" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">increment</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2096"></td>
          <td id="LC2096" class="blob-code blob-code-inner js-file-line">    ++m_hitCounts;</td>
        </tr>
        <tr>
          <td id="L2097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2097"></td>
          <td id="LC2097" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2098"></td>
          <td id="LC2098" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2099"></td>
          <td id="LC2099" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">class</span> <span class="pl-en">Predicate</span> {</td>
        </tr>
        <tr>
          <td id="L2100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2100"></td>
          <td id="LC2100" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2101"></td>
          <td id="LC2101" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">Predicate</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber)</td>
        </tr>
        <tr>
          <td id="L2102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2102"></td>
          <td id="LC2102" class="blob-code blob-code-inner js-file-line">      : m_filename(filename),</td>
        </tr>
        <tr>
          <td id="L2103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2103"></td>
          <td id="LC2103" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">m_lineNumber</span>(lineNumber) {</td>
        </tr>
        <tr>
          <td id="L2104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2104"></td>
          <td id="LC2104" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2105"></td>
          <td id="LC2105" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">operator</span>()(<span class="pl-k">const</span> HitCounter* counter) {</td>
        </tr>
        <tr>
          <td id="L2106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2106"></td>
          <td id="LC2106" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> ((counter != <span class="pl-c1">nullptr</span>) &amp;&amp;</td>
        </tr>
        <tr>
          <td id="L2107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2107"></td>
          <td id="LC2107" class="blob-code blob-code-inner js-file-line">              (<span class="pl-c1">strcmp</span>(counter-&gt;<span class="pl-smi">m_filename</span>, m_filename) == <span class="pl-c1">0</span>) &amp;&amp;</td>
        </tr>
        <tr>
          <td id="L2108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2108"></td>
          <td id="LC2108" class="blob-code blob-code-inner js-file-line">              (counter-&gt;<span class="pl-smi">m_lineNumber</span> == m_lineNumber));</td>
        </tr>
        <tr>
          <td id="L2109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2109"></td>
          <td id="LC2109" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2110"></td>
          <td id="LC2110" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2111"></td>
          <td id="LC2111" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2112"></td>
          <td id="LC2112" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">const</span> <span class="pl-k">char</span>* m_filename;</td>
        </tr>
        <tr>
          <td id="L2113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2113"></td>
          <td id="LC2113" class="blob-code blob-code-inner js-file-line">    base::type::LineNumber m_lineNumber;</td>
        </tr>
        <tr>
          <td id="L2114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2114"></td>
          <td id="LC2114" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L2115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2115"></td>
          <td id="LC2115" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2116"></td>
          <td id="LC2116" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2117"></td>
          <td id="LC2117" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* m_filename;</td>
        </tr>
        <tr>
          <td id="L2118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2118"></td>
          <td id="LC2118" class="blob-code blob-code-inner js-file-line">  base::type::LineNumber m_lineNumber;</td>
        </tr>
        <tr>
          <td id="L2119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2119"></td>
          <td id="LC2119" class="blob-code blob-code-inner js-file-line">  std::<span class="pl-c1">size_t</span> m_hitCounts;</td>
        </tr>
        <tr>
          <td id="L2120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2120"></td>
          <td id="LC2120" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2121"></td>
          <td id="LC2121" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Repository for hit counters used across the application</span></td>
        </tr>
        <tr>
          <td id="L2122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2122"></td>
          <td id="LC2122" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">RegisteredHitCounters</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::utils::RegistryWithPred&lt;base::HitCounter, base::HitCounter::Predicate&gt; {</td>
        </tr>
        <tr>
          <td id="L2123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2123"></td>
          <td id="LC2123" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2124"></td>
          <td id="LC2124" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Validates counter for every N, i.e, registers new if does not exist otherwise updates original one</span></td>
        </tr>
        <tr>
          <td id="L2125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2125"></td>
          <td id="LC2125" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return True if validation resulted in triggering hit. Meaning logs should be written everytime true is returned</span></td>
        </tr>
        <tr>
          <td id="L2126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2126"></td>
          <td id="LC2126" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">validateEveryN</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber, std::<span class="pl-c1">size_t</span> n);</td>
        </tr>
        <tr>
          <td id="L2127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2127"></td>
          <td id="LC2127" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2128"></td>
          <td id="LC2128" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Validates counter for hits &gt;= N, i.e, registers new if does not exist otherwise updates original one</span></td>
        </tr>
        <tr>
          <td id="L2129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2129"></td>
          <td id="LC2129" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return True if validation resulted in triggering hit. Meaning logs should be written everytime true is returned</span></td>
        </tr>
        <tr>
          <td id="L2130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2130"></td>
          <td id="LC2130" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">validateAfterN</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber, std::<span class="pl-c1">size_t</span> n);</td>
        </tr>
        <tr>
          <td id="L2131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2131"></td>
          <td id="LC2131" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2132"></td>
          <td id="LC2132" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Validates counter for hits are &lt;= n, i.e, registers new if does not exist otherwise updates original one</span></td>
        </tr>
        <tr>
          <td id="L2133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2133"></td>
          <td id="LC2133" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return True if validation resulted in triggering hit. Meaning logs should be written everytime true is returned</span></td>
        </tr>
        <tr>
          <td id="L2134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2134"></td>
          <td id="LC2134" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">validateNTimes</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber, std::<span class="pl-c1">size_t</span> n);</td>
        </tr>
        <tr>
          <td id="L2135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2135"></td>
          <td id="LC2135" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2136"></td>
          <td id="LC2136" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets hit counter registered at specified position</span></td>
        </tr>
        <tr>
          <td id="L2137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2137"></td>
          <td id="LC2137" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::HitCounter* <span class="pl-en">getCounter</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber) {</td>
        </tr>
        <tr>
          <td id="L2138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2138"></td>
          <td id="LC2138" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2139"></td>
          <td id="LC2139" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">get</span>(filename, lineNumber);</td>
        </tr>
        <tr>
          <td id="L2140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2140"></td>
          <td id="LC2140" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2141"></td>
          <td id="LC2141" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2142"></td>
          <td id="LC2142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Action to be taken for dispatching</span></td>
        </tr>
        <tr>
          <td id="L2143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2143"></td>
          <td id="LC2143" class="blob-code blob-code-inner js-file-line"><span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">DispatchAction</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L2144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2144"></td>
          <td id="LC2144" class="blob-code blob-code-inner js-file-line">  None = <span class="pl-c1">1</span>, NormalLog = <span class="pl-c1">2</span>, SysLog = <span class="pl-c1">4</span></td>
        </tr>
        <tr>
          <td id="L2145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2145"></td>
          <td id="LC2145" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2146"></td>
          <td id="LC2146" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L2147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2147"></td>
          <td id="LC2147" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2148"></td>
          <td id="LC2148" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Callback</span> : <span class="pl-k">protected</span> <span class="pl-en">base</span>::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L2149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2149"></td>
          <td id="LC2149" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2150"></td>
          <td id="LC2150" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Callback</span>(<span class="pl-k">void</span>) : m_enabled(<span class="pl-c1">true</span>) {}</td>
        </tr>
        <tr>
          <td id="L2151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2151"></td>
          <td id="LC2151" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">enabled</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2152"></td>
          <td id="LC2152" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_enabled;</td>
        </tr>
        <tr>
          <td id="L2153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2153"></td>
          <td id="LC2153" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2154"></td>
          <td id="LC2154" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setEnabled</span>(<span class="pl-k">bool</span> enabled) {</td>
        </tr>
        <tr>
          <td id="L2155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2155"></td>
          <td id="LC2155" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2156"></td>
          <td id="LC2156" class="blob-code blob-code-inner js-file-line">    m_enabled = enabled;</td>
        </tr>
        <tr>
          <td id="L2157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2157"></td>
          <td id="LC2157" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2158"></td>
          <td id="LC2158" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L2159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2159"></td>
          <td id="LC2159" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">handle</span>(<span class="pl-k">const</span> T* handlePtr) = 0;</td>
        </tr>
        <tr>
          <td id="L2160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2160"></td>
          <td id="LC2160" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2161"></td>
          <td id="LC2161" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_enabled;</td>
        </tr>
        <tr>
          <td id="L2162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2162"></td>
          <td id="LC2162" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2163"></td>
          <td id="LC2163" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogDispatchData</span> {</td>
        </tr>
        <tr>
          <td id="L2164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2164"></td>
          <td id="LC2164" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2165"></td>
          <td id="LC2165" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogDispatchData</span>() : m_logMessage(<span class="pl-c1">nullptr</span>), m_dispatchAction(base::DispatchAction::None) {}</td>
        </tr>
        <tr>
          <td id="L2166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2166"></td>
          <td id="LC2166" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> LogMessage* <span class="pl-en">logMessage</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2167"></td>
          <td id="LC2167" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_logMessage;</td>
        </tr>
        <tr>
          <td id="L2168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2168"></td>
          <td id="LC2168" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2169"></td>
          <td id="LC2169" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::DispatchAction <span class="pl-en">dispatchAction</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2170"></td>
          <td id="LC2170" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_dispatchAction;</td>
        </tr>
        <tr>
          <td id="L2171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2171"></td>
          <td id="LC2171" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2172"></td>
          <td id="LC2172" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setLogMessage</span>(LogMessage* logMessage) {</td>
        </tr>
        <tr>
          <td id="L2173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2173"></td>
          <td id="LC2173" class="blob-code blob-code-inner js-file-line">    m_logMessage = logMessage;</td>
        </tr>
        <tr>
          <td id="L2174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2174"></td>
          <td id="LC2174" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2175"></td>
          <td id="LC2175" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setDispatchAction</span>(base::DispatchAction dispatchAction) {</td>
        </tr>
        <tr>
          <td id="L2176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2176"></td>
          <td id="LC2176" class="blob-code blob-code-inner js-file-line">    m_dispatchAction = dispatchAction;</td>
        </tr>
        <tr>
          <td id="L2177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2177"></td>
          <td id="LC2177" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2178"></td>
          <td id="LC2178" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2179"></td>
          <td id="LC2179" class="blob-code blob-code-inner js-file-line">  LogMessage* m_logMessage;</td>
        </tr>
        <tr>
          <td id="L2180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2180"></td>
          <td id="LC2180" class="blob-code blob-code-inner js-file-line">  base::DispatchAction m_dispatchAction;</td>
        </tr>
        <tr>
          <td id="L2181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2181"></td>
          <td id="LC2181" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">base</span>::LogDispatcher;</td>
        </tr>
        <tr>
          <td id="L2182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2182"></td>
          <td id="LC2182" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2183"></td>
          <td id="LC2183" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2184"></td>
          <td id="LC2184" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogDispatchCallback</span> : <span class="pl-k">public</span> <span class="pl-en">Callback</span>&lt;LogDispatchData&gt; {</td>
        </tr>
        <tr>
          <td id="L2185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2185"></td>
          <td id="LC2185" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L2186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2186"></td>
          <td id="LC2186" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">handle</span>(<span class="pl-k">const</span> LogDispatchData* data);</td>
        </tr>
        <tr>
          <td id="L2187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2187"></td>
          <td id="LC2187" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex&amp; <span class="pl-en">fileHandle</span>(<span class="pl-k">const</span> LogDispatchData* data);</td>
        </tr>
        <tr>
          <td id="L2188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2188"></td>
          <td id="LC2188" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2189"></td>
          <td id="LC2189" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">base</span>::LogDispatcher;</td>
        </tr>
        <tr>
          <td id="L2190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2190"></td>
          <td id="LC2190" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, std::unique_ptr&lt;base::threading::Mutex&gt;&gt; m_fileLocks;</td>
        </tr>
        <tr>
          <td id="L2191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2191"></td>
          <td id="LC2191" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex m_fileLocksMapLock;</td>
        </tr>
        <tr>
          <td id="L2192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2192"></td>
          <td id="LC2192" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2193"></td>
          <td id="LC2193" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PerformanceTrackingCallback</span> : <span class="pl-k">public</span> <span class="pl-en">Callback</span>&lt;PerformanceTrackingData&gt; {</td>
        </tr>
        <tr>
          <td id="L2194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2194"></td>
          <td id="LC2194" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2195"></td>
          <td id="LC2195" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">base</span>::PerformanceTracker;</td>
        </tr>
        <tr>
          <td id="L2196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2196"></td>
          <td id="LC2196" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2197"></td>
          <td id="LC2197" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LoggerRegistrationCallback</span> : <span class="pl-k">public</span> <span class="pl-en">Callback</span>&lt;Logger&gt; {</td>
        </tr>
        <tr>
          <td id="L2198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2198"></td>
          <td id="LC2198" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2199"></td>
          <td id="LC2199" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">base</span>::RegisteredLoggers;</td>
        </tr>
        <tr>
          <td id="L2200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2200"></td>
          <td id="LC2200" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2201"></td>
          <td id="LC2201" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogBuilder</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L2202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2202"></td>
          <td id="LC2202" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2203"></td>
          <td id="LC2203" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogBuilder</span>() : m_termSupportsColor(base::utils::OS::termSupportsColor()) {}</td>
        </tr>
        <tr>
          <td id="L2204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2204"></td>
          <td id="LC2204" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~LogBuilder</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2205"></td>
          <td id="LC2205" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_INTERNAL_INFO</span>(<span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Destroying log builder...<span class="pl-pds">&quot;</span></span>)</td>
        </tr>
        <tr>
          <td id="L2206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2206"></td>
          <td id="LC2206" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2207"></td>
          <td id="LC2207" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> base::type::<span class="pl-c1">string_t</span> <span class="pl-en">build</span>(<span class="pl-k">const</span> LogMessage* logMessage, <span class="pl-k">bool</span> appendNewLine) <span class="pl-k">const</span> = 0;</td>
        </tr>
        <tr>
          <td id="L2208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2208"></td>
          <td id="LC2208" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">convertToColoredOutput</span>(base::type::<span class="pl-c1">string_t</span>* logLine, Level level);</td>
        </tr>
        <tr>
          <td id="L2209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2209"></td>
          <td id="LC2209" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2210"></td>
          <td id="LC2210" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_termSupportsColor;</td>
        </tr>
        <tr>
          <td id="L2211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2211"></td>
          <td id="LC2211" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::DefaultLogDispatchCallback;</td>
        </tr>
        <tr>
          <td id="L2212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2212"></td>
          <td id="LC2212" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2213"></td>
          <td id="LC2213" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typedef</span> std::shared_ptr&lt;LogBuilder&gt; LogBuilderPtr;</td>
        </tr>
        <tr>
          <td id="L2214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2214"></td>
          <td id="LC2214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents a logger holding ID and configurations we need to write logs</span></td>
        </tr>
        <tr>
          <td id="L2215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2215"></td>
          <td id="LC2215" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L2216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2216"></td>
          <td id="LC2216" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail This class does not write logs itself instead its used by writer to read configurations from.</span></td>
        </tr>
        <tr>
          <td id="L2217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2217"></td>
          <td id="LC2217" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Logger</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::threading::ThreadSafe, public Loggable {</td>
        </tr>
        <tr>
          <td id="L2218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2218"></td>
          <td id="LC2218" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2219"></td>
          <td id="LC2219" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Logger</span>(<span class="pl-k">const</span> std::string&amp; id, base::LogStreamsReferenceMapPtr logStreamsReference);</td>
        </tr>
        <tr>
          <td id="L2220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2220"></td>
          <td id="LC2220" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Logger</span>(<span class="pl-k">const</span> std::string&amp; id, <span class="pl-k">const</span> Configurations&amp; configurations, base::LogStreamsReferenceMapPtr logStreamsReference);</td>
        </tr>
        <tr>
          <td id="L2221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2221"></td>
          <td id="LC2221" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Logger</span>(<span class="pl-k">const</span> Logger&amp; logger);</td>
        </tr>
        <tr>
          <td id="L2222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2222"></td>
          <td id="LC2222" class="blob-code blob-code-inner js-file-line">  Logger&amp; <span class="pl-k">operator</span>=(<span class="pl-k">const</span> Logger&amp; logger);</td>
        </tr>
        <tr>
          <td id="L2223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2223"></td>
          <td id="LC2223" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2224"></td>
          <td id="LC2224" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Logger</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2225"></td>
          <td id="LC2225" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">base::utils::safeDelete</span>(m_typedConfigurations);</td>
        </tr>
        <tr>
          <td id="L2226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2226"></td>
          <td id="LC2226" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2227"></td>
          <td id="LC2227" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2228"></td>
          <td id="LC2228" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(el::base::type::<span class="pl-c1">ostream_t</span>&amp; os) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2229"></td>
          <td id="LC2229" class="blob-code blob-code-inner js-file-line">    os &lt;&lt; m_id.<span class="pl-c1">c_str</span>();</td>
        </tr>
        <tr>
          <td id="L2230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2230"></td>
          <td id="LC2230" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2231"></td>
          <td id="LC2231" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2232"></td>
          <td id="LC2232" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Configures the logger using specified configurations.</span></td>
        </tr>
        <tr>
          <td id="L2233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2233"></td>
          <td id="LC2233" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">configure</span>(<span class="pl-k">const</span> Configurations&amp; configurations);</td>
        </tr>
        <tr>
          <td id="L2234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2234"></td>
          <td id="LC2234" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2235"></td>
          <td id="LC2235" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures logger using existing configurations</span></td>
        </tr>
        <tr>
          <td id="L2236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2236"></td>
          <td id="LC2236" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">reconfigure</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2237"></td>
          <td id="LC2237" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2238"></td>
          <td id="LC2238" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">id</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2239"></td>
          <td id="LC2239" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_id;</td>
        </tr>
        <tr>
          <td id="L2240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2240"></td>
          <td id="LC2240" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2241"></td>
          <td id="LC2241" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2242"></td>
          <td id="LC2242" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">parentApplicationName</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2243"></td>
          <td id="LC2243" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_parentApplicationName;</td>
        </tr>
        <tr>
          <td id="L2244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2244"></td>
          <td id="LC2244" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2245"></td>
          <td id="LC2245" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2246"></td>
          <td id="LC2246" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setParentApplicationName</span>(<span class="pl-k">const</span> std::string&amp; parentApplicationName) {</td>
        </tr>
        <tr>
          <td id="L2247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2247"></td>
          <td id="LC2247" class="blob-code blob-code-inner js-file-line">    m_parentApplicationName = parentApplicationName;</td>
        </tr>
        <tr>
          <td id="L2248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2248"></td>
          <td id="LC2248" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2249"></td>
          <td id="LC2249" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2250"></td>
          <td id="LC2250" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Configurations* <span class="pl-en">configurations</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2251"></td>
          <td id="LC2251" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_configurations;</td>
        </tr>
        <tr>
          <td id="L2252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2252"></td>
          <td id="LC2252" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2253"></td>
          <td id="LC2253" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2254"></td>
          <td id="LC2254" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::TypedConfigurations* <span class="pl-en">typedConfigurations</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2255"></td>
          <td id="LC2255" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_typedConfigurations;</td>
        </tr>
        <tr>
          <td id="L2256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2256"></td>
          <td id="LC2256" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2257"></td>
          <td id="LC2257" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2258"></td>
          <td id="LC2258" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">isValidId</span>(<span class="pl-k">const</span> std::string&amp; id);</td>
        </tr>
        <tr>
          <td id="L2259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2259"></td>
          <td id="LC2259" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2260"></td>
          <td id="LC2260" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Flushes logger to sync all log files for all levels</span></td>
        </tr>
        <tr>
          <td id="L2261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2261"></td>
          <td id="LC2261" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">flush</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2262"></td>
          <td id="LC2262" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2263"></td>
          <td id="LC2263" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">flush</span>(Level level, base::type::<span class="pl-c1">fstream_t</span>* fs);</td>
        </tr>
        <tr>
          <td id="L2264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2264"></td>
          <td id="LC2264" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2265"></td>
          <td id="LC2265" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">isFlushNeeded</span>(Level level) {</td>
        </tr>
        <tr>
          <td id="L2266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2266"></td>
          <td id="LC2266" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ++m_unflushedCount.<span class="pl-c1">find</span>(level)-&gt;<span class="pl-smi">second</span> &gt;= m_typedConfigurations-&gt;<span class="pl-c1">logFlushThreshold</span>(level);</td>
        </tr>
        <tr>
          <td id="L2267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2267"></td>
          <td id="LC2267" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2268"></td>
          <td id="LC2268" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2269"></td>
          <td id="LC2269" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> LogBuilder* <span class="pl-en">logBuilder</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2270"></td>
          <td id="LC2270" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_logBuilder.<span class="pl-c1">get</span>();</td>
        </tr>
        <tr>
          <td id="L2271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2271"></td>
          <td id="LC2271" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2272"></td>
          <td id="LC2272" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2273"></td>
          <td id="LC2273" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setLogBuilder</span>(<span class="pl-k">const</span> LogBuilderPtr&amp; logBuilder) {</td>
        </tr>
        <tr>
          <td id="L2274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2274"></td>
          <td id="LC2274" class="blob-code blob-code-inner js-file-line">    m_logBuilder = logBuilder;</td>
        </tr>
        <tr>
          <td id="L2275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2275"></td>
          <td id="LC2275" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2276"></td>
          <td id="LC2276" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2277"></td>
          <td id="LC2277" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">enabled</span>(Level level) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2278"></td>
          <td id="LC2278" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_typedConfigurations-&gt;<span class="pl-c1">enabled</span>(level);</td>
        </tr>
        <tr>
          <td id="L2279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2279"></td>
          <td id="LC2279" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2280"></td>
          <td id="LC2280" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2281"></td>
          <td id="LC2281" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</td>
        </tr>
        <tr>
          <td id="L2282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2282"></td>
          <td id="LC2282" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">LOGGER_LEVEL_WRITERS_SIGNATURES</span>(<span class="pl-v">FUNCTION_NAME</span>)\</td>
        </tr>
        <tr>
          <td id="L2283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2283"></td>
          <td id="LC2283" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;\</td>
        </tr>
        <tr>
          <td id="L2284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2284"></td>
          <td id="LC2284" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">FUNCTION_NAME</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>*, <span class="pl-k">const</span> T&amp;, <span class="pl-k">const</span> Args&amp;...);\</td>
        </tr>
        <tr>
          <td id="L2285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2285"></td>
          <td id="LC2285" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;\</td>
        </tr>
        <tr>
          <td id="L2286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2286"></td>
          <td id="LC2286" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">FUNCTION_NAME</span>(<span class="pl-k">const</span> T&amp;);</td>
        </tr>
        <tr>
          <td id="L2287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2287"></td>
          <td id="LC2287" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2288"></td>
          <td id="LC2288" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L2289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2289"></td>
          <td id="LC2289" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">verbose</span>(<span class="pl-k">int</span>, <span class="pl-k">const</span> <span class="pl-k">char</span>*, <span class="pl-k">const</span> T&amp;, <span class="pl-k">const</span> Args&amp;...);</td>
        </tr>
        <tr>
          <td id="L2290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2290"></td>
          <td id="LC2290" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2291"></td>
          <td id="LC2291" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2292"></td>
          <td id="LC2292" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">verbose</span>(<span class="pl-k">int</span>, <span class="pl-k">const</span> T&amp;);</td>
        </tr>
        <tr>
          <td id="L2293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2293"></td>
          <td id="LC2293" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2294"></td>
          <td id="LC2294" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LOGGER_LEVEL_WRITERS_SIGNATURES</span>(info)</td>
        </tr>
        <tr>
          <td id="L2295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2295"></td>
          <td id="LC2295" class="blob-code blob-code-inner js-file-line">  LOGGER_LEVEL_WRITERS_SIGNATURES(debug)</td>
        </tr>
        <tr>
          <td id="L2296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2296"></td>
          <td id="LC2296" class="blob-code blob-code-inner js-file-line">  LOGGER_LEVEL_WRITERS_SIGNATURES(warn)</td>
        </tr>
        <tr>
          <td id="L2297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2297"></td>
          <td id="LC2297" class="blob-code blob-code-inner js-file-line">  LOGGER_LEVEL_WRITERS_SIGNATURES(error)</td>
        </tr>
        <tr>
          <td id="L2298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2298"></td>
          <td id="LC2298" class="blob-code blob-code-inner js-file-line">  LOGGER_LEVEL_WRITERS_SIGNATURES(fatal)</td>
        </tr>
        <tr>
          <td id="L2299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2299"></td>
          <td id="LC2299" class="blob-code blob-code-inner js-file-line">  LOGGER_LEVEL_WRITERS_SIGNATURES(trace)</td>
        </tr>
        <tr>
          <td id="L2300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2300"></td>
          <td id="LC2300" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> LOGGER_LEVEL_WRITERS_SIGNATURES</td>
        </tr>
        <tr>
          <td id="L2301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2301"></td>
          <td id="LC2301" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</span></td>
        </tr>
        <tr>
          <td id="L2302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2302"></td>
          <td id="LC2302" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2303"></td>
          <td id="LC2303" class="blob-code blob-code-inner js-file-line">  std::string m_id;</td>
        </tr>
        <tr>
          <td id="L2304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2304"></td>
          <td id="LC2304" class="blob-code blob-code-inner js-file-line">  base::TypedConfigurations* m_typedConfigurations;</td>
        </tr>
        <tr>
          <td id="L2305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2305"></td>
          <td id="LC2305" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">stringstream_t</span> m_stream;</td>
        </tr>
        <tr>
          <td id="L2306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2306"></td>
          <td id="LC2306" class="blob-code blob-code-inner js-file-line">  std::string m_parentApplicationName;</td>
        </tr>
        <tr>
          <td id="L2307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2307"></td>
          <td id="LC2307" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_isConfigured;</td>
        </tr>
        <tr>
          <td id="L2308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2308"></td>
          <td id="LC2308" class="blob-code blob-code-inner js-file-line">  Configurations m_configurations;</td>
        </tr>
        <tr>
          <td id="L2309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2309"></td>
          <td id="LC2309" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;Level, <span class="pl-k">unsigned</span> <span class="pl-k">int</span>&gt; m_unflushedCount;</td>
        </tr>
        <tr>
          <td id="L2310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2310"></td>
          <td id="LC2310" class="blob-code blob-code-inner js-file-line">  base::LogStreamsReferenceMapPtr m_logStreamsReference = <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L2311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2311"></td>
          <td id="LC2311" class="blob-code blob-code-inner js-file-line">  LogBuilderPtr m_logBuilder;</td>
        </tr>
        <tr>
          <td id="L2312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2312"></td>
          <td id="LC2312" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2313"></td>
          <td id="LC2313" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::LogMessage;</td>
        </tr>
        <tr>
          <td id="L2314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2314"></td>
          <td id="LC2314" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Loggers;</td>
        </tr>
        <tr>
          <td id="L2315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2315"></td>
          <td id="LC2315" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Helpers;</td>
        </tr>
        <tr>
          <td id="L2316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2316"></td>
          <td id="LC2316" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::RegisteredLoggers;</td>
        </tr>
        <tr>
          <td id="L2317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2317"></td>
          <td id="LC2317" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::DefaultLogDispatchCallback;</td>
        </tr>
        <tr>
          <td id="L2318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2318"></td>
          <td id="LC2318" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::MessageBuilder;</td>
        </tr>
        <tr>
          <td id="L2319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2319"></td>
          <td id="LC2319" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::Writer;</td>
        </tr>
        <tr>
          <td id="L2320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2320"></td>
          <td id="LC2320" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::PErrorWriter;</td>
        </tr>
        <tr>
          <td id="L2321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2321"></td>
          <td id="LC2321" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::Storage;</td>
        </tr>
        <tr>
          <td id="L2322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2322"></td>
          <td id="LC2322" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::PerformanceTracker;</td>
        </tr>
        <tr>
          <td id="L2323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2323"></td>
          <td id="LC2323" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::LogDispatcher;</td>
        </tr>
        <tr>
          <td id="L2324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2324"></td>
          <td id="LC2324" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2325"></td>
          <td id="LC2325" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Logger</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2326"></td>
          <td id="LC2326" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2327"></td>
          <td id="LC2327" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</td>
        </tr>
        <tr>
          <td id="L2328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2328"></td>
          <td id="LC2328" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L2329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2329"></td>
          <td id="LC2329" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">log_</span>(Level, <span class="pl-k">int</span>, <span class="pl-k">const</span> <span class="pl-k">char</span>*, <span class="pl-k">const</span> T&amp;, <span class="pl-k">const</span> Args&amp;...);</td>
        </tr>
        <tr>
          <td id="L2330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2330"></td>
          <td id="LC2330" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2331"></td>
          <td id="LC2331" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2332"></td>
          <td id="LC2332" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">log_</span>(Level, <span class="pl-k">int</span>, <span class="pl-k">const</span> T&amp;);</td>
        </tr>
        <tr>
          <td id="L2333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2333"></td>
          <td id="LC2333" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2334"></td>
          <td id="LC2334" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L2335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2335"></td>
          <td id="LC2335" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">log</span>(Level, <span class="pl-k">const</span> <span class="pl-k">char</span>*, <span class="pl-k">const</span> T&amp;, <span class="pl-k">const</span> Args&amp;...);</td>
        </tr>
        <tr>
          <td id="L2336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2336"></td>
          <td id="LC2336" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2337"></td>
          <td id="LC2337" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2338"></td>
          <td id="LC2338" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(Level, <span class="pl-k">const</span> T&amp;);</td>
        </tr>
        <tr>
          <td id="L2339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2339"></td>
          <td id="LC2339" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</span></td>
        </tr>
        <tr>
          <td id="L2340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2340"></td>
          <td id="LC2340" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2341"></td>
          <td id="LC2341" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">initUnflushedCount</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2342"></td>
          <td id="LC2342" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2343"></td>
          <td id="LC2343" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::<span class="pl-c1">stringstream_t</span>&amp; <span class="pl-en">stream</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2344"></td>
          <td id="LC2344" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_stream;</td>
        </tr>
        <tr>
          <td id="L2345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2345"></td>
          <td id="LC2345" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2346"></td>
          <td id="LC2346" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2347"></td>
          <td id="LC2347" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">resolveLoggerFormatSpec</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L2348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2348"></td>
          <td id="LC2348" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2349"></td>
          <td id="LC2349" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L2350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2350"></td>
          <td id="LC2350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Loggers repository</span></td>
        </tr>
        <tr>
          <td id="L2351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2351"></td>
          <td id="LC2351" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">RegisteredLoggers</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::utils::Registry&lt;Logger, std::string&gt; {</td>
        </tr>
        <tr>
          <td id="L2352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2352"></td>
          <td id="LC2352" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2353"></td>
          <td id="LC2353" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">RegisteredLoggers</span>(<span class="pl-k">const</span> LogBuilderPtr&amp; defaultLogBuilder);</td>
        </tr>
        <tr>
          <td id="L2354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2354"></td>
          <td id="LC2354" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2355"></td>
          <td id="LC2355" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~RegisteredLoggers</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2356"></td>
          <td id="LC2356" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unsafeFlushAll</span>();</td>
        </tr>
        <tr>
          <td id="L2357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2357"></td>
          <td id="LC2357" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2358"></td>
          <td id="LC2358" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2359"></td>
          <td id="LC2359" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setDefaultConfigurations</span>(<span class="pl-k">const</span> Configurations&amp; configurations) {</td>
        </tr>
        <tr>
          <td id="L2360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2360"></td>
          <td id="LC2360" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2361"></td>
          <td id="LC2361" class="blob-code blob-code-inner js-file-line">    m_defaultConfigurations.<span class="pl-c1">setFromBase</span>(<span class="pl-k">const_cast</span>&lt;Configurations*&gt;(&amp;configurations));</td>
        </tr>
        <tr>
          <td id="L2362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2362"></td>
          <td id="LC2362" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2363"></td>
          <td id="LC2363" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2364"></td>
          <td id="LC2364" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Configurations* <span class="pl-en">defaultConfigurations</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2365"></td>
          <td id="LC2365" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_defaultConfigurations;</td>
        </tr>
        <tr>
          <td id="L2366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2366"></td>
          <td id="LC2366" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2367"></td>
          <td id="LC2367" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2368"></td>
          <td id="LC2368" class="blob-code blob-code-inner js-file-line">  Logger* <span class="pl-en">get</span>(<span class="pl-k">const</span> std::string&amp; id, <span class="pl-k">bool</span> forceCreation = <span class="pl-c1">true</span>);</td>
        </tr>
        <tr>
          <td id="L2369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2369"></td>
          <td id="LC2369" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2370"></td>
          <td id="LC2370" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2371"></td>
          <td id="LC2371" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">installLoggerRegistrationCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2372"></td>
          <td id="LC2372" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> base::utils::Utils::installCallback&lt;T, base::type::LoggerRegistrationCallbackPtr&gt;(id,</td>
        </tr>
        <tr>
          <td id="L2373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2373"></td>
          <td id="LC2373" class="blob-code blob-code-inner js-file-line">           &amp;m_loggerRegistrationCallbacks);</td>
        </tr>
        <tr>
          <td id="L2374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2374"></td>
          <td id="LC2374" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2375"></td>
          <td id="LC2375" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2376"></td>
          <td id="LC2376" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2377"></td>
          <td id="LC2377" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">uninstallLoggerRegistrationCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2378"></td>
          <td id="LC2378" class="blob-code blob-code-inner js-file-line">    base::utils::Utils::uninstallCallback&lt;T, base::type::LoggerRegistrationCallbackPtr&gt;(id, &amp;m_loggerRegistrationCallbacks);</td>
        </tr>
        <tr>
          <td id="L2379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2379"></td>
          <td id="LC2379" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2380"></td>
          <td id="LC2380" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2381"></td>
          <td id="LC2381" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2382"></td>
          <td id="LC2382" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> T* <span class="pl-en">loggerRegistrationCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2383"></td>
          <td id="LC2383" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> base::utils::Utils::callback&lt;T, base::type::LoggerRegistrationCallbackPtr&gt;(id, &amp;m_loggerRegistrationCallbacks);</td>
        </tr>
        <tr>
          <td id="L2384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2384"></td>
          <td id="LC2384" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2385"></td>
          <td id="LC2385" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2386"></td>
          <td id="LC2386" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">remove</span>(<span class="pl-k">const</span> std::string&amp; id);</td>
        </tr>
        <tr>
          <td id="L2387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2387"></td>
          <td id="LC2387" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2388"></td>
          <td id="LC2388" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">has</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2389"></td>
          <td id="LC2389" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">get</span>(id, <span class="pl-c1">false</span>) != <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L2390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2390"></td>
          <td id="LC2390" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2391"></td>
          <td id="LC2391" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2392"></td>
          <td id="LC2392" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">unregister</span>(Logger*&amp; logger) {</td>
        </tr>
        <tr>
          <td id="L2393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2393"></td>
          <td id="LC2393" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2394"></td>
          <td id="LC2394" class="blob-code blob-code-inner js-file-line">    base::utils::Registry&lt;Logger, std::string&gt;::<span class="pl-c1">unregister</span>(logger-&gt;<span class="pl-c1">id</span>());</td>
        </tr>
        <tr>
          <td id="L2395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2395"></td>
          <td id="LC2395" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2396"></td>
          <td id="LC2396" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2397"></td>
          <td id="LC2397" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> LogStreamsReferenceMapPtr <span class="pl-en">logStreamsReference</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2398"></td>
          <td id="LC2398" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_logStreamsReference;</td>
        </tr>
        <tr>
          <td id="L2399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2399"></td>
          <td id="LC2399" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2400"></td>
          <td id="LC2400" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2401"></td>
          <td id="LC2401" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">flushAll</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2402"></td>
          <td id="LC2402" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2403"></td>
          <td id="LC2403" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">unsafeFlushAll</span>();</td>
        </tr>
        <tr>
          <td id="L2404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2404"></td>
          <td id="LC2404" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2405"></td>
          <td id="LC2405" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2406"></td>
          <td id="LC2406" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setDefaultLogBuilder</span>(LogBuilderPtr&amp; logBuilderPtr) {</td>
        </tr>
        <tr>
          <td id="L2407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2407"></td>
          <td id="LC2407" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2408"></td>
          <td id="LC2408" class="blob-code blob-code-inner js-file-line">    m_defaultLogBuilder = logBuilderPtr;</td>
        </tr>
        <tr>
          <td id="L2409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2409"></td>
          <td id="LC2409" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2410"></td>
          <td id="LC2410" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2411"></td>
          <td id="LC2411" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2412"></td>
          <td id="LC2412" class="blob-code blob-code-inner js-file-line">  LogBuilderPtr m_defaultLogBuilder;</td>
        </tr>
        <tr>
          <td id="L2413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2413"></td>
          <td id="LC2413" class="blob-code blob-code-inner js-file-line">  Configurations m_defaultConfigurations;</td>
        </tr>
        <tr>
          <td id="L2414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2414"></td>
          <td id="LC2414" class="blob-code blob-code-inner js-file-line">  base::LogStreamsReferenceMapPtr m_logStreamsReference = <span class="pl-c1">nullptr</span>;</td>
        </tr>
        <tr>
          <td id="L2415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2415"></td>
          <td id="LC2415" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, base::type::LoggerRegistrationCallbackPtr&gt; m_loggerRegistrationCallbacks;</td>
        </tr>
        <tr>
          <td id="L2416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2416"></td>
          <td id="LC2416" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::Storage;</td>
        </tr>
        <tr>
          <td id="L2417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2417"></td>
          <td id="LC2417" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2418"></td>
          <td id="LC2418" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">unsafeFlushAll</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2419"></td>
          <td id="LC2419" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2420"></td>
          <td id="LC2420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents registries for verbose logging</span></td>
        </tr>
        <tr>
          <td id="L2421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2421"></td>
          <td id="LC2421" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">VRegistry</span> : base::NoCopy, public base::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L2422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2422"></td>
          <td id="LC2422" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2423"></td>
          <td id="LC2423" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">VRegistry</span>(base::type::VerboseLevel level, base::type::EnumType* pFlags);</td>
        </tr>
        <tr>
          <td id="L2424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2424"></td>
          <td id="LC2424" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2425"></td>
          <td id="LC2425" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets verbose level. Accepted range is 0-9</span></td>
        </tr>
        <tr>
          <td id="L2426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2426"></td>
          <td id="LC2426" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setLevel</span>(base::type::VerboseLevel level);</td>
        </tr>
        <tr>
          <td id="L2427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2427"></td>
          <td id="LC2427" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2428"></td>
          <td id="LC2428" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::VerboseLevel <span class="pl-en">level</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2429"></td>
          <td id="LC2429" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_level;</td>
        </tr>
        <tr>
          <td id="L2430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2430"></td>
          <td id="LC2430" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2431"></td>
          <td id="LC2431" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2432"></td>
          <td id="LC2432" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">clearModules</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2433"></td>
          <td id="LC2433" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2434"></td>
          <td id="LC2434" class="blob-code blob-code-inner js-file-line">    m_modules.<span class="pl-c1">clear</span>();</td>
        </tr>
        <tr>
          <td id="L2435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2435"></td>
          <td id="LC2435" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2436"></td>
          <td id="LC2436" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2437"></td>
          <td id="LC2437" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setModules</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* modules);</td>
        </tr>
        <tr>
          <td id="L2438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2438"></td>
          <td id="LC2438" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2439"></td>
          <td id="LC2439" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">allowed</span>(base::type::VerboseLevel vlevel, <span class="pl-k">const</span> <span class="pl-k">char</span>* file);</td>
        </tr>
        <tr>
          <td id="L2440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2440"></td>
          <td id="LC2440" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2441"></td>
          <td id="LC2441" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::unordered_map&lt;std::string, base::type::VerboseLevel&gt;&amp; <span class="pl-en">modules</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2442"></td>
          <td id="LC2442" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_modules;</td>
        </tr>
        <tr>
          <td id="L2443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2443"></td>
          <td id="LC2443" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2444"></td>
          <td id="LC2444" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2445"></td>
          <td id="LC2445" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setFromArgs</span>(<span class="pl-k">const</span> base::utils::CommandLineArgs* commandLineArgs);</td>
        </tr>
        <tr>
          <td id="L2446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2446"></td>
          <td id="LC2446" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2447"></td>
          <td id="LC2447" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Whether or not vModules enabled</span></td>
        </tr>
        <tr>
          <td id="L2448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2448"></td>
          <td id="LC2448" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">vModulesEnabled</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2449"></td>
          <td id="LC2449" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> !<span class="pl-c1">base::utils::hasFlag</span>(LoggingFlag::DisableVModules, *m_pFlags);</td>
        </tr>
        <tr>
          <td id="L2450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2450"></td>
          <td id="LC2450" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2451"></td>
          <td id="LC2451" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2452"></td>
          <td id="LC2452" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2453"></td>
          <td id="LC2453" class="blob-code blob-code-inner js-file-line">  base::type::VerboseLevel m_level;</td>
        </tr>
        <tr>
          <td id="L2454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2454"></td>
          <td id="LC2454" class="blob-code blob-code-inner js-file-line">  base::type::EnumType* m_pFlags;</td>
        </tr>
        <tr>
          <td id="L2455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2455"></td>
          <td id="LC2455" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, base::type::VerboseLevel&gt; m_modules;</td>
        </tr>
        <tr>
          <td id="L2456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2456"></td>
          <td id="LC2456" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2457"></td>
          <td id="LC2457" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L2458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2458"></td>
          <td id="LC2458" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogMessage</span> {</td>
        </tr>
        <tr>
          <td id="L2459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2459"></td>
          <td id="LC2459" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2460"></td>
          <td id="LC2460" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogMessage</span>(Level level, <span class="pl-k">const</span> std::string&amp; file, base::type::LineNumber line, <span class="pl-k">const</span> std::string&amp; func,</td>
        </tr>
        <tr>
          <td id="L2461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2461"></td>
          <td id="LC2461" class="blob-code blob-code-inner js-file-line">             base::type::VerboseLevel verboseLevel, Logger* logger) :</td>
        </tr>
        <tr>
          <td id="L2462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2462"></td>
          <td id="LC2462" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_level</span>(level), m_file(file), m_line(line), m_func(func),</td>
        </tr>
        <tr>
          <td id="L2463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2463"></td>
          <td id="LC2463" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_verboseLevel</span>(verboseLevel), m_logger(logger), m_message(logger-&gt;<span class="pl-en">stream</span>().str()) {</td>
        </tr>
        <tr>
          <td id="L2464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2464"></td>
          <td id="LC2464" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2465"></td>
          <td id="LC2465" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Level <span class="pl-en">level</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2466"></td>
          <td id="LC2466" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_level;</td>
        </tr>
        <tr>
          <td id="L2467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2467"></td>
          <td id="LC2467" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2468"></td>
          <td id="LC2468" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">file</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2469"></td>
          <td id="LC2469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_file;</td>
        </tr>
        <tr>
          <td id="L2470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2470"></td>
          <td id="LC2470" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2471"></td>
          <td id="LC2471" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::LineNumber <span class="pl-en">line</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2472"></td>
          <td id="LC2472" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_line;</td>
        </tr>
        <tr>
          <td id="L2473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2473"></td>
          <td id="LC2473" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2474"></td>
          <td id="LC2474" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">func</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2475"></td>
          <td id="LC2475" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_func;</td>
        </tr>
        <tr>
          <td id="L2476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2476"></td>
          <td id="LC2476" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2477"></td>
          <td id="LC2477" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::VerboseLevel <span class="pl-en">verboseLevel</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2478"></td>
          <td id="LC2478" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_verboseLevel;</td>
        </tr>
        <tr>
          <td id="L2479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2479"></td>
          <td id="LC2479" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2480"></td>
          <td id="LC2480" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Logger* <span class="pl-en">logger</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2481"></td>
          <td id="LC2481" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_logger;</td>
        </tr>
        <tr>
          <td id="L2482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2482"></td>
          <td id="LC2482" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2483"></td>
          <td id="LC2483" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; <span class="pl-en">message</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2484"></td>
          <td id="LC2484" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_message;</td>
        </tr>
        <tr>
          <td id="L2485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2485"></td>
          <td id="LC2485" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2486"></td>
          <td id="LC2486" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2487"></td>
          <td id="LC2487" class="blob-code blob-code-inner js-file-line">  Level m_level;</td>
        </tr>
        <tr>
          <td id="L2488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2488"></td>
          <td id="LC2488" class="blob-code blob-code-inner js-file-line">  std::string m_file;</td>
        </tr>
        <tr>
          <td id="L2489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2489"></td>
          <td id="LC2489" class="blob-code blob-code-inner js-file-line">  base::type::LineNumber m_line;</td>
        </tr>
        <tr>
          <td id="L2490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2490"></td>
          <td id="LC2490" class="blob-code blob-code-inner js-file-line">  std::string m_func;</td>
        </tr>
        <tr>
          <td id="L2491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2491"></td>
          <td id="LC2491" class="blob-code blob-code-inner js-file-line">  base::type::VerboseLevel m_verboseLevel;</td>
        </tr>
        <tr>
          <td id="L2492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2492"></td>
          <td id="LC2492" class="blob-code blob-code-inner js-file-line">  Logger* m_logger;</td>
        </tr>
        <tr>
          <td id="L2493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2493"></td>
          <td id="LC2493" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">string_t</span> m_message;</td>
        </tr>
        <tr>
          <td id="L2494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2494"></td>
          <td id="LC2494" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2495"></td>
          <td id="LC2495" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L2496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2496"></td>
          <td id="LC2496" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L2497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2497"></td>
          <td id="LC2497" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AsyncLogItem</span> {</td>
        </tr>
        <tr>
          <td id="L2498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2498"></td>
          <td id="LC2498" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2499"></td>
          <td id="LC2499" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">AsyncLogItem</span>(<span class="pl-k">const</span> LogMessage&amp; logMessage, <span class="pl-k">const</span> LogDispatchData&amp; data, <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>&amp; logLine)</td>
        </tr>
        <tr>
          <td id="L2500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2500"></td>
          <td id="LC2500" class="blob-code blob-code-inner js-file-line">    : m_logMessage(logMessage), m_dispatchData(data), m_logLine(logLine) {}</td>
        </tr>
        <tr>
          <td id="L2501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2501"></td>
          <td id="LC2501" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~AsyncLogItem</span>() {}</td>
        </tr>
        <tr>
          <td id="L2502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2502"></td>
          <td id="LC2502" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> LogMessage* <span class="pl-en">logMessage</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2503"></td>
          <td id="LC2503" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_logMessage;</td>
        </tr>
        <tr>
          <td id="L2504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2504"></td>
          <td id="LC2504" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2505"></td>
          <td id="LC2505" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> LogDispatchData* <span class="pl-en">data</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2506"></td>
          <td id="LC2506" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_dispatchData;</td>
        </tr>
        <tr>
          <td id="L2507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2507"></td>
          <td id="LC2507" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2508"></td>
          <td id="LC2508" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::<span class="pl-c1">string_t</span> <span class="pl-en">logLine</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2509"></td>
          <td id="LC2509" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_logLine;</td>
        </tr>
        <tr>
          <td id="L2510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2510"></td>
          <td id="LC2510" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2511"></td>
          <td id="LC2511" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2512"></td>
          <td id="LC2512" class="blob-code blob-code-inner js-file-line">  LogMessage m_logMessage;</td>
        </tr>
        <tr>
          <td id="L2513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2513"></td>
          <td id="LC2513" class="blob-code blob-code-inner js-file-line">  LogDispatchData m_dispatchData;</td>
        </tr>
        <tr>
          <td id="L2514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2514"></td>
          <td id="LC2514" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">string_t</span> m_logLine;</td>
        </tr>
        <tr>
          <td id="L2515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2515"></td>
          <td id="LC2515" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2516"></td>
          <td id="LC2516" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AsyncLogQueue</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L2517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2517"></td>
          <td id="LC2517" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2518"></td>
          <td id="LC2518" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~AsyncLogQueue</span>() {</td>
        </tr>
        <tr>
          <td id="L2519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2519"></td>
          <td id="LC2519" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_INTERNAL_INFO</span>(<span class="pl-c1">6</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>~AsyncLogQueue<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2520"></td>
          <td id="LC2520" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2521"></td>
          <td id="LC2521" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2522"></td>
          <td id="LC2522" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> AsyncLogItem <span class="pl-en">next</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2523"></td>
          <td id="LC2523" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2524"></td>
          <td id="LC2524" class="blob-code blob-code-inner js-file-line">    AsyncLogItem result = m_queue.<span class="pl-c1">front</span>();</td>
        </tr>
        <tr>
          <td id="L2525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2525"></td>
          <td id="LC2525" class="blob-code blob-code-inner js-file-line">    m_queue.<span class="pl-c1">pop</span>();</td>
        </tr>
        <tr>
          <td id="L2526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2526"></td>
          <td id="LC2526" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> result;</td>
        </tr>
        <tr>
          <td id="L2527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2527"></td>
          <td id="LC2527" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2528"></td>
          <td id="LC2528" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2529"></td>
          <td id="LC2529" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">push</span>(<span class="pl-k">const</span> AsyncLogItem&amp; item) {</td>
        </tr>
        <tr>
          <td id="L2530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2530"></td>
          <td id="LC2530" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2531"></td>
          <td id="LC2531" class="blob-code blob-code-inner js-file-line">    m_queue.<span class="pl-c1">push</span>(item);</td>
        </tr>
        <tr>
          <td id="L2532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2532"></td>
          <td id="LC2532" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2533"></td>
          <td id="LC2533" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">pop</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2534"></td>
          <td id="LC2534" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2535"></td>
          <td id="LC2535" class="blob-code blob-code-inner js-file-line">    m_queue.<span class="pl-c1">pop</span>();</td>
        </tr>
        <tr>
          <td id="L2536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2536"></td>
          <td id="LC2536" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2537"></td>
          <td id="LC2537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> AsyncLogItem <span class="pl-en">front</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2538"></td>
          <td id="LC2538" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2539"></td>
          <td id="LC2539" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_queue.<span class="pl-c1">front</span>();</td>
        </tr>
        <tr>
          <td id="L2540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2540"></td>
          <td id="LC2540" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2541"></td>
          <td id="LC2541" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">empty</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2542"></td>
          <td id="LC2542" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(<span class="pl-c1">lock</span>());</td>
        </tr>
        <tr>
          <td id="L2543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2543"></td>
          <td id="LC2543" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_queue.<span class="pl-c1">empty</span>();</td>
        </tr>
        <tr>
          <td id="L2544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2544"></td>
          <td id="LC2544" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2545"></td>
          <td id="LC2545" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2546"></td>
          <td id="LC2546" class="blob-code blob-code-inner js-file-line">  std::queue&lt;AsyncLogItem&gt; m_queue;</td>
        </tr>
        <tr>
          <td id="L2547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2547"></td>
          <td id="LC2547" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2548"></td>
          <td id="LC2548" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">IWorker</span> {</td>
        </tr>
        <tr>
          <td id="L2549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2549"></td>
          <td id="LC2549" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2550"></td>
          <td id="LC2550" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~IWorker</span>() {}</td>
        </tr>
        <tr>
          <td id="L2551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2551"></td>
          <td id="LC2551" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">start</span>() = 0;</td>
        </tr>
        <tr>
          <td id="L2552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2552"></td>
          <td id="LC2552" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2553"></td>
          <td id="LC2553" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L2554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2554"></td>
          <td id="LC2554" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Easylogging++ management storage</span></td>
        </tr>
        <tr>
          <td id="L2555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2555"></td>
          <td id="LC2555" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Storage</span> : base::NoCopy, public base::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L2556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2556"></td>
          <td id="LC2556" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2557"></td>
          <td id="LC2557" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L2558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2558"></td>
          <td id="LC2558" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Storage</span>(<span class="pl-k">const</span> LogBuilderPtr&amp; defaultLogBuilder, base::IWorker* asyncDispatchWorker);</td>
        </tr>
        <tr>
          <td id="L2559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2559"></td>
          <td id="LC2559" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L2560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2560"></td>
          <td id="LC2560" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">Storage</span>(<span class="pl-k">const</span> LogBuilderPtr&amp; defaultLogBuilder);</td>
        </tr>
        <tr>
          <td id="L2561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2561"></td>
          <td id="LC2561" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L2562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2562"></td>
          <td id="LC2562" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2563"></td>
          <td id="LC2563" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Storage</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2564"></td>
          <td id="LC2564" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2565"></td>
          <td id="LC2565" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">validateEveryNCounter</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber, std::<span class="pl-c1">size_t</span> occasion) {</td>
        </tr>
        <tr>
          <td id="L2566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2566"></td>
          <td id="LC2566" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">hitCounters</span>()-&gt;<span class="pl-c1">validateEveryN</span>(filename, lineNumber, occasion);</td>
        </tr>
        <tr>
          <td id="L2567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2567"></td>
          <td id="LC2567" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2568"></td>
          <td id="LC2568" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2569"></td>
          <td id="LC2569" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">validateAfterNCounter</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber, std::<span class="pl-c1">size_t</span> n) {</td>
        </tr>
        <tr>
          <td id="L2570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2570"></td>
          <td id="LC2570" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">hitCounters</span>()-&gt;<span class="pl-c1">validateAfterN</span>(filename, lineNumber, n);</td>
        </tr>
        <tr>
          <td id="L2571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2571"></td>
          <td id="LC2571" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2572"></td>
          <td id="LC2572" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2573"></td>
          <td id="LC2573" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">validateNTimesCounter</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* filename, base::type::LineNumber lineNumber, std::<span class="pl-c1">size_t</span> n) {</td>
        </tr>
        <tr>
          <td id="L2574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2574"></td>
          <td id="LC2574" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">hitCounters</span>()-&gt;<span class="pl-c1">validateNTimes</span>(filename, lineNumber, n);</td>
        </tr>
        <tr>
          <td id="L2575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2575"></td>
          <td id="LC2575" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2576"></td>
          <td id="LC2576" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2577"></td>
          <td id="LC2577" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::RegisteredHitCounters* <span class="pl-en">hitCounters</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2578"></td>
          <td id="LC2578" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_registeredHitCounters;</td>
        </tr>
        <tr>
          <td id="L2579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2579"></td>
          <td id="LC2579" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2580"></td>
          <td id="LC2580" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2581"></td>
          <td id="LC2581" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::RegisteredLoggers* <span class="pl-en">registeredLoggers</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2582"></td>
          <td id="LC2582" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_registeredLoggers;</td>
        </tr>
        <tr>
          <td id="L2583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2583"></td>
          <td id="LC2583" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2584"></td>
          <td id="LC2584" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2585"></td>
          <td id="LC2585" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::VRegistry* <span class="pl-en">vRegistry</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2586"></td>
          <td id="LC2586" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_vRegistry;</td>
        </tr>
        <tr>
          <td id="L2587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2587"></td>
          <td id="LC2587" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2588"></td>
          <td id="LC2588" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2589"></td>
          <td id="LC2589" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L2590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2590"></td>
          <td id="LC2590" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::AsyncLogQueue* <span class="pl-en">asyncLogQueue</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2591"></td>
          <td id="LC2591" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_asyncLogQueue;</td>
        </tr>
        <tr>
          <td id="L2592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2592"></td>
          <td id="LC2592" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2593"></td>
          <td id="LC2593" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L2594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2594"></td>
          <td id="LC2594" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2595"></td>
          <td id="LC2595" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::utils::CommandLineArgs* <span class="pl-en">commandLineArgs</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2596"></td>
          <td id="LC2596" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_commandLineArgs;</td>
        </tr>
        <tr>
          <td id="L2597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2597"></td>
          <td id="LC2597" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2598"></td>
          <td id="LC2598" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2599"></td>
          <td id="LC2599" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">addFlag</span>(LoggingFlag flag) {</td>
        </tr>
        <tr>
          <td id="L2600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2600"></td>
          <td id="LC2600" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">base::utils::addFlag</span>(flag, &amp;m_flags);</td>
        </tr>
        <tr>
          <td id="L2601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2601"></td>
          <td id="LC2601" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2602"></td>
          <td id="LC2602" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2603"></td>
          <td id="LC2603" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">removeFlag</span>(LoggingFlag flag) {</td>
        </tr>
        <tr>
          <td id="L2604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2604"></td>
          <td id="LC2604" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">base::utils::removeFlag</span>(flag, &amp;m_flags);</td>
        </tr>
        <tr>
          <td id="L2605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2605"></td>
          <td id="LC2605" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2606"></td>
          <td id="LC2606" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2607"></td>
          <td id="LC2607" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">hasFlag</span>(LoggingFlag flag) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2608"></td>
          <td id="LC2608" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">base::utils::hasFlag</span>(flag, m_flags);</td>
        </tr>
        <tr>
          <td id="L2609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2609"></td>
          <td id="LC2609" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2610"></td>
          <td id="LC2610" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2611"></td>
          <td id="LC2611" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::EnumType <span class="pl-en">flags</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2612"></td>
          <td id="LC2612" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_flags;</td>
        </tr>
        <tr>
          <td id="L2613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2613"></td>
          <td id="LC2613" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2614"></td>
          <td id="LC2614" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2615"></td>
          <td id="LC2615" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setFlags</span>(base::type::EnumType flags) {</td>
        </tr>
        <tr>
          <td id="L2616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2616"></td>
          <td id="LC2616" class="blob-code blob-code-inner js-file-line">    m_flags = flags;</td>
        </tr>
        <tr>
          <td id="L2617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2617"></td>
          <td id="LC2617" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2618"></td>
          <td id="LC2618" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2619"></td>
          <td id="LC2619" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setPreRollOutCallback</span>(<span class="pl-k">const</span> PreRollOutCallback&amp; callback) {</td>
        </tr>
        <tr>
          <td id="L2620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2620"></td>
          <td id="LC2620" class="blob-code blob-code-inner js-file-line">    m_preRollOutCallback = callback;</td>
        </tr>
        <tr>
          <td id="L2621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2621"></td>
          <td id="LC2621" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2622"></td>
          <td id="LC2622" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2623"></td>
          <td id="LC2623" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">unsetPreRollOutCallback</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2624"></td>
          <td id="LC2624" class="blob-code blob-code-inner js-file-line">    m_preRollOutCallback = base::defaultPreRollOutCallback;</td>
        </tr>
        <tr>
          <td id="L2625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2625"></td>
          <td id="LC2625" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2626"></td>
          <td id="LC2626" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2627"></td>
          <td id="LC2627" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> PreRollOutCallback&amp; <span class="pl-en">preRollOutCallback</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2628"></td>
          <td id="LC2628" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_preRollOutCallback;</td>
        </tr>
        <tr>
          <td id="L2629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2629"></td>
          <td id="LC2629" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2630"></td>
          <td id="LC2630" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2631"></td>
          <td id="LC2631" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">hasCustomFormatSpecifier</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* formatSpecifier);</td>
        </tr>
        <tr>
          <td id="L2632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2632"></td>
          <td id="LC2632" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">installCustomFormatSpecifier</span>(<span class="pl-k">const</span> CustomFormatSpecifier&amp; customFormatSpecifier);</td>
        </tr>
        <tr>
          <td id="L2633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2633"></td>
          <td id="LC2633" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">uninstallCustomFormatSpecifier</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* formatSpecifier);</td>
        </tr>
        <tr>
          <td id="L2634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2634"></td>
          <td id="LC2634" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2635"></td>
          <td id="LC2635" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> std::vector&lt;CustomFormatSpecifier&gt;* <span class="pl-en">customFormatSpecifiers</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2636"></td>
          <td id="LC2636" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_customFormatSpecifiers;</td>
        </tr>
        <tr>
          <td id="L2637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2637"></td>
          <td id="LC2637" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2638"></td>
          <td id="LC2638" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2639"></td>
          <td id="LC2639" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex&amp; <span class="pl-en">customFormatSpecifiersLock</span>() {</td>
        </tr>
        <tr>
          <td id="L2640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2640"></td>
          <td id="LC2640" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_customFormatSpecifiersLock;</td>
        </tr>
        <tr>
          <td id="L2641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2641"></td>
          <td id="LC2641" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2642"></td>
          <td id="LC2642" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2643"></td>
          <td id="LC2643" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setLoggingLevel</span>(Level level) {</td>
        </tr>
        <tr>
          <td id="L2644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2644"></td>
          <td id="LC2644" class="blob-code blob-code-inner js-file-line">    m_loggingLevel = level;</td>
        </tr>
        <tr>
          <td id="L2645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2645"></td>
          <td id="LC2645" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2646"></td>
          <td id="LC2646" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2647"></td>
          <td id="LC2647" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2648"></td>
          <td id="LC2648" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">installLogDispatchCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2649"></td>
          <td id="LC2649" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> base::utils::Utils::installCallback&lt;T, base::type::LogDispatchCallbackPtr&gt;(id, &amp;m_logDispatchCallbacks);</td>
        </tr>
        <tr>
          <td id="L2650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2650"></td>
          <td id="LC2650" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2651"></td>
          <td id="LC2651" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2652"></td>
          <td id="LC2652" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2653"></td>
          <td id="LC2653" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">uninstallLogDispatchCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2654"></td>
          <td id="LC2654" class="blob-code blob-code-inner js-file-line">    base::utils::Utils::uninstallCallback&lt;T, base::type::LogDispatchCallbackPtr&gt;(id, &amp;m_logDispatchCallbacks);</td>
        </tr>
        <tr>
          <td id="L2655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2655"></td>
          <td id="LC2655" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2656"></td>
          <td id="LC2656" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2657"></td>
          <td id="LC2657" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> T* <span class="pl-en">logDispatchCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2658"></td>
          <td id="LC2658" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> base::utils::Utils::callback&lt;T, base::type::LogDispatchCallbackPtr&gt;(id, &amp;m_logDispatchCallbacks);</td>
        </tr>
        <tr>
          <td id="L2659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2659"></td>
          <td id="LC2659" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2660"></td>
          <td id="LC2660" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2661"></td>
          <td id="LC2661" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</td>
        </tr>
        <tr>
          <td id="L2662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2662"></td>
          <td id="LC2662" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2663"></td>
          <td id="LC2663" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">installPerformanceTrackingCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2664"></td>
          <td id="LC2664" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> base::utils::Utils::installCallback&lt;T, base::type::PerformanceTrackingCallbackPtr&gt;(id,</td>
        </tr>
        <tr>
          <td id="L2665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2665"></td>
          <td id="LC2665" class="blob-code blob-code-inner js-file-line">           &amp;m_performanceTrackingCallbacks);</td>
        </tr>
        <tr>
          <td id="L2666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2666"></td>
          <td id="LC2666" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2667"></td>
          <td id="LC2667" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2668"></td>
          <td id="LC2668" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2669"></td>
          <td id="LC2669" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">uninstallPerformanceTrackingCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2670"></td>
          <td id="LC2670" class="blob-code blob-code-inner js-file-line">    base::utils::Utils::uninstallCallback&lt;T, base::type::PerformanceTrackingCallbackPtr&gt;(id,</td>
        </tr>
        <tr>
          <td id="L2671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2671"></td>
          <td id="LC2671" class="blob-code blob-code-inner js-file-line">        &amp;m_performanceTrackingCallbacks);</td>
        </tr>
        <tr>
          <td id="L2672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2672"></td>
          <td id="LC2672" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2673"></td>
          <td id="LC2673" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2674"></td>
          <td id="LC2674" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L2675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2675"></td>
          <td id="LC2675" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> T* <span class="pl-en">performanceTrackingCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L2676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2676"></td>
          <td id="LC2676" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> base::utils::Utils::callback&lt;T, base::type::PerformanceTrackingCallbackPtr&gt;(id, &amp;m_performanceTrackingCallbacks);</td>
        </tr>
        <tr>
          <td id="L2677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2677"></td>
          <td id="LC2677" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2678"></td>
          <td id="LC2678" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</span></td>
        </tr>
        <tr>
          <td id="L2679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2679"></td>
          <td id="LC2679" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2680"></td>
          <td id="LC2680" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets thread name for current thread. Requires std::thread</span></td>
        </tr>
        <tr>
          <td id="L2681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2681"></td>
          <td id="LC2681" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setThreadName</span>(<span class="pl-k">const</span> std::string&amp; name) {</td>
        </tr>
        <tr>
          <td id="L2682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2682"></td>
          <td id="LC2682" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (name.<span class="pl-c1">empty</span>()) <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L2683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2683"></td>
          <td id="LC2683" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(m_threadNamesLock);</td>
        </tr>
        <tr>
          <td id="L2684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2684"></td>
          <td id="LC2684" class="blob-code blob-code-inner js-file-line">    m_threadNames[<span class="pl-c1">base::threading::getCurrentThreadId</span>()] = name;</td>
        </tr>
        <tr>
          <td id="L2685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2685"></td>
          <td id="LC2685" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2686"></td>
          <td id="LC2686" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2687"></td>
          <td id="LC2687" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> std::string <span class="pl-en">getThreadName</span>(<span class="pl-k">const</span> std::string&amp; threadId) {</td>
        </tr>
        <tr>
          <td id="L2688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2688"></td>
          <td id="LC2688" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(m_threadNamesLock);</td>
        </tr>
        <tr>
          <td id="L2689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2689"></td>
          <td id="LC2689" class="blob-code blob-code-inner js-file-line">    std::unordered_map&lt;std::string, std::string&gt;::const_iterator it = m_threadNames.<span class="pl-c1">find</span>(threadId);</td>
        </tr>
        <tr>
          <td id="L2690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2690"></td>
          <td id="LC2690" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (it == m_threadNames.<span class="pl-c1">end</span>()) {</td>
        </tr>
        <tr>
          <td id="L2691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2691"></td>
          <td id="LC2691" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> threadId;</td>
        </tr>
        <tr>
          <td id="L2692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2692"></td>
          <td id="LC2692" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2693"></td>
          <td id="LC2693" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> it-&gt;<span class="pl-smi">second</span>;</td>
        </tr>
        <tr>
          <td id="L2694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2694"></td>
          <td id="LC2694" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2695"></td>
          <td id="LC2695" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2696"></td>
          <td id="LC2696" class="blob-code blob-code-inner js-file-line">  base::RegisteredHitCounters* m_registeredHitCounters;</td>
        </tr>
        <tr>
          <td id="L2697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2697"></td>
          <td id="LC2697" class="blob-code blob-code-inner js-file-line">  base::RegisteredLoggers* m_registeredLoggers;</td>
        </tr>
        <tr>
          <td id="L2698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2698"></td>
          <td id="LC2698" class="blob-code blob-code-inner js-file-line">  base::type::EnumType m_flags;</td>
        </tr>
        <tr>
          <td id="L2699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2699"></td>
          <td id="LC2699" class="blob-code blob-code-inner js-file-line">  base::VRegistry* m_vRegistry;</td>
        </tr>
        <tr>
          <td id="L2700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2700"></td>
          <td id="LC2700" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L2701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2701"></td>
          <td id="LC2701" class="blob-code blob-code-inner js-file-line">  base::AsyncLogQueue* m_asyncLogQueue;</td>
        </tr>
        <tr>
          <td id="L2702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2702"></td>
          <td id="LC2702" class="blob-code blob-code-inner js-file-line">  base::IWorker* m_asyncDispatchWorker;</td>
        </tr>
        <tr>
          <td id="L2703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2703"></td>
          <td id="LC2703" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L2704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2704"></td>
          <td id="LC2704" class="blob-code blob-code-inner js-file-line">  base::utils::CommandLineArgs m_commandLineArgs;</td>
        </tr>
        <tr>
          <td id="L2705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2705"></td>
          <td id="LC2705" class="blob-code blob-code-inner js-file-line">  PreRollOutCallback m_preRollOutCallback;</td>
        </tr>
        <tr>
          <td id="L2706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2706"></td>
          <td id="LC2706" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, base::type::LogDispatchCallbackPtr&gt; m_logDispatchCallbacks;</td>
        </tr>
        <tr>
          <td id="L2707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2707"></td>
          <td id="LC2707" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, base::type::PerformanceTrackingCallbackPtr&gt; m_performanceTrackingCallbacks;</td>
        </tr>
        <tr>
          <td id="L2708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2708"></td>
          <td id="LC2708" class="blob-code blob-code-inner js-file-line">  std::unordered_map&lt;std::string, std::string&gt; m_threadNames;</td>
        </tr>
        <tr>
          <td id="L2709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2709"></td>
          <td id="LC2709" class="blob-code blob-code-inner js-file-line">  std::vector&lt;CustomFormatSpecifier&gt; m_customFormatSpecifiers;</td>
        </tr>
        <tr>
          <td id="L2710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2710"></td>
          <td id="LC2710" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex m_customFormatSpecifiersLock;</td>
        </tr>
        <tr>
          <td id="L2711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2711"></td>
          <td id="LC2711" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex m_threadNamesLock;</td>
        </tr>
        <tr>
          <td id="L2712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2712"></td>
          <td id="LC2712" class="blob-code blob-code-inner js-file-line">  Level m_loggingLevel;</td>
        </tr>
        <tr>
          <td id="L2713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2713"></td>
          <td id="LC2713" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2714"></td>
          <td id="LC2714" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Helpers;</td>
        </tr>
        <tr>
          <td id="L2715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2715"></td>
          <td id="LC2715" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::DefaultLogDispatchCallback;</td>
        </tr>
        <tr>
          <td id="L2716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2716"></td>
          <td id="LC2716" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::LogBuilder;</td>
        </tr>
        <tr>
          <td id="L2717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2717"></td>
          <td id="LC2717" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::MessageBuilder;</td>
        </tr>
        <tr>
          <td id="L2718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2718"></td>
          <td id="LC2718" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::Writer;</td>
        </tr>
        <tr>
          <td id="L2719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2719"></td>
          <td id="LC2719" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::PerformanceTracker;</td>
        </tr>
        <tr>
          <td id="L2720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2720"></td>
          <td id="LC2720" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::LogDispatcher;</td>
        </tr>
        <tr>
          <td id="L2721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2721"></td>
          <td id="LC2721" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2722"></td>
          <td id="LC2722" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setApplicationArguments</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>** argv);</td>
        </tr>
        <tr>
          <td id="L2723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2723"></td>
          <td id="LC2723" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2724"></td>
          <td id="LC2724" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">setApplicationArguments</span>(<span class="pl-k">int</span> argc, <span class="pl-k">const</span> <span class="pl-k">char</span>** argv) {</td>
        </tr>
        <tr>
          <td id="L2725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2725"></td>
          <td id="LC2725" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setApplicationArguments</span>(argc, <span class="pl-k">const_cast</span>&lt;<span class="pl-k">char</span>**&gt;(argv));</td>
        </tr>
        <tr>
          <td id="L2726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2726"></td>
          <td id="LC2726" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2727"></td>
          <td id="LC2727" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2728"></td>
          <td id="LC2728" class="blob-code blob-code-inner js-file-line"><span class="pl-k">extern</span> ELPP_EXPORT base::type::StoragePointer elStorage;</td>
        </tr>
        <tr>
          <td id="L2729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2729"></td>
          <td id="LC2729" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP</span> el::base::elStorage</td>
        </tr>
        <tr>
          <td id="L2730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2730"></td>
          <td id="LC2730" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DefaultLogDispatchCallback</span> : <span class="pl-k">public</span> <span class="pl-en">LogDispatchCallback</span> {</td>
        </tr>
        <tr>
          <td id="L2731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2731"></td>
          <td id="LC2731" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L2732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2732"></td>
          <td id="LC2732" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">handle</span>(<span class="pl-k">const</span> LogDispatchData* data);</td>
        </tr>
        <tr>
          <td id="L2733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2733"></td>
          <td id="LC2733" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2734"></td>
          <td id="LC2734" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> LogDispatchData* m_data;</td>
        </tr>
        <tr>
          <td id="L2735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2735"></td>
          <td id="LC2735" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">dispatch</span>(base::type::<span class="pl-c1">string_t</span>&amp;&amp; logLine);</td>
        </tr>
        <tr>
          <td id="L2736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2736"></td>
          <td id="LC2736" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2737"></td>
          <td id="LC2737" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L2738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2738"></td>
          <td id="LC2738" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AsyncLogDispatchCallback</span> : <span class="pl-k">public</span> <span class="pl-en">LogDispatchCallback</span> {</td>
        </tr>
        <tr>
          <td id="L2739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2739"></td>
          <td id="LC2739" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L2740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2740"></td>
          <td id="LC2740" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">handle</span>(<span class="pl-k">const</span> LogDispatchData* data);</td>
        </tr>
        <tr>
          <td id="L2741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2741"></td>
          <td id="LC2741" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2742"></td>
          <td id="LC2742" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">AsyncDispatchWorker</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::IWorker, public base::threading::ThreadSafe {</td>
        </tr>
        <tr>
          <td id="L2743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2743"></td>
          <td id="LC2743" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2744"></td>
          <td id="LC2744" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">AsyncDispatchWorker</span>();</td>
        </tr>
        <tr>
          <td id="L2745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2745"></td>
          <td id="LC2745" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~AsyncDispatchWorker</span>();</td>
        </tr>
        <tr>
          <td id="L2746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2746"></td>
          <td id="LC2746" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2747"></td>
          <td id="LC2747" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">clean</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2748"></td>
          <td id="LC2748" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">emptyQueue</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2749"></td>
          <td id="LC2749" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">void</span> <span class="pl-en">start</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2750"></td>
          <td id="LC2750" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">handle</span>(AsyncLogItem* logItem);</td>
        </tr>
        <tr>
          <td id="L2751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2751"></td>
          <td id="LC2751" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">run</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2752"></td>
          <td id="LC2752" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2753"></td>
          <td id="LC2753" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setContinueRunning</span>(<span class="pl-k">bool</span> value) {</td>
        </tr>
        <tr>
          <td id="L2754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2754"></td>
          <td id="LC2754" class="blob-code blob-code-inner js-file-line">    base::threading::ScopedLock <span class="pl-smi">scopedLock</span>(m_continueRunningLock);</td>
        </tr>
        <tr>
          <td id="L2755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2755"></td>
          <td id="LC2755" class="blob-code blob-code-inner js-file-line">    m_continueRunning = value;</td>
        </tr>
        <tr>
          <td id="L2756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2756"></td>
          <td id="LC2756" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2757"></td>
          <td id="LC2757" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2758"></td>
          <td id="LC2758" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> <span class="pl-en">continueRunning</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L2759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2759"></td>
          <td id="LC2759" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_continueRunning;</td>
        </tr>
        <tr>
          <td id="L2760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2760"></td>
          <td id="LC2760" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2761"></td>
          <td id="LC2761" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2762"></td>
          <td id="LC2762" class="blob-code blob-code-inner js-file-line">  std::condition_variable cv;</td>
        </tr>
        <tr>
          <td id="L2763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2763"></td>
          <td id="LC2763" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_continueRunning;</td>
        </tr>
        <tr>
          <td id="L2764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2764"></td>
          <td id="LC2764" class="blob-code blob-code-inner js-file-line">  base::threading::Mutex m_continueRunningLock;</td>
        </tr>
        <tr>
          <td id="L2765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2765"></td>
          <td id="LC2765" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2766"></td>
          <td id="LC2766" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L2767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2767"></td>
          <td id="LC2767" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L2768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2768"></td>
          <td id="LC2768" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L2769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2769"></td>
          <td id="LC2769" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DefaultLogBuilder</span> : <span class="pl-k">public</span> <span class="pl-en">LogBuilder</span> {</td>
        </tr>
        <tr>
          <td id="L2770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2770"></td>
          <td id="LC2770" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2771"></td>
          <td id="LC2771" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">string_t</span> <span class="pl-en">build</span>(<span class="pl-k">const</span> LogMessage* logMessage, <span class="pl-k">bool</span> appendNewLine) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L2772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2772"></td>
          <td id="LC2772" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2773"></td>
          <td id="LC2773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Dispatches log messages</span></td>
        </tr>
        <tr>
          <td id="L2774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2774"></td>
          <td id="LC2774" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">LogDispatcher</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L2775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2775"></td>
          <td id="LC2775" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2776"></td>
          <td id="LC2776" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">LogDispatcher</span>(<span class="pl-k">bool</span> proceed, LogMessage* logMessage, base::DispatchAction dispatchAction) :</td>
        </tr>
        <tr>
          <td id="L2777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2777"></td>
          <td id="LC2777" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_proceed</span>(proceed),</td>
        </tr>
        <tr>
          <td id="L2778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2778"></td>
          <td id="LC2778" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_logMessage</span>(logMessage),</td>
        </tr>
        <tr>
          <td id="L2779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2779"></td>
          <td id="LC2779" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_dispatchAction</span>(std::move(dispatchAction)) {</td>
        </tr>
        <tr>
          <td id="L2780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2780"></td>
          <td id="LC2780" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2781"></td>
          <td id="LC2781" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2782"></td>
          <td id="LC2782" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">dispatch</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L2783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2783"></td>
          <td id="LC2783" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2784"></td>
          <td id="LC2784" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2785"></td>
          <td id="LC2785" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_proceed;</td>
        </tr>
        <tr>
          <td id="L2786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2786"></td>
          <td id="LC2786" class="blob-code blob-code-inner js-file-line">  LogMessage* m_logMessage;</td>
        </tr>
        <tr>
          <td id="L2787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2787"></td>
          <td id="LC2787" class="blob-code blob-code-inner js-file-line">  base::DispatchAction m_dispatchAction;</td>
        </tr>
        <tr>
          <td id="L2788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2788"></td>
          <td id="LC2788" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2789"></td>
          <td id="LC2789" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_STL_LOGGING)</td>
        </tr>
        <tr>
          <td id="L2790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2790"></td>
          <td id="LC2790" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Workarounds to write some STL logs</span></td>
        </tr>
        <tr>
          <td id="L2791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2791"></td>
          <td id="LC2791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L2792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2792"></td>
          <td id="LC2792" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail There is workaround needed to loop through some stl containers. In order to do that, we need iterable containers</span></td>
        </tr>
        <tr>
          <td id="L2793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2793"></td>
          <td id="LC2793" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ of same type and provide iterator interface and pass it on to writeIterator().</span></td>
        </tr>
        <tr>
          <td id="L2794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2794"></td>
          <td id="LC2794" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ Remember, this is passed by value in constructor so that we dont change original containers.</span></td>
        </tr>
        <tr>
          <td id="L2795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2795"></td>
          <td id="LC2795" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ This operation is as expensive as Big-O(std::min(class_.size(), base::consts::kMaxLogPerContainer))</span></td>
        </tr>
        <tr>
          <td id="L2796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2796"></td>
          <td id="LC2796" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">workarounds</span> {</td>
        </tr>
        <tr>
          <td id="L2797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2797"></td>
          <td id="LC2797" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Abstract IterableContainer template that provides interface for iterable classes of type T</span></td>
        </tr>
        <tr>
          <td id="L2798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2798"></td>
          <td id="LC2798" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> Container&gt;</td>
        </tr>
        <tr>
          <td id="L2799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2799"></td>
          <td id="LC2799" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">IterableContainer</span> {</td>
        </tr>
        <tr>
          <td id="L2800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2800"></td>
          <td id="LC2800" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2801"></td>
          <td id="LC2801" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> Container::iterator iterator;</td>
        </tr>
        <tr>
          <td id="L2802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2802"></td>
          <td id="LC2802" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-k">typename</span> Container::const_iterator const_iterator;</td>
        </tr>
        <tr>
          <td id="L2803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2803"></td>
          <td id="LC2803" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">IterableContainer</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L2804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2804"></td>
          <td id="LC2804" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~IterableContainer</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L2805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2805"></td>
          <td id="LC2805" class="blob-code blob-code-inner js-file-line">  iterator <span class="pl-en">begin</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2806"></td>
          <td id="LC2806" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">getContainer</span>().<span class="pl-c1">begin</span>();</td>
        </tr>
        <tr>
          <td id="L2807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2807"></td>
          <td id="LC2807" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2808"></td>
          <td id="LC2808" class="blob-code blob-code-inner js-file-line">  iterator <span class="pl-en">end</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2809"></td>
          <td id="LC2809" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">getContainer</span>().<span class="pl-c1">end</span>();</td>
        </tr>
        <tr>
          <td id="L2810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2810"></td>
          <td id="LC2810" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2811"></td>
          <td id="LC2811" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2812"></td>
          <td id="LC2812" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> Container&amp; <span class="pl-en">getContainer</span>(<span class="pl-k">void</span>) = 0;</td>
        </tr>
        <tr>
          <td id="L2813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2813"></td>
          <td id="LC2813" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2814"></td>
          <td id="LC2814" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Implements IterableContainer and provides iterable std::priority_queue class</span></td>
        </tr>
        <tr>
          <td id="L2815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2815"></td>
          <td id="LC2815" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template</span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> Container = std::vector&lt;T&gt;, <span class="pl-k">typename</span> Comparator = std::less&lt;<span class="pl-k">typename</span> Container::value_type&gt;&gt;</td>
        </tr>
        <tr>
          <td id="L2816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2816"></td>
          <td id="LC2816" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">IterablePriorityQueue</span> : <span class="pl-k">public</span> <span class="pl-en">IterableContainer</span>&lt;T, Container&gt;,</td>
        </tr>
        <tr>
          <td id="L2817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2817"></td>
          <td id="LC2817" class="blob-code blob-code-inner js-file-line">  public std::priority_queue&lt;T, Container, Comparator&gt; {</td>
        </tr>
        <tr>
          <td id="L2818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2818"></td>
          <td id="LC2818" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2819"></td>
          <td id="LC2819" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">IterablePriorityQueue</span>(std::priority_queue&lt;T, Container, Comparator&gt; queue_) {</td>
        </tr>
        <tr>
          <td id="L2820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2820"></td>
          <td id="LC2820" class="blob-code blob-code-inner js-file-line">    std::<span class="pl-c1">size_t</span> count_ = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2821"></td>
          <td id="LC2821" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (++count_ &lt; base::consts::<span class="pl-c1">kMaxLogPerContainer</span> &amp;&amp; !queue_.<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L2822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2822"></td>
          <td id="LC2822" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">this</span>-&gt;<span class="pl-c1">push</span>(queue_.<span class="pl-c1">top</span>());</td>
        </tr>
        <tr>
          <td id="L2823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2823"></td>
          <td id="LC2823" class="blob-code blob-code-inner js-file-line">      queue_.<span class="pl-c1">pop</span>();</td>
        </tr>
        <tr>
          <td id="L2824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2824"></td>
          <td id="LC2824" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2825"></td>
          <td id="LC2825" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2826"></td>
          <td id="LC2826" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2827"></td>
          <td id="LC2827" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Container&amp; <span class="pl-en">getContainer</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2828"></td>
          <td id="LC2828" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">this</span>-&gt;<span class="pl-smi">c</span>;</td>
        </tr>
        <tr>
          <td id="L2829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2829"></td>
          <td id="LC2829" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2830"></td>
          <td id="LC2830" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2831"></td>
          <td id="LC2831" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Implements IterableContainer and provides iterable std::queue class</span></td>
        </tr>
        <tr>
          <td id="L2832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2832"></td>
          <td id="LC2832" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template</span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> Container = std::deque&lt;T&gt;&gt;</td>
        </tr>
        <tr>
          <td id="L2833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2833"></td>
          <td id="LC2833" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">IterableQueue</span> : <span class="pl-k">public</span> <span class="pl-en">IterableContainer</span>&lt;T, Container&gt;, public std::queue&lt;T, Container&gt; {</td>
        </tr>
        <tr>
          <td id="L2834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2834"></td>
          <td id="LC2834" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2835"></td>
          <td id="LC2835" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">IterableQueue</span>(std::queue&lt;T, Container&gt; queue_) {</td>
        </tr>
        <tr>
          <td id="L2836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2836"></td>
          <td id="LC2836" class="blob-code blob-code-inner js-file-line">    std::<span class="pl-c1">size_t</span> count_ = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2837"></td>
          <td id="LC2837" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (++count_ &lt; base::consts::<span class="pl-c1">kMaxLogPerContainer</span> &amp;&amp; !queue_.<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L2838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2838"></td>
          <td id="LC2838" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">this</span>-&gt;<span class="pl-c1">push</span>(queue_.<span class="pl-c1">front</span>());</td>
        </tr>
        <tr>
          <td id="L2839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2839"></td>
          <td id="LC2839" class="blob-code blob-code-inner js-file-line">      queue_.<span class="pl-c1">pop</span>();</td>
        </tr>
        <tr>
          <td id="L2840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2840"></td>
          <td id="LC2840" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2841"></td>
          <td id="LC2841" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2842"></td>
          <td id="LC2842" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2843"></td>
          <td id="LC2843" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Container&amp; <span class="pl-en">getContainer</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2844"></td>
          <td id="LC2844" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">this</span>-&gt;<span class="pl-smi">c</span>;</td>
        </tr>
        <tr>
          <td id="L2845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2845"></td>
          <td id="LC2845" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2846"></td>
          <td id="LC2846" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2847"></td>
          <td id="LC2847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Implements IterableContainer and provides iterable std::stack class</span></td>
        </tr>
        <tr>
          <td id="L2848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2848"></td>
          <td id="LC2848" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template</span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span> Container = std::deque&lt;T&gt;&gt;</td>
        </tr>
        <tr>
          <td id="L2849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2849"></td>
          <td id="LC2849" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">IterableStack</span> : <span class="pl-k">public</span> <span class="pl-en">IterableContainer</span>&lt;T, Container&gt;, public std::stack&lt;T, Container&gt; {</td>
        </tr>
        <tr>
          <td id="L2850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2850"></td>
          <td id="LC2850" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2851"></td>
          <td id="LC2851" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">IterableStack</span>(std::stack&lt;T, Container&gt; stack_) {</td>
        </tr>
        <tr>
          <td id="L2852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2852"></td>
          <td id="LC2852" class="blob-code blob-code-inner js-file-line">    std::<span class="pl-c1">size_t</span> count_ = <span class="pl-c1">0</span>;</td>
        </tr>
        <tr>
          <td id="L2853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2853"></td>
          <td id="LC2853" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (++count_ &lt; base::consts::<span class="pl-c1">kMaxLogPerContainer</span> &amp;&amp; !stack_.<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L2854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2854"></td>
          <td id="LC2854" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">this</span>-&gt;<span class="pl-c1">push</span>(stack_.<span class="pl-c1">top</span>());</td>
        </tr>
        <tr>
          <td id="L2855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2855"></td>
          <td id="LC2855" class="blob-code blob-code-inner js-file-line">      stack_.<span class="pl-c1">pop</span>();</td>
        </tr>
        <tr>
          <td id="L2856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2856"></td>
          <td id="LC2856" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L2857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2857"></td>
          <td id="LC2857" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2858"></td>
          <td id="LC2858" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L2859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2859"></td>
          <td id="LC2859" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Container&amp; <span class="pl-en">getContainer</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L2860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2860"></td>
          <td id="LC2860" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">this</span>-&gt;<span class="pl-smi">c</span>;</td>
        </tr>
        <tr>
          <td id="L2861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2861"></td>
          <td id="LC2861" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2862"></td>
          <td id="LC2862" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L2863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2863"></td>
          <td id="LC2863" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace workarounds</span></td>
        </tr>
        <tr>
          <td id="L2864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2864"></td>
          <td id="LC2864" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_STL_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L2865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2865"></td>
          <td id="LC2865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Log message builder</span></td>
        </tr>
        <tr>
          <td id="L2866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2866"></td>
          <td id="LC2866" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">MessageBuilder</span> {</td>
        </tr>
        <tr>
          <td id="L2867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2867"></td>
          <td id="LC2867" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L2868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2868"></td>
          <td id="LC2868" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">MessageBuilder</span>(<span class="pl-k">void</span>) : m_logger(<span class="pl-c1">nullptr</span>), m_containerLogSeparator(ELPP_LITERAL(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)) {}</td>
        </tr>
        <tr>
          <td id="L2869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2869"></td>
          <td id="LC2869" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">initialize</span>(Logger* logger);</td>
        </tr>
        <tr>
          <td id="L2870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2870"></td>
          <td id="LC2870" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2871"></td>
          <td id="LC2871" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-v">LOG_TYPE</span>)\</td>
        </tr>
        <tr>
          <td id="L2872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2872"></td>
          <td id="LC2872" class="blob-code blob-code-inner js-file-line">MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(LOG_TYPE msg) {\</td>
        </tr>
        <tr>
          <td id="L2873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2873"></td>
          <td id="LC2873" class="blob-code blob-code-inner js-file-line">m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; msg;\</td>
        </tr>
        <tr>
          <td id="L2874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2874"></td>
          <td id="LC2874" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (ELPP-&gt;<span class="pl-c1">hasFlag</span>(LoggingFlag::AutoSpacing)) {\</td>
        </tr>
        <tr>
          <td id="L2875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2875"></td>
          <td id="LC2875" class="blob-code blob-code-inner js-file-line">m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>;\</td>
        </tr>
        <tr>
          <td id="L2876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2876"></td>
          <td id="LC2876" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L2877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2877"></td>
          <td id="LC2877" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> *<span class="pl-c1">this</span>;\</td>
        </tr>
        <tr>
          <td id="L2878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2878"></td>
          <td id="LC2878" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2879"></td>
          <td id="LC2879" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2880"></td>
          <td id="LC2880" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::string&amp; msg) {</td>
        </tr>
        <tr>
          <td id="L2881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2881"></td>
          <td id="LC2881" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">operator</span>&lt;&lt;(msg.<span class="pl-c1">c_str</span>());</td>
        </tr>
        <tr>
          <td id="L2882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2882"></td>
          <td id="LC2882" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2883"></td>
          <td id="LC2883" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">char</span>)</td>
        </tr>
        <tr>
          <td id="L2884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2884"></td>
          <td id="LC2884" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">bool</span>)</td>
        </tr>
        <tr>
          <td id="L2885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2885"></td>
          <td id="LC2885" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">signed</span> <span class="pl-k">short</span>)</td>
        </tr>
        <tr>
          <td id="L2886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2886"></td>
          <td id="LC2886" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">unsigned</span> <span class="pl-k">short</span>)</td>
        </tr>
        <tr>
          <td id="L2887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2887"></td>
          <td id="LC2887" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">signed</span> <span class="pl-k">int</span>)</td>
        </tr>
        <tr>
          <td id="L2888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2888"></td>
          <td id="LC2888" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">unsigned</span> <span class="pl-k">int</span>)</td>
        </tr>
        <tr>
          <td id="L2889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2889"></td>
          <td id="LC2889" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">signed</span> <span class="pl-k">long</span>)</td>
        </tr>
        <tr>
          <td id="L2890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2890"></td>
          <td id="LC2890" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">unsigned</span> <span class="pl-k">long</span>)</td>
        </tr>
        <tr>
          <td id="L2891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2891"></td>
          <td id="LC2891" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">float</span>)</td>
        </tr>
        <tr>
          <td id="L2892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2892"></td>
          <td id="LC2892" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">double</span>)</td>
        </tr>
        <tr>
          <td id="L2893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2893"></td>
          <td id="LC2893" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">char</span>*)</td>
        </tr>
        <tr>
          <td id="L2894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2894"></td>
          <td id="LC2894" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>*)</td>
        </tr>
        <tr>
          <td id="L2895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2895"></td>
          <td id="LC2895" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">const</span> <span class="pl-k">void</span>*)</td>
        </tr>
        <tr>
          <td id="L2896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2896"></td>
          <td id="LC2896" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">long</span> <span class="pl-k">double</span>)</td>
        </tr>
        <tr>
          <td id="L2897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2897"></td>
          <td id="LC2897" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::wstring&amp; msg) {</td>
        </tr>
        <tr>
          <td id="L2898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2898"></td>
          <td id="LC2898" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">operator</span>&lt;&lt;(msg.<span class="pl-c1">c_str</span>());</td>
        </tr>
        <tr>
          <td id="L2899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2899"></td>
          <td id="LC2899" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2900"></td>
          <td id="LC2900" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> <span class="pl-c1">wchar_t</span>* msg);</td>
        </tr>
        <tr>
          <td id="L2901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2901"></td>
          <td id="LC2901" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> ostream manipulators</span></td>
        </tr>
        <tr>
          <td id="L2902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2902"></td>
          <td id="LC2902" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(std::ostream&amp; (*OStreamMani)(std::ostream&amp;)) {</td>
        </tr>
        <tr>
          <td id="L2903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2903"></td>
          <td id="LC2903" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; OStreamMani;</td>
        </tr>
        <tr>
          <td id="L2904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2904"></td>
          <td id="LC2904" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L2905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2905"></td>
          <td id="LC2905" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2906"></td>
          <td id="LC2906" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG</span>(<span class="pl-v">temp</span>)                                                    \</td>
        </tr>
        <tr>
          <td id="L2907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2907"></td>
          <td id="LC2907" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;                                                                            \</td>
        </tr>
        <tr>
          <td id="L2908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2908"></td>
          <td id="LC2908" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> temp&lt;T&gt;&amp; template_inst) {                                \</td>
        </tr>
        <tr>
          <td id="L2909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2909"></td>
          <td id="LC2909" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(template_inst.<span class="pl-c1">begin</span>(), template_inst.<span class="pl-c1">end</span>(), template_inst.<span class="pl-c1">size</span>());      \</td>
        </tr>
        <tr>
          <td id="L2910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2910"></td>
          <td id="LC2910" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2911"></td>
          <td id="LC2911" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG</span>(<span class="pl-v">temp</span>)                                                    \</td>
        </tr>
        <tr>
          <td id="L2912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2912"></td>
          <td id="LC2912" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T1, <span class="pl-k">typename</span> T2&gt;                                                              \</td>
        </tr>
        <tr>
          <td id="L2913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2913"></td>
          <td id="LC2913" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> temp&lt;T1, T2&gt;&amp; template_inst) {                           \</td>
        </tr>
        <tr>
          <td id="L2914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2914"></td>
          <td id="LC2914" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(template_inst.<span class="pl-c1">begin</span>(), template_inst.<span class="pl-c1">end</span>(), template_inst.<span class="pl-c1">size</span>());      \</td>
        </tr>
        <tr>
          <td id="L2915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2915"></td>
          <td id="LC2915" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2916"></td>
          <td id="LC2916" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG</span>(<span class="pl-v">temp</span>)                                                  \</td>
        </tr>
        <tr>
          <td id="L2917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2917"></td>
          <td id="LC2917" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T1, <span class="pl-k">typename</span> T2, <span class="pl-k">typename</span> T3&gt;                                                 \</td>
        </tr>
        <tr>
          <td id="L2918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2918"></td>
          <td id="LC2918" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> temp&lt;T1, T2, T3&gt;&amp; template_inst) {                       \</td>
        </tr>
        <tr>
          <td id="L2919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2919"></td>
          <td id="LC2919" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(template_inst.<span class="pl-c1">begin</span>(), template_inst.<span class="pl-c1">end</span>(), template_inst.<span class="pl-c1">size</span>());      \</td>
        </tr>
        <tr>
          <td id="L2920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2920"></td>
          <td id="LC2920" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2921"></td>
          <td id="LC2921" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG</span>(<span class="pl-v">temp</span>)                                                   \</td>
        </tr>
        <tr>
          <td id="L2922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2922"></td>
          <td id="LC2922" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T1, <span class="pl-k">typename</span> T2, <span class="pl-k">typename</span> T3, <span class="pl-k">typename</span> T4&gt;                                    \</td>
        </tr>
        <tr>
          <td id="L2923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2923"></td>
          <td id="LC2923" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> temp&lt;T1, T2, T3, T4&gt;&amp; template_inst) {                   \</td>
        </tr>
        <tr>
          <td id="L2924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2924"></td>
          <td id="LC2924" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(template_inst.<span class="pl-c1">begin</span>(), template_inst.<span class="pl-c1">end</span>(), template_inst.<span class="pl-c1">size</span>());      \</td>
        </tr>
        <tr>
          <td id="L2925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2925"></td>
          <td id="LC2925" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2926"></td>
          <td id="LC2926" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_FIVE_ARG</span>(<span class="pl-v">temp</span>)                                                   \</td>
        </tr>
        <tr>
          <td id="L2927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2927"></td>
          <td id="LC2927" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T1, <span class="pl-k">typename</span> T2, <span class="pl-k">typename</span> T3, <span class="pl-k">typename</span> T4, <span class="pl-k">typename</span> T5&gt;                       \</td>
        </tr>
        <tr>
          <td id="L2928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2928"></td>
          <td id="LC2928" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> temp&lt;T1, T2, T3, T4, T5&gt;&amp; template_inst) {               \</td>
        </tr>
        <tr>
          <td id="L2929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2929"></td>
          <td id="LC2929" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(template_inst.<span class="pl-c1">begin</span>(), template_inst.<span class="pl-c1">end</span>(), template_inst.<span class="pl-c1">size</span>());      \</td>
        </tr>
        <tr>
          <td id="L2930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2930"></td>
          <td id="LC2930" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L2931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2931"></td>
          <td id="LC2931" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L2932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2932"></td>
          <td id="LC2932" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_STL_LOGGING)</td>
        </tr>
        <tr>
          <td id="L2933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2933"></td>
          <td id="LC2933" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG</span>(std::vector)</td>
        </tr>
        <tr>
          <td id="L2934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2934"></td>
          <td id="LC2934" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG(std::list)</td>
        </tr>
        <tr>
          <td id="L2935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2935"></td>
          <td id="LC2935" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG(std::deque)</td>
        </tr>
        <tr>
          <td id="L2936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2936"></td>
          <td id="LC2936" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG(std::set)</td>
        </tr>
        <tr>
          <td id="L2937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2937"></td>
          <td id="LC2937" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG(std::multiset)</td>
        </tr>
        <tr>
          <td id="L2938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2938"></td>
          <td id="LC2938" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG(std::map)</td>
        </tr>
        <tr>
          <td id="L2939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2939"></td>
          <td id="LC2939" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG(std::multimap)</td>
        </tr>
        <tr>
          <td id="L2940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2940"></td>
          <td id="LC2940" class="blob-code blob-code-inner js-file-line">  template &lt;class T, class Container&gt;</td>
        </tr>
        <tr>
          <td id="L2941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2941"></td>
          <td id="LC2941" class="blob-code blob-code-inner js-file-line">  inline MessageBuilder&amp; operator&lt;&lt;(<span class="pl-k">const</span> std::queue&lt;T, Container&gt;&amp; queue_) {</td>
        </tr>
        <tr>
          <td id="L2942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2942"></td>
          <td id="LC2942" class="blob-code blob-code-inner js-file-line">    base::workarounds::IterableQueue&lt;T, Container&gt; iterableQueue_ =</td>
        </tr>
        <tr>
          <td id="L2943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2943"></td>
          <td id="LC2943" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">static_cast</span>&lt;base::workarounds::IterableQueue&lt;T, Container&gt; &gt;(queue_);</td>
        </tr>
        <tr>
          <td id="L2944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2944"></td>
          <td id="LC2944" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(iterableQueue_.<span class="pl-c1">begin</span>(), iterableQueue_.<span class="pl-c1">end</span>(), iterableQueue_.<span class="pl-c1">size</span>());</td>
        </tr>
        <tr>
          <td id="L2945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2945"></td>
          <td id="LC2945" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2946"></td>
          <td id="LC2946" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">class</span> <span class="pl-en">T</span>, <span class="pl-k">class</span> <span class="pl-en">Container</span>&gt;</td>
        </tr>
        <tr>
          <td id="L2947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2947"></td>
          <td id="LC2947" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::stack&lt;T, Container&gt;&amp; stack_) {</td>
        </tr>
        <tr>
          <td id="L2948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2948"></td>
          <td id="LC2948" class="blob-code blob-code-inner js-file-line">    base::workarounds::IterableStack&lt;T, Container&gt; iterableStack_ =</td>
        </tr>
        <tr>
          <td id="L2949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2949"></td>
          <td id="LC2949" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">static_cast</span>&lt;base::workarounds::IterableStack&lt;T, Container&gt; &gt;(stack_);</td>
        </tr>
        <tr>
          <td id="L2950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2950"></td>
          <td id="LC2950" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(iterableStack_.<span class="pl-c1">begin</span>(), iterableStack_.<span class="pl-c1">end</span>(), iterableStack_.<span class="pl-c1">size</span>());</td>
        </tr>
        <tr>
          <td id="L2951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2951"></td>
          <td id="LC2951" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2952"></td>
          <td id="LC2952" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">class</span> <span class="pl-en">T</span>, <span class="pl-k">class</span> <span class="pl-en">Container</span>, <span class="pl-k">class</span> <span class="pl-en">Comparator</span>&gt;</td>
        </tr>
        <tr>
          <td id="L2953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2953"></td>
          <td id="LC2953" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::priority_queue&lt;T, Container, Comparator&gt;&amp; priorityQueue_) {</td>
        </tr>
        <tr>
          <td id="L2954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2954"></td>
          <td id="LC2954" class="blob-code blob-code-inner js-file-line">    base::workarounds::IterablePriorityQueue&lt;T, Container, Comparator&gt; iterablePriorityQueue_ =</td>
        </tr>
        <tr>
          <td id="L2955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2955"></td>
          <td id="LC2955" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">static_cast</span>&lt;base::workarounds::IterablePriorityQueue&lt;T, Container, Comparator&gt; &gt;(priorityQueue_);</td>
        </tr>
        <tr>
          <td id="L2956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2956"></td>
          <td id="LC2956" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(iterablePriorityQueue_.<span class="pl-c1">begin</span>(), iterablePriorityQueue_.<span class="pl-c1">end</span>(), iterablePriorityQueue_.<span class="pl-c1">size</span>());</td>
        </tr>
        <tr>
          <td id="L2957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2957"></td>
          <td id="LC2957" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2958"></td>
          <td id="LC2958" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">class</span> <span class="pl-en">First</span>, <span class="pl-k">class</span> <span class="pl-en">Second</span>&gt;</td>
        </tr>
        <tr>
          <td id="L2959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2959"></td>
          <td id="LC2959" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::pair&lt;First, Second&gt;&amp; pair_) {</td>
        </tr>
        <tr>
          <td id="L2960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2960"></td>
          <td id="LC2960" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2961"></td>
          <td id="LC2961" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;First&gt;(pair_.<span class="pl-smi">first</span>));</td>
        </tr>
        <tr>
          <td id="L2962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2962"></td>
          <td id="LC2962" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2963"></td>
          <td id="LC2963" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;Second&gt;(pair_.<span class="pl-smi">second</span>));</td>
        </tr>
        <tr>
          <td id="L2964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2964"></td>
          <td id="LC2964" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2965"></td>
          <td id="LC2965" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L2966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2966"></td>
          <td id="LC2966" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2967"></td>
          <td id="LC2967" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;std::<span class="pl-c1">size_t</span> <span class="pl-c1">Size</span>&gt;</td>
        </tr>
        <tr>
          <td id="L2968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2968"></td>
          <td id="LC2968" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::bitset&lt;<span class="pl-c1">Size</span>&gt;&amp; bitset_) {</td>
        </tr>
        <tr>
          <td id="L2969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2969"></td>
          <td id="LC2969" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2970"></td>
          <td id="LC2970" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (bitset_.<span class="pl-c1">to_string</span>());</td>
        </tr>
        <tr>
          <td id="L2971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2971"></td>
          <td id="LC2971" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L2972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2972"></td>
          <td id="LC2972" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L2973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2973"></td>
          <td id="LC2973" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2974"></td>
          <td id="LC2974" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_LOG_STD_ARRAY)</td>
        </tr>
        <tr>
          <td id="L2975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2975"></td>
          <td id="LC2975" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">class</span> <span class="pl-en">T</span>, std::<span class="pl-c1">size_t</span> <span class="pl-c1">Size</span>&gt;</td>
        </tr>
        <tr>
          <td id="L2976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2976"></td>
          <td id="LC2976" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> std::array&lt;T, <span class="pl-c1">Size</span>&gt;&amp; array) {</td>
        </tr>
        <tr>
          <td id="L2977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2977"></td>
          <td id="LC2977" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">writeIterator</span>(array.<span class="pl-c1">begin</span>(), array.<span class="pl-c1">end</span>(), array.<span class="pl-c1">size</span>());</td>
        </tr>
        <tr>
          <td id="L2978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2978"></td>
          <td id="LC2978" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2979"></td>
          <td id="LC2979" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_LOG_STD_ARRAY)</span></td>
        </tr>
        <tr>
          <td id="L2980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2980"></td>
          <td id="LC2980" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_LOG_UNORDERED_MAP)</td>
        </tr>
        <tr>
          <td id="L2981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2981"></td>
          <td id="LC2981" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_FIVE_ARG</span>(std::unordered_map)</td>
        </tr>
        <tr>
          <td id="L2982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2982"></td>
          <td id="LC2982" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_FIVE_ARG(std::unordered_multimap)</td>
        </tr>
        <tr>
          <td id="L2983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2983"></td>
          <td id="LC2983" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_LOG_UNORDERED_MAP)</span></td>
        </tr>
        <tr>
          <td id="L2984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2984"></td>
          <td id="LC2984" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_LOG_UNORDERED_SET)</td>
        </tr>
        <tr>
          <td id="L2985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2985"></td>
          <td id="LC2985" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG</span>(std::unordered_set)</td>
        </tr>
        <tr>
          <td id="L2986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2986"></td>
          <td id="LC2986" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG(std::unordered_multiset)</td>
        </tr>
        <tr>
          <td id="L2987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2987"></td>
          <td id="LC2987" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_LOG_UNORDERED_SET)</span></td>
        </tr>
        <tr>
          <td id="L2988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2988"></td>
          <td id="LC2988" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_STL_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L2989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2989"></td>
          <td id="LC2989" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_QT_LOGGING)</td>
        </tr>
        <tr>
          <td id="L2990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2990"></td>
          <td id="LC2990" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QString&amp; msg) {</td>
        </tr>
        <tr>
          <td id="L2991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2991"></td>
          <td id="LC2991" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L2992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2992"></td>
          <td id="LC2992" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; msg.<span class="pl-c1">toStdWString</span>();</td>
        </tr>
        <tr>
          <td id="L2993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2993"></td>
          <td id="LC2993" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L2994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2994"></td>
          <td id="LC2994" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; msg.<span class="pl-c1">toStdString</span>();</td>
        </tr>
        <tr>
          <td id="L2995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2995"></td>
          <td id="LC2995" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L2996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2996"></td>
          <td id="LC2996" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L2997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2997"></td>
          <td id="LC2997" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L2998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2998"></td>
          <td id="LC2998" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QByteArray&amp; msg) {</td>
        </tr>
        <tr>
          <td id="L2999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2999"></td>
          <td id="LC2999" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-c1">QString</span>(msg));</td>
        </tr>
        <tr>
          <td id="L3000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3000"></td>
          <td id="LC3000" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3001"></td>
          <td id="LC3001" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QStringRef&amp; msg) {</td>
        </tr>
        <tr>
          <td id="L3002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3002"></td>
          <td id="LC3002" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">operator</span>&lt;&lt;(msg.<span class="pl-c1">toString</span>());</td>
        </tr>
        <tr>
          <td id="L3003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3003"></td>
          <td id="LC3003" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3004"></td>
          <td id="LC3004" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(qint64 msg) {</td>
        </tr>
        <tr>
          <td id="L3005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3005"></td>
          <td id="LC3005" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L3006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3006"></td>
          <td id="LC3006" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">QString::number</span>(msg).<span class="pl-c1">toStdWString</span>();</td>
        </tr>
        <tr>
          <td id="L3007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3007"></td>
          <td id="LC3007" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3008"></td>
          <td id="LC3008" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">QString::number</span>(msg).<span class="pl-c1">toStdString</span>();</td>
        </tr>
        <tr>
          <td id="L3009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3009"></td>
          <td id="LC3009" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L3010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3010"></td>
          <td id="LC3010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3011"></td>
          <td id="LC3011" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3012"></td>
          <td id="LC3012" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(quint64 msg) {</td>
        </tr>
        <tr>
          <td id="L3013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3013"></td>
          <td id="LC3013" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L3014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3014"></td>
          <td id="LC3014" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">QString::number</span>(msg).<span class="pl-c1">toStdWString</span>();</td>
        </tr>
        <tr>
          <td id="L3015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3015"></td>
          <td id="LC3015" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3016"></td>
          <td id="LC3016" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">QString::number</span>(msg).<span class="pl-c1">toStdString</span>();</td>
        </tr>
        <tr>
          <td id="L3017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3017"></td>
          <td id="LC3017" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L3018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3018"></td>
          <td id="LC3018" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3019"></td>
          <td id="LC3019" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3020"></td>
          <td id="LC3020" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(QChar msg) {</td>
        </tr>
        <tr>
          <td id="L3021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3021"></td>
          <td id="LC3021" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; msg.<span class="pl-c1">toLatin1</span>();</td>
        </tr>
        <tr>
          <td id="L3022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3022"></td>
          <td id="LC3022" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3023"></td>
          <td id="LC3023" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3024"></td>
          <td id="LC3024" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QLatin1String&amp; msg) {</td>
        </tr>
        <tr>
          <td id="L3025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3025"></td>
          <td id="LC3025" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; msg.<span class="pl-c1">latin1</span>();</td>
        </tr>
        <tr>
          <td id="L3026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3026"></td>
          <td id="LC3026" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3027"></td>
          <td id="LC3027" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3028"></td>
          <td id="LC3028" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG</span>(QList)</td>
        </tr>
        <tr>
          <td id="L3029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3029"></td>
          <td id="LC3029" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG(QVector)</td>
        </tr>
        <tr>
          <td id="L3030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3030"></td>
          <td id="LC3030" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG(QQueue)</td>
        </tr>
        <tr>
          <td id="L3031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3031"></td>
          <td id="LC3031" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG(QSet)</td>
        </tr>
        <tr>
          <td id="L3032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3032"></td>
          <td id="LC3032" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG(QLinkedList)</td>
        </tr>
        <tr>
          <td id="L3033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3033"></td>
          <td id="LC3033" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG(QStack)</td>
        </tr>
        <tr>
          <td id="L3034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3034"></td>
          <td id="LC3034" class="blob-code blob-code-inner js-file-line">  template &lt;typename First, typename Second&gt;</td>
        </tr>
        <tr>
          <td id="L3035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3035"></td>
          <td id="LC3035" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; operator&lt;&lt;(<span class="pl-k">const</span> QPair&lt;First, Second&gt;&amp; pair_) {</td>
        </tr>
        <tr>
          <td id="L3036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3036"></td>
          <td id="LC3036" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3037"></td>
          <td id="LC3037" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;First&gt;(pair_.<span class="pl-smi">first</span>));</td>
        </tr>
        <tr>
          <td id="L3038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3038"></td>
          <td id="LC3038" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3039"></td>
          <td id="LC3039" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;Second&gt;(pair_.<span class="pl-smi">second</span>));</td>
        </tr>
        <tr>
          <td id="L3040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3040"></td>
          <td id="LC3040" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3041"></td>
          <td id="LC3041" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3042"></td>
          <td id="LC3042" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3043"></td>
          <td id="LC3043" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> K, <span class="pl-k">typename</span> V&gt;</td>
        </tr>
        <tr>
          <td id="L3044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3044"></td>
          <td id="LC3044" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QMap&lt;K, V&gt;&amp; map_) {</td>
        </tr>
        <tr>
          <td id="L3045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3045"></td>
          <td id="LC3045" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3046"></td>
          <td id="LC3046" class="blob-code blob-code-inner js-file-line">    QList&lt;K&gt; keys = map_.<span class="pl-c1">keys</span>();</td>
        </tr>
        <tr>
          <td id="L3047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3047"></td>
          <td id="LC3047" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> QList&lt;K&gt;::const_iterator begin = keys.<span class="pl-c1">begin</span>();</td>
        </tr>
        <tr>
          <td id="L3048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3048"></td>
          <td id="LC3048" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> QList&lt;K&gt;::const_iterator end = keys.<span class="pl-c1">end</span>();</td>
        </tr>
        <tr>
          <td id="L3049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3049"></td>
          <td id="LC3049" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> max_ = <span class="pl-k">static_cast</span>&lt;<span class="pl-k">int</span>&gt;(base::consts::<span class="pl-c1">kMaxLogPerContainer</span>);  <span class="pl-c"><span class="pl-c">//</span> to prevent warning</span></td>
        </tr>
        <tr>
          <td id="L3050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3050"></td>
          <td id="LC3050" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">int</span> index_ = <span class="pl-c1">0</span>; begin != end &amp;&amp; index_ &lt; max_; ++index_, ++begin) {</td>
        </tr>
        <tr>
          <td id="L3051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3051"></td>
          <td id="LC3051" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3052"></td>
          <td id="LC3052" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;K&gt;(*begin));</td>
        </tr>
        <tr>
          <td id="L3053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3053"></td>
          <td id="LC3053" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3054"></td>
          <td id="LC3054" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;V&gt;(map_.<span class="pl-c1">value</span>(*begin)));</td>
        </tr>
        <tr>
          <td id="L3055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3055"></td>
          <td id="LC3055" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3056"></td>
          <td id="LC3056" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; ((index_ &lt; keys.<span class="pl-c1">size</span>() -<span class="pl-c1">1</span>) ? m_containerLogSeparator : <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3057"></td>
          <td id="LC3057" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3058"></td>
          <td id="LC3058" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (begin != end) {</td>
        </tr>
        <tr>
          <td id="L3059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3059"></td>
          <td id="LC3059" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>...<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3060"></td>
          <td id="LC3060" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3061"></td>
          <td id="LC3061" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3062"></td>
          <td id="LC3062" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3063"></td>
          <td id="LC3063" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3064"></td>
          <td id="LC3064" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> K, <span class="pl-k">typename</span> V&gt;</td>
        </tr>
        <tr>
          <td id="L3065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3065"></td>
          <td id="LC3065" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QMultiMap&lt;K, V&gt;&amp; map_) {</td>
        </tr>
        <tr>
          <td id="L3066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3066"></td>
          <td id="LC3066" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;QMap&lt;K, V&gt;&gt;(map_));</td>
        </tr>
        <tr>
          <td id="L3067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3067"></td>
          <td id="LC3067" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3068"></td>
          <td id="LC3068" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3069"></td>
          <td id="LC3069" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> K, <span class="pl-k">typename</span> V&gt;</td>
        </tr>
        <tr>
          <td id="L3070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3070"></td>
          <td id="LC3070" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QHash&lt;K, V&gt;&amp; hash_) {</td>
        </tr>
        <tr>
          <td id="L3071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3071"></td>
          <td id="LC3071" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3072"></td>
          <td id="LC3072" class="blob-code blob-code-inner js-file-line">    QList&lt;K&gt; keys = hash_.<span class="pl-c1">keys</span>();</td>
        </tr>
        <tr>
          <td id="L3073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3073"></td>
          <td id="LC3073" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> QList&lt;K&gt;::const_iterator begin = keys.<span class="pl-c1">begin</span>();</td>
        </tr>
        <tr>
          <td id="L3074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3074"></td>
          <td id="LC3074" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">typename</span> QList&lt;K&gt;::const_iterator end = keys.<span class="pl-c1">end</span>();</td>
        </tr>
        <tr>
          <td id="L3075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3075"></td>
          <td id="LC3075" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">int</span> max_ = <span class="pl-k">static_cast</span>&lt;<span class="pl-k">int</span>&gt;(base::consts::<span class="pl-c1">kMaxLogPerContainer</span>);  <span class="pl-c"><span class="pl-c">//</span> prevent type warning</span></td>
        </tr>
        <tr>
          <td id="L3076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3076"></td>
          <td id="LC3076" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">int</span> index_ = <span class="pl-c1">0</span>; begin != end &amp;&amp; index_ &lt; max_; ++index_, ++begin) {</td>
        </tr>
        <tr>
          <td id="L3077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3077"></td>
          <td id="LC3077" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3078"></td>
          <td id="LC3078" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;K&gt;(*begin));</td>
        </tr>
        <tr>
          <td id="L3079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3079"></td>
          <td id="LC3079" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3080"></td>
          <td id="LC3080" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;V&gt;(hash_.<span class="pl-c1">value</span>(*begin)));</td>
        </tr>
        <tr>
          <td id="L3081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3081"></td>
          <td id="LC3081" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3082"></td>
          <td id="LC3082" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; ((index_ &lt; keys.<span class="pl-c1">size</span>() -<span class="pl-c1">1</span>) ? m_containerLogSeparator : <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3083"></td>
          <td id="LC3083" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3084"></td>
          <td id="LC3084" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (begin != end) {</td>
        </tr>
        <tr>
          <td id="L3085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3085"></td>
          <td id="LC3085" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>...<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3086"></td>
          <td id="LC3086" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3087"></td>
          <td id="LC3087" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3088"></td>
          <td id="LC3088" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3089"></td>
          <td id="LC3089" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3090"></td>
          <td id="LC3090" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> K, <span class="pl-k">typename</span> V&gt;</td>
        </tr>
        <tr>
          <td id="L3091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3091"></td>
          <td id="LC3091" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> MessageBuilder&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> QMultiHash&lt;K, V&gt;&amp; multiHash_) {</td>
        </tr>
        <tr>
          <td id="L3092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3092"></td>
          <td id="LC3092" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">operator</span> &lt;&lt; (<span class="pl-k">static_cast</span>&lt;QHash&lt;K, V&gt;&gt;(multiHash_));</td>
        </tr>
        <tr>
          <td id="L3093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3093"></td>
          <td id="LC3093" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3094"></td>
          <td id="LC3094" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3095"></td>
          <td id="LC3095" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_QT_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L3096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3096"></td>
          <td id="LC3096" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_BOOST_LOGGING)</td>
        </tr>
        <tr>
          <td id="L3097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3097"></td>
          <td id="LC3097" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG</span>(boost::container::vector)</td>
        </tr>
        <tr>
          <td id="L3098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3098"></td>
          <td id="LC3098" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG(boost::container::stable_vector)</td>
        </tr>
        <tr>
          <td id="L3099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3099"></td>
          <td id="LC3099" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG(boost::container::list)</td>
        </tr>
        <tr>
          <td id="L3100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3100"></td>
          <td id="LC3100" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG(boost::container::deque)</td>
        </tr>
        <tr>
          <td id="L3101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3101"></td>
          <td id="LC3101" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG(boost::container::map)</td>
        </tr>
        <tr>
          <td id="L3102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3102"></td>
          <td id="LC3102" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG(boost::container::flat_map)</td>
        </tr>
        <tr>
          <td id="L3103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3103"></td>
          <td id="LC3103" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG(boost::container::set)</td>
        </tr>
        <tr>
          <td id="L3104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3104"></td>
          <td id="LC3104" class="blob-code blob-code-inner js-file-line">  ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG(boost::container::flat_set)</td>
        </tr>
        <tr>
          <td id="L3105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3105"></td>
          <td id="LC3105" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_BOOST_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L3106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3106"></td>
          <td id="LC3106" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3107"></td>
          <td id="LC3107" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Macro used internally that can be used externally to make containers easylogging++ friendly</span></td>
        </tr>
        <tr>
          <td id="L3108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3108"></td>
          <td id="LC3108" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L3109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3109"></td>
          <td id="LC3109" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @detail This macro expands to write an ostream&amp; operator&lt;&lt; for container. This container is expected to</span></td>
        </tr>
        <tr>
          <td id="L3110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3110"></td>
          <td id="LC3110" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/         have begin() and end() methods that return respective iterators</span></td>
        </tr>
        <tr>
          <td id="L3111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3111"></td>
          <td id="LC3111" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param ContainerType Type of container e.g, MyList from WX_DECLARE_LIST(int, MyList); in wxwidgets</span></td>
        </tr>
        <tr>
          <td id="L3112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3112"></td>
          <td id="LC3112" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param SizeMethod Method used to get size of container.</span></td>
        </tr>
        <tr>
          <td id="L3113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3113"></td>
          <td id="LC3113" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param ElementInstance Instance of element to be fed out. Instance name is &quot;elem&quot;. See WXELPP_ENABLED macro</span></td>
        </tr>
        <tr>
          <td id="L3114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3114"></td>
          <td id="LC3114" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        for an example usage</span></td>
        </tr>
        <tr>
          <td id="L3115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3115"></td>
          <td id="LC3115" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">MAKE_CONTAINERELPP_FRIENDLY</span>(<span class="pl-v">ContainerType, SizeMethod, ElementInstance</span>) \</td>
        </tr>
        <tr>
          <td id="L3116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3116"></td>
          <td id="LC3116" class="blob-code blob-code-inner js-file-line">el::base::type::<span class="pl-c1">ostream_t</span>&amp; <span class="pl-k">operator</span>&lt;&lt;(el::base::type::<span class="pl-c1">ostream_t</span>&amp; ss, <span class="pl-k">const</span> ContainerType&amp; container) {\</td>
        </tr>
        <tr>
          <td id="L3117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3117"></td>
          <td id="LC3117" class="blob-code blob-code-inner js-file-line"><span class="pl-k">const</span> el::base::type::<span class="pl-c1">char_t</span>* sep = ELPP-&gt;<span class="pl-c1">hasFlag</span>(el::LoggingFlag::NewLineForContainer) ? \</td>
        </tr>
        <tr>
          <td id="L3118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3118"></td>
          <td id="LC3118" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>    <span class="pl-pds">&quot;</span></span>) : <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>);\</td>
        </tr>
        <tr>
          <td id="L3119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3119"></td>
          <td id="LC3119" class="blob-code blob-code-inner js-file-line">ContainerType::const_iterator elem = container.<span class="pl-c1">begin</span>();\</td>
        </tr>
        <tr>
          <td id="L3120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3120"></td>
          <td id="LC3120" class="blob-code blob-code-inner js-file-line">ContainerType::const_iterator endElem = container.<span class="pl-c1">end</span>();\</td>
        </tr>
        <tr>
          <td id="L3121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3121"></td>
          <td id="LC3121" class="blob-code blob-code-inner js-file-line">std::<span class="pl-c1">size_t</span> size_ = container.<span class="pl-smi">SizeMethod</span>; \</td>
        </tr>
        <tr>
          <td id="L3122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3122"></td>
          <td id="LC3122" class="blob-code blob-code-inner js-file-line">ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>);\</td>
        </tr>
        <tr>
          <td id="L3123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3123"></td>
          <td id="LC3123" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span> (std::<span class="pl-c1">size_t</span> i = <span class="pl-c1">0</span>; elem != endElem &amp;&amp; i &lt; el::base::consts::<span class="pl-c1">kMaxLogPerContainer</span>; ++i, ++elem) { \</td>
        </tr>
        <tr>
          <td id="L3124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3124"></td>
          <td id="LC3124" class="blob-code blob-code-inner js-file-line">ss &lt;&lt; ElementInstance;\</td>
        </tr>
        <tr>
          <td id="L3125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3125"></td>
          <td id="LC3125" class="blob-code blob-code-inner js-file-line">ss &lt;&lt; ((i &lt; size_ - <span class="pl-c1">1</span>) ? sep : <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));\</td>
        </tr>
        <tr>
          <td id="L3126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3126"></td>
          <td id="LC3126" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L3127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3127"></td>
          <td id="LC3127" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (elem != endElem) {\</td>
        </tr>
        <tr>
          <td id="L3128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3128"></td>
          <td id="LC3128" class="blob-code blob-code-inner js-file-line">ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>...<span class="pl-pds">&quot;</span></span>);\</td>
        </tr>
        <tr>
          <td id="L3129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3129"></td>
          <td id="LC3129" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L3130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3130"></td>
          <td id="LC3130" class="blob-code blob-code-inner js-file-line">ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);\</td>
        </tr>
        <tr>
          <td id="L3131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3131"></td>
          <td id="LC3131" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> ss;\</td>
        </tr>
        <tr>
          <td id="L3132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3132"></td>
          <td id="LC3132" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3133"></td>
          <td id="LC3133" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_WXWIDGETS_LOGGING)</td>
        </tr>
        <tr>
          <td id="L3134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3134"></td>
          <td id="LC3134" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG</span>(wxVector)</td>
        </tr>
        <tr>
          <td id="L3135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3135"></td>
          <td id="LC3135" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WX_PTR_ENABLED</span>(<span class="pl-v">ContainerType</span>) MAKE_CONTAINERELPP_FRIENDLY(ContainerType, size(), *(*elem))</td>
        </tr>
        <tr>
          <td id="L3136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3136"></td>
          <td id="LC3136" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WX_ENABLED</span>(<span class="pl-v">ContainerType</span>) MAKE_CONTAINERELPP_FRIENDLY(ContainerType, size(), (*elem))</td>
        </tr>
        <tr>
          <td id="L3137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3137"></td>
          <td id="LC3137" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WX_HASH_MAP_ENABLED</span>(<span class="pl-v">ContainerType</span>) MAKE_CONTAINERELPP_FRIENDLY(ContainerType, size(), \</td>
        </tr>
        <tr>
          <td id="L3138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3138"></td>
          <td id="LC3138" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>) &lt;&lt; elem-&gt;first &lt;&lt; ELPP_LITERAL(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>) &lt;&lt; elem-&gt;second &lt;&lt; ELPP_LITERAL(<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)</td>
        </tr>
        <tr>
          <td id="L3139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3139"></td>
          <td id="LC3139" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3140"></td>
          <td id="LC3140" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WX_PTR_ENABLED</span>(<span class="pl-v">ContainerType</span>)</td>
        </tr>
        <tr>
          <td id="L3141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3141"></td>
          <td id="LC3141" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WX_ENABLED</span>(<span class="pl-v">ContainerType</span>)</td>
        </tr>
        <tr>
          <td id="L3142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3142"></td>
          <td id="LC3142" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_WX_HASH_MAP_ENABLED</span>(<span class="pl-v">ContainerType</span>)</td>
        </tr>
        <tr>
          <td id="L3143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3143"></td>
          <td id="LC3143" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_WXWIDGETS_LOGGING)</span></td>
        </tr>
        <tr>
          <td id="L3144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3144"></td>
          <td id="LC3144" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> Other classes</span></td>
        </tr>
        <tr>
          <td id="L3145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3145"></td>
          <td id="LC3145" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">class</span> <span class="pl-en">Class</span>&gt;</td>
        </tr>
        <tr>
          <td id="L3146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3146"></td>
          <td id="LC3146" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ELPP_SIMPLE_LOG</span>(<span class="pl-k">const</span> Class&amp;)</td>
        </tr>
        <tr>
          <td id="L3147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3147"></td>
          <td id="LC3147" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_SIMPLE_LOG</td>
        </tr>
        <tr>
          <td id="L3148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3148"></td>
          <td id="LC3148" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_ITERATOR_CONTAINER_LOG_ONE_ARG</td>
        </tr>
        <tr>
          <td id="L3149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3149"></td>
          <td id="LC3149" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_ITERATOR_CONTAINER_LOG_TWO_ARG</td>
        </tr>
        <tr>
          <td id="L3150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3150"></td>
          <td id="LC3150" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_ITERATOR_CONTAINER_LOG_THREE_ARG</td>
        </tr>
        <tr>
          <td id="L3151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3151"></td>
          <td id="LC3151" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_ITERATOR_CONTAINER_LOG_FOUR_ARG</td>
        </tr>
        <tr>
          <td id="L3152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3152"></td>
          <td id="LC3152" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_ITERATOR_CONTAINER_LOG_FIVE_ARG</td>
        </tr>
        <tr>
          <td id="L3153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3153"></td>
          <td id="LC3153" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3154"></td>
          <td id="LC3154" class="blob-code blob-code-inner js-file-line">  Logger* m_logger;</td>
        </tr>
        <tr>
          <td id="L3155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3155"></td>
          <td id="LC3155" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::type::<span class="pl-c1">char_t</span>* m_containerLogSeparator;</td>
        </tr>
        <tr>
          <td id="L3156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3156"></td>
          <td id="LC3156" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3157"></td>
          <td id="LC3157" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template</span>&lt;<span class="pl-k">class</span> <span class="pl-en">Iterator</span>&gt;</td>
        </tr>
        <tr>
          <td id="L3158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3158"></td>
          <td id="LC3158" class="blob-code blob-code-inner js-file-line">  MessageBuilder&amp; <span class="pl-en">writeIterator</span>(Iterator begin_, Iterator end_, std::<span class="pl-c1">size_t</span> size_) {</td>
        </tr>
        <tr>
          <td id="L3159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3159"></td>
          <td id="LC3159" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3160"></td>
          <td id="LC3160" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (std::<span class="pl-c1">size_t</span> i = <span class="pl-c1">0</span>; begin_ != end_ &amp;&amp; i &lt; base::consts::<span class="pl-c1">kMaxLogPerContainer</span>; ++i, ++begin_) {</td>
        </tr>
        <tr>
          <td id="L3161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3161"></td>
          <td id="LC3161" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">operator</span> &lt;&lt; (*begin_);</td>
        </tr>
        <tr>
          <td id="L3162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3162"></td>
          <td id="LC3162" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; ((i &lt; size_ - <span class="pl-c1">1</span>) ? m_containerLogSeparator : <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3163"></td>
          <td id="LC3163" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3164"></td>
          <td id="LC3164" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (begin_ != end_) {</td>
        </tr>
        <tr>
          <td id="L3165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3165"></td>
          <td id="LC3165" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>...<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3166"></td>
          <td id="LC3166" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3167"></td>
          <td id="LC3167" class="blob-code blob-code-inner js-file-line">    m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3168"></td>
          <td id="LC3168" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ELPP-&gt;<span class="pl-c1">hasFlag</span>(LoggingFlag::AutoSpacing)) {</td>
        </tr>
        <tr>
          <td id="L3169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3169"></td>
          <td id="LC3169" class="blob-code blob-code-inner js-file-line">      m_logger-&gt;<span class="pl-c1">stream</span>() &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>;</td>
        </tr>
        <tr>
          <td id="L3170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3170"></td>
          <td id="LC3170" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3171"></td>
          <td id="LC3171" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3172"></td>
          <td id="LC3172" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3173"></td>
          <td id="LC3173" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3174"></td>
          <td id="LC3174" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Writes nothing - Used when certain log is disabled</span></td>
        </tr>
        <tr>
          <td id="L3175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3175"></td>
          <td id="LC3175" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">NullWriter</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L3176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3176"></td>
          <td id="LC3176" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3177"></td>
          <td id="LC3177" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">NullWriter</span>(<span class="pl-k">void</span>) {}</td>
        </tr>
        <tr>
          <td id="L3178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3178"></td>
          <td id="LC3178" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3179"></td>
          <td id="LC3179" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> Null manipulator</span></td>
        </tr>
        <tr>
          <td id="L3180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3180"></td>
          <td id="LC3180" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> NullWriter&amp; <span class="pl-k">operator</span>&lt;&lt;(std::ostream&amp; (*)(std::ostream&amp;)) {</td>
        </tr>
        <tr>
          <td id="L3181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3181"></td>
          <td id="LC3181" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3182"></td>
          <td id="LC3182" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3183"></td>
          <td id="LC3183" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3184"></td>
          <td id="LC3184" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3185"></td>
          <td id="LC3185" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> NullWriter&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> T&amp;) {</td>
        </tr>
        <tr>
          <td id="L3186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3186"></td>
          <td id="LC3186" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3187"></td>
          <td id="LC3187" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3188"></td>
          <td id="LC3188" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3189"></td>
          <td id="LC3189" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">operator</span> <span class="pl-en">bool</span>() {</td>
        </tr>
        <tr>
          <td id="L3190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3190"></td>
          <td id="LC3190" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L3191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3191"></td>
          <td id="LC3191" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3192"></td>
          <td id="LC3192" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3193"></td>
          <td id="LC3193" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Main entry point of each logging</span></td>
        </tr>
        <tr>
          <td id="L3194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3194"></td>
          <td id="LC3194" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Writer</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L3195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3195"></td>
          <td id="LC3195" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3196"></td>
          <td id="LC3196" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Writer</span>(Level level, <span class="pl-k">const</span> <span class="pl-k">char</span>* file, base::type::LineNumber line,</td>
        </tr>
        <tr>
          <td id="L3197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3197"></td>
          <td id="LC3197" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">const</span> <span class="pl-k">char</span>* func, base::DispatchAction dispatchAction = base::DispatchAction::NormalLog,</td>
        </tr>
        <tr>
          <td id="L3198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3198"></td>
          <td id="LC3198" class="blob-code blob-code-inner js-file-line">         base::type::VerboseLevel verboseLevel = <span class="pl-c1">0</span>) :</td>
        </tr>
        <tr>
          <td id="L3199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3199"></td>
          <td id="LC3199" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_msg</span>(<span class="pl-c1">nullptr</span>), m_level(level), m_file(file), m_line(line), m_func(func), m_verboseLevel(verboseLevel),</td>
        </tr>
        <tr>
          <td id="L3200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3200"></td>
          <td id="LC3200" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_logger</span>(<span class="pl-c1">nullptr</span>), m_proceed(<span class="pl-c1">false</span>), m_dispatchAction(dispatchAction) {</td>
        </tr>
        <tr>
          <td id="L3201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3201"></td>
          <td id="LC3201" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3202"></td>
          <td id="LC3202" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3203"></td>
          <td id="LC3203" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">Writer</span>(LogMessage* msg, base::DispatchAction dispatchAction = base::DispatchAction::NormalLog) :</td>
        </tr>
        <tr>
          <td id="L3204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3204"></td>
          <td id="LC3204" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_msg</span>(msg), m_level(msg != <span class="pl-c1">nullptr</span> ? msg-&gt;<span class="pl-en">level</span>() : Level::Unknown),</td>
        </tr>
        <tr>
          <td id="L3205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3205"></td>
          <td id="LC3205" class="blob-code blob-code-inner js-file-line">    m_line(<span class="pl-c1">0</span>), m_logger(<span class="pl-c1">nullptr</span>), m_proceed(<span class="pl-c1">false</span>), m_dispatchAction(dispatchAction) {</td>
        </tr>
        <tr>
          <td id="L3206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3206"></td>
          <td id="LC3206" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3207"></td>
          <td id="LC3207" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3208"></td>
          <td id="LC3208" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~Writer</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3209"></td>
          <td id="LC3209" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">processDispatch</span>();</td>
        </tr>
        <tr>
          <td id="L3210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3210"></td>
          <td id="LC3210" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3211"></td>
          <td id="LC3211" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3212"></td>
          <td id="LC3212" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3213"></td>
          <td id="LC3213" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Writer&amp; <span class="pl-k">operator</span>&lt;&lt;(<span class="pl-k">const</span> T&amp; log) {</td>
        </tr>
        <tr>
          <td id="L3214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3214"></td>
          <td id="LC3214" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_LOGGING_ENABLED</td>
        </tr>
        <tr>
          <td id="L3215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3215"></td>
          <td id="LC3215" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m_proceed) {</td>
        </tr>
        <tr>
          <td id="L3216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3216"></td>
          <td id="LC3216" class="blob-code blob-code-inner js-file-line">      m_messageBuilder &lt;&lt; <span class="pl-c1">log</span>;</td>
        </tr>
        <tr>
          <td id="L3217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3217"></td>
          <td id="LC3217" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3218"></td>
          <td id="LC3218" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_LOGGING_ENABLED</span></td>
        </tr>
        <tr>
          <td id="L3219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3219"></td>
          <td id="LC3219" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3220"></td>
          <td id="LC3220" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3221"></td>
          <td id="LC3221" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3222"></td>
          <td id="LC3222" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Writer&amp; <span class="pl-k">operator</span>&lt;&lt;(std::ostream&amp; (*log)(std::ostream&amp;)) {</td>
        </tr>
        <tr>
          <td id="L3223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3223"></td>
          <td id="LC3223" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_LOGGING_ENABLED</td>
        </tr>
        <tr>
          <td id="L3224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3224"></td>
          <td id="LC3224" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m_proceed) {</td>
        </tr>
        <tr>
          <td id="L3225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3225"></td>
          <td id="LC3225" class="blob-code blob-code-inner js-file-line">      m_messageBuilder &lt;&lt; <span class="pl-c1">log</span>;</td>
        </tr>
        <tr>
          <td id="L3226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3226"></td>
          <td id="LC3226" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3227"></td>
          <td id="LC3227" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_LOGGING_ENABLED</span></td>
        </tr>
        <tr>
          <td id="L3228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3228"></td>
          <td id="LC3228" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> *<span class="pl-c1">this</span>;</td>
        </tr>
        <tr>
          <td id="L3229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3229"></td>
          <td id="LC3229" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3230"></td>
          <td id="LC3230" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3231"></td>
          <td id="LC3231" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">operator</span> <span class="pl-en">bool</span>() {</td>
        </tr>
        <tr>
          <td id="L3232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3232"></td>
          <td id="LC3232" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
        </tr>
        <tr>
          <td id="L3233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3233"></td>
          <td id="LC3233" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3234"></td>
          <td id="LC3234" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3235"></td>
          <td id="LC3235" class="blob-code blob-code-inner js-file-line">  Writer&amp; <span class="pl-en">construct</span>(Logger* logger, <span class="pl-k">bool</span> needLock = <span class="pl-c1">true</span>);</td>
        </tr>
        <tr>
          <td id="L3236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3236"></td>
          <td id="LC3236" class="blob-code blob-code-inner js-file-line">  Writer&amp; <span class="pl-en">construct</span>(<span class="pl-k">int</span> count, <span class="pl-k">const</span> <span class="pl-k">char</span>* loggerIds, ...);</td>
        </tr>
        <tr>
          <td id="L3237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3237"></td>
          <td id="LC3237" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L3238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3238"></td>
          <td id="LC3238" class="blob-code blob-code-inner js-file-line">  LogMessage* m_msg;</td>
        </tr>
        <tr>
          <td id="L3239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3239"></td>
          <td id="LC3239" class="blob-code blob-code-inner js-file-line">  Level m_level;</td>
        </tr>
        <tr>
          <td id="L3240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3240"></td>
          <td id="LC3240" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* m_file;</td>
        </tr>
        <tr>
          <td id="L3241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3241"></td>
          <td id="LC3241" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::type::LineNumber m_line;</td>
        </tr>
        <tr>
          <td id="L3242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3242"></td>
          <td id="LC3242" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* m_func;</td>
        </tr>
        <tr>
          <td id="L3243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3243"></td>
          <td id="LC3243" class="blob-code blob-code-inner js-file-line">  base::type::VerboseLevel m_verboseLevel;</td>
        </tr>
        <tr>
          <td id="L3244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3244"></td>
          <td id="LC3244" class="blob-code blob-code-inner js-file-line">  Logger* m_logger;</td>
        </tr>
        <tr>
          <td id="L3245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3245"></td>
          <td id="LC3245" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_proceed;</td>
        </tr>
        <tr>
          <td id="L3246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3246"></td>
          <td id="LC3246" class="blob-code blob-code-inner js-file-line">  base::MessageBuilder m_messageBuilder;</td>
        </tr>
        <tr>
          <td id="L3247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3247"></td>
          <td id="LC3247" class="blob-code blob-code-inner js-file-line">  base::DispatchAction m_dispatchAction;</td>
        </tr>
        <tr>
          <td id="L3248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3248"></td>
          <td id="LC3248" class="blob-code blob-code-inner js-file-line">  std::vector&lt;std::string&gt; m_loggerIds;</td>
        </tr>
        <tr>
          <td id="L3249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3249"></td>
          <td id="LC3249" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::Helpers;</td>
        </tr>
        <tr>
          <td id="L3250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3250"></td>
          <td id="LC3250" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3251"></td>
          <td id="LC3251" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">initializeLogger</span>(<span class="pl-k">const</span> std::string&amp; loggerId, <span class="pl-k">bool</span> lookup = <span class="pl-c1">true</span>, <span class="pl-k">bool</span> needLock = <span class="pl-c1">true</span>);</td>
        </tr>
        <tr>
          <td id="L3252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3252"></td>
          <td id="LC3252" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">processDispatch</span>();</td>
        </tr>
        <tr>
          <td id="L3253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3253"></td>
          <td id="LC3253" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">triggerDispatch</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3254"></td>
          <td id="LC3254" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3255"></td>
          <td id="LC3255" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PErrorWriter</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::Writer {</td>
        </tr>
        <tr>
          <td id="L3256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3256"></td>
          <td id="LC3256" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3257"></td>
          <td id="LC3257" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">PErrorWriter</span>(Level level, <span class="pl-k">const</span> <span class="pl-k">char</span>* file, base::type::LineNumber line,</td>
        </tr>
        <tr>
          <td id="L3258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3258"></td>
          <td id="LC3258" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">const</span> <span class="pl-k">char</span>* func, base::DispatchAction dispatchAction = base::DispatchAction::NormalLog,</td>
        </tr>
        <tr>
          <td id="L3259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3259"></td>
          <td id="LC3259" class="blob-code blob-code-inner js-file-line">               base::type::VerboseLevel verboseLevel = <span class="pl-c1">0</span>) :</td>
        </tr>
        <tr>
          <td id="L3260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3260"></td>
          <td id="LC3260" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">base::Writer</span>(level, file, line, func, dispatchAction, verboseLevel) {</td>
        </tr>
        <tr>
          <td id="L3261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3261"></td>
          <td id="LC3261" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3262"></td>
          <td id="LC3262" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3263"></td>
          <td id="LC3263" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~PErrorWriter</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3264"></td>
          <td id="LC3264" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3265"></td>
          <td id="LC3265" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L3266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3266"></td>
          <td id="LC3266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Logging from Logger class. Why this is here? Because we have Storage and Writer class available</span></td>
        </tr>
        <tr>
          <td id="L3267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3267"></td>
          <td id="LC3267" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</td>
        </tr>
        <tr>
          <td id="L3268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3268"></td>
          <td id="LC3268" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L3269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3269"></td>
          <td id="LC3269" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">Logger::log_</span>(Level level, <span class="pl-k">int</span> vlevel, <span class="pl-k">const</span> <span class="pl-k">char</span>* s, <span class="pl-k">const</span> T&amp; value, <span class="pl-k">const</span> Args&amp;... args) {</td>
        </tr>
        <tr>
          <td id="L3270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3270"></td>
          <td id="LC3270" class="blob-code blob-code-inner js-file-line">  base::MessageBuilder b;</td>
        </tr>
        <tr>
          <td id="L3271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3271"></td>
          <td id="LC3271" class="blob-code blob-code-inner js-file-line">  b.<span class="pl-c1">initialize</span>(<span class="pl-c1">this</span>);</td>
        </tr>
        <tr>
          <td id="L3272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3272"></td>
          <td id="LC3272" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span> (*s) {</td>
        </tr>
        <tr>
          <td id="L3273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3273"></td>
          <td id="LC3273" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (*s == base::consts::<span class="pl-c1">kFormatSpecifierChar</span>) {</td>
        </tr>
        <tr>
          <td id="L3274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3274"></td>
          <td id="LC3274" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (*(s + <span class="pl-c1">1</span>) == base::consts::<span class="pl-c1">kFormatSpecifierChar</span>) {</td>
        </tr>
        <tr>
          <td id="L3275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3275"></td>
          <td id="LC3275" class="blob-code blob-code-inner js-file-line">        ++s;</td>
        </tr>
        <tr>
          <td id="L3276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3276"></td>
          <td id="LC3276" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3277"></td>
          <td id="LC3277" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (*(s + <span class="pl-c1">1</span>) == base::consts::<span class="pl-c1">kFormatSpecifierCharValue</span>) {</td>
        </tr>
        <tr>
          <td id="L3278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3278"></td>
          <td id="LC3278" class="blob-code blob-code-inner js-file-line">          ++s;</td>
        </tr>
        <tr>
          <td id="L3279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3279"></td>
          <td id="LC3279" class="blob-code blob-code-inner js-file-line">          b &lt;&lt; value;</td>
        </tr>
        <tr>
          <td id="L3280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3280"></td>
          <td id="LC3280" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">log_</span>(level, vlevel, ++s, args...);</td>
        </tr>
        <tr>
          <td id="L3281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3281"></td>
          <td id="LC3281" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L3282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3282"></td>
          <td id="LC3282" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L3283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3283"></td>
          <td id="LC3283" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3284"></td>
          <td id="LC3284" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3285"></td>
          <td id="LC3285" class="blob-code blob-code-inner js-file-line">    b &lt;&lt; *s++;</td>
        </tr>
        <tr>
          <td id="L3286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3286"></td>
          <td id="LC3286" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3287"></td>
          <td id="LC3287" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">ELPP_INTERNAL_ERROR</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Too many arguments provided. Unable to handle. Please provide more format specifiers<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">false</span>);</td>
        </tr>
        <tr>
          <td id="L3288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3288"></td>
          <td id="LC3288" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3289"></td>
          <td id="LC3289" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3290"></td>
          <td id="LC3290" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-en">Logger::log_</span>(Level level, <span class="pl-k">int</span> vlevel, <span class="pl-k">const</span> T&amp; log) {</td>
        </tr>
        <tr>
          <td id="L3291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3291"></td>
          <td id="LC3291" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (level == Level::Verbose) {</td>
        </tr>
        <tr>
          <td id="L3292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3292"></td>
          <td id="LC3292" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ELPP-&gt;<span class="pl-c1">vRegistry</span>()-&gt;<span class="pl-c1">allowed</span>(vlevel, __FILE__)) {</td>
        </tr>
        <tr>
          <td id="L3293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3293"></td>
          <td id="LC3293" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">base::Writer</span>(Level::Verbose, <span class="pl-s"><span class="pl-pds">&quot;</span>FILE<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>FUNCTION<span class="pl-pds">&quot;</span></span>,</td>
        </tr>
        <tr>
          <td id="L3294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3294"></td>
          <td id="LC3294" class="blob-code blob-code-inner js-file-line">                   base::DispatchAction::NormalLog, vlevel).<span class="pl-c1">construct</span>(<span class="pl-c1">this</span>, <span class="pl-c1">false</span>) &lt;&lt; <span class="pl-c1">log</span>;</td>
        </tr>
        <tr>
          <td id="L3295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3295"></td>
          <td id="LC3295" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3296"></td>
          <td id="LC3296" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">stream</span>().<span class="pl-c1">str</span>(<span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3297"></td>
          <td id="LC3297" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">releaseLock</span>();</td>
        </tr>
        <tr>
          <td id="L3298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3298"></td>
          <td id="LC3298" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3299"></td>
          <td id="LC3299" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3300"></td>
          <td id="LC3300" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">base::Writer</span>(level, <span class="pl-s"><span class="pl-pds">&quot;</span>FILE<span class="pl-pds">&quot;</span></span>, <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>FUNCTION<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">construct</span>(<span class="pl-c1">this</span>, <span class="pl-c1">false</span>) &lt;&lt; <span class="pl-c1">log</span>;</td>
        </tr>
        <tr>
          <td id="L3301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3301"></td>
          <td id="LC3301" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3302"></td>
          <td id="LC3302" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3303"></td>
          <td id="LC3303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L3304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3304"></td>
          <td id="LC3304" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::log</span>(Level level, <span class="pl-k">const</span> <span class="pl-k">char</span>* s, <span class="pl-k">const</span> T&amp; value, <span class="pl-k">const</span> Args&amp;... args) {</td>
        </tr>
        <tr>
          <td id="L3305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3305"></td>
          <td id="LC3305" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">acquireLock</span>(); <span class="pl-c"><span class="pl-c">//</span> released in Writer!</span></td>
        </tr>
        <tr>
          <td id="L3306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3306"></td>
          <td id="LC3306" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">log_</span>(level, <span class="pl-c1">0</span>, s, value, args...);</td>
        </tr>
        <tr>
          <td id="L3307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3307"></td>
          <td id="LC3307" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3308"></td>
          <td id="LC3308" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3309"></td>
          <td id="LC3309" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::log</span>(Level level, <span class="pl-k">const</span> T&amp; log) {</td>
        </tr>
        <tr>
          <td id="L3310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3310"></td>
          <td id="LC3310" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">acquireLock</span>(); <span class="pl-c"><span class="pl-c">//</span> released in Writer!</span></td>
        </tr>
        <tr>
          <td id="L3311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3311"></td>
          <td id="LC3311" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">log_</span>(level, <span class="pl-c1">0</span>, <span class="pl-c1">log</span>);</td>
        </tr>
        <tr>
          <td id="L3312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3312"></td>
          <td id="LC3312" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3313"></td>
          <td id="LC3313" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_VERBOSE_LOG</td>
        </tr>
        <tr>
          <td id="L3314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3314"></td>
          <td id="LC3314" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L3315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3315"></td>
          <td id="LC3315" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::verbose</span>(<span class="pl-k">int</span> vlevel, <span class="pl-k">const</span> <span class="pl-k">char</span>* s, <span class="pl-k">const</span> T&amp; value, <span class="pl-k">const</span> Args&amp;... args) {</td>
        </tr>
        <tr>
          <td id="L3316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3316"></td>
          <td id="LC3316" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">acquireLock</span>(); <span class="pl-c"><span class="pl-c">//</span> released in Writer!</span></td>
        </tr>
        <tr>
          <td id="L3317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3317"></td>
          <td id="LC3317" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">log_</span>(el::Level::Verbose, vlevel, s, value, args...);</td>
        </tr>
        <tr>
          <td id="L3318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3318"></td>
          <td id="LC3318" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3319"></td>
          <td id="LC3319" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3320"></td>
          <td id="LC3320" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::verbose</span>(<span class="pl-k">int</span> vlevel, <span class="pl-k">const</span> T&amp; log) {</td>
        </tr>
        <tr>
          <td id="L3321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3321"></td>
          <td id="LC3321" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">acquireLock</span>(); <span class="pl-c"><span class="pl-c">//</span> released in Writer!</span></td>
        </tr>
        <tr>
          <td id="L3322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3322"></td>
          <td id="LC3322" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">log_</span>(el::Level::Verbose, vlevel, <span class="pl-c1">log</span>);</td>
        </tr>
        <tr>
          <td id="L3323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3323"></td>
          <td id="LC3323" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3324"></td>
          <td id="LC3324" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3325"></td>
          <td id="LC3325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;</td>
        </tr>
        <tr>
          <td id="L3326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3326"></td>
          <td id="LC3326" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::verbose</span>(<span class="pl-k">int</span>, <span class="pl-k">const</span> <span class="pl-k">char</span>*, <span class="pl-k">const</span> T&amp;, <span class="pl-k">const</span> Args&amp;...) {</td>
        </tr>
        <tr>
          <td id="L3327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3327"></td>
          <td id="LC3327" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L3328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3328"></td>
          <td id="LC3328" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3329"></td>
          <td id="LC3329" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3330"></td>
          <td id="LC3330" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::verbose</span>(<span class="pl-k">int</span>, <span class="pl-k">const</span> T&amp;) {</td>
        </tr>
        <tr>
          <td id="L3331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3331"></td>
          <td id="LC3331" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L3332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3332"></td>
          <td id="LC3332" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3333"></td>
          <td id="LC3333" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_VERBOSE_LOG</span></td>
        </tr>
        <tr>
          <td id="L3334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3334"></td>
          <td id="LC3334" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">LOGGER_LEVEL_WRITERS</span>(<span class="pl-v">FUNCTION_NAME, LOG_LEVEL</span>)\</td>
        </tr>
        <tr>
          <td id="L3335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3335"></td>
          <td id="LC3335" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;\</td>
        </tr>
        <tr>
          <td id="L3336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3336"></td>
          <td id="LC3336" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::FUNCTION_NAME</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* s, <span class="pl-k">const</span> T&amp; value, <span class="pl-k">const</span> Args&amp;... args) {\</td>
        </tr>
        <tr>
          <td id="L3337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3337"></td>
          <td id="LC3337" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">log</span>(LOG_LEVEL, s, value, args...);\</td>
        </tr>
        <tr>
          <td id="L3338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3338"></td>
          <td id="LC3338" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L3339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3339"></td>
          <td id="LC3339" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;\</td>
        </tr>
        <tr>
          <td id="L3340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3340"></td>
          <td id="LC3340" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::FUNCTION_NAME</span>(<span class="pl-k">const</span> T&amp; value) {\</td>
        </tr>
        <tr>
          <td id="L3341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3341"></td>
          <td id="LC3341" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">log</span>(LOG_LEVEL, value);\</td>
        </tr>
        <tr>
          <td id="L3342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3342"></td>
          <td id="LC3342" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3343"></td>
          <td id="LC3343" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(<span class="pl-v">FUNCTION_NAME, LOG_LEVEL</span>)\</td>
        </tr>
        <tr>
          <td id="L3344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3344"></td>
          <td id="LC3344" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T, <span class="pl-k">typename</span>... Args&gt;\</td>
        </tr>
        <tr>
          <td id="L3345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3345"></td>
          <td id="LC3345" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::FUNCTION_NAME</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>*, <span class="pl-k">const</span> T&amp;, <span class="pl-k">const</span> Args&amp;...) {\</td>
        </tr>
        <tr>
          <td id="L3346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3346"></td>
          <td id="LC3346" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>;\</td>
        </tr>
        <tr>
          <td id="L3347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3347"></td>
          <td id="LC3347" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L3348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3348"></td>
          <td id="LC3348" class="blob-code blob-code-inner js-file-line"><span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;\</td>
        </tr>
        <tr>
          <td id="L3349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3349"></td>
          <td id="LC3349" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">Logger::FUNCTION_NAME</span>(<span class="pl-k">const</span> T&amp;) {\</td>
        </tr>
        <tr>
          <td id="L3350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3350"></td>
          <td id="LC3350" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>;\</td>
        </tr>
        <tr>
          <td id="L3351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3351"></td>
          <td id="LC3351" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3352"></td>
          <td id="LC3352" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3353"></td>
          <td id="LC3353" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_INFO_LOG</td>
        </tr>
        <tr>
          <td id="L3354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3354"></td>
          <td id="LC3354" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS</span>(info, Level::Info)</td>
        </tr>
        <tr>
          <td id="L3355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3355"></td>
          <td id="LC3355" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3356"></td>
          <td id="LC3356" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(info, Level::Info)</td>
        </tr>
        <tr>
          <td id="L3357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3357"></td>
          <td id="LC3357" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_INFO_LOG</span></td>
        </tr>
        <tr>
          <td id="L3358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3358"></td>
          <td id="LC3358" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_DEBUG_LOG</td>
        </tr>
        <tr>
          <td id="L3359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3359"></td>
          <td id="LC3359" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS</span>(debug, Level::Debug)</td>
        </tr>
        <tr>
          <td id="L3360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3360"></td>
          <td id="LC3360" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3361"></td>
          <td id="LC3361" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(debug, Level::Debug)</td>
        </tr>
        <tr>
          <td id="L3362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3362"></td>
          <td id="LC3362" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_DEBUG_LOG</span></td>
        </tr>
        <tr>
          <td id="L3363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3363"></td>
          <td id="LC3363" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_WARNING_LOG</td>
        </tr>
        <tr>
          <td id="L3364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3364"></td>
          <td id="LC3364" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS</span>(warn, Level::Warning)</td>
        </tr>
        <tr>
          <td id="L3365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3365"></td>
          <td id="LC3365" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3366"></td>
          <td id="LC3366" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(warn, Level::Warning)</td>
        </tr>
        <tr>
          <td id="L3367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3367"></td>
          <td id="LC3367" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_WARNING_LOG</span></td>
        </tr>
        <tr>
          <td id="L3368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3368"></td>
          <td id="LC3368" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_ERROR_LOG</td>
        </tr>
        <tr>
          <td id="L3369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3369"></td>
          <td id="LC3369" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS</span>(error, Level::Error)</td>
        </tr>
        <tr>
          <td id="L3370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3370"></td>
          <td id="LC3370" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3371"></td>
          <td id="LC3371" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(error, Level::Error)</td>
        </tr>
        <tr>
          <td id="L3372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3372"></td>
          <td id="LC3372" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_ERROR_LOG</span></td>
        </tr>
        <tr>
          <td id="L3373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3373"></td>
          <td id="LC3373" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_FATAL_LOG</td>
        </tr>
        <tr>
          <td id="L3374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3374"></td>
          <td id="LC3374" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS</span>(fatal, Level::Fatal)</td>
        </tr>
        <tr>
          <td id="L3375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3375"></td>
          <td id="LC3375" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3376"></td>
          <td id="LC3376" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(fatal, Level::Fatal)</td>
        </tr>
        <tr>
          <td id="L3377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3377"></td>
          <td id="LC3377" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_FATAL_LOG</span></td>
        </tr>
        <tr>
          <td id="L3378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3378"></td>
          <td id="LC3378" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_TRACE_LOG</td>
        </tr>
        <tr>
          <td id="L3379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3379"></td>
          <td id="LC3379" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS</span>(trace, Level::Trace)</td>
        </tr>
        <tr>
          <td id="L3380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3380"></td>
          <td id="LC3380" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3381"></td>
          <td id="LC3381" class="blob-code blob-code-inner js-file-line"><span class="pl-en">LOGGER_LEVEL_WRITERS_DISABLED</span>(trace, Level::Trace)</td>
        </tr>
        <tr>
          <td id="L3382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3382"></td>
          <td id="LC3382" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_TRACE_LOG</span></td>
        </tr>
        <tr>
          <td id="L3383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3383"></td>
          <td id="LC3383" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> LOGGER_LEVEL_WRITERS</td>
        </tr>
        <tr>
          <td id="L3384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3384"></td>
          <td id="LC3384" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">undef</span> LOGGER_LEVEL_WRITERS_DISABLED</td>
        </tr>
        <tr>
          <td id="L3385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3385"></td>
          <td id="LC3385" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_VARIADIC_TEMPLATES_SUPPORTED</span></td>
        </tr>
        <tr>
          <td id="L3386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3386"></td>
          <td id="LC3386" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_COMPILER_MSVC</td>
        </tr>
        <tr>
          <td id="L3387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3387"></td>
          <td id="LC3387" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_VARIADIC_FUNC_MSVC</span>(<span class="pl-v">variadicFunction, variadicArgs</span>) variadicFunction variadicArgs</td>
        </tr>
        <tr>
          <td id="L3388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3388"></td>
          <td id="LC3388" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_VARIADIC_FUNC_MSVC_RUN</span>(variadicFunction, ...) ELPP_VARIADIC_FUNC_MSVC(variadicFunction, (__VA_ARGS__))</td>
        </tr>
        <tr>
          <td id="L3389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3389"></td>
          <td id="LC3389" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">el_getVALength</span>(...) ELPP_VARIADIC_FUNC_MSVC_RUN(el_resolveVALength, <span class="pl-c1">0</span>, ## __VA_ARGS__,\</td>
        </tr>
        <tr>
          <td id="L3390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3390"></td>
          <td id="LC3390" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">10</span>, <span class="pl-c1">9</span>, <span class="pl-c1">8</span>, <span class="pl-c1">7</span>, <span class="pl-c1">6</span>, <span class="pl-c1">5</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L3391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3391"></td>
          <td id="LC3391" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3392"></td>
          <td id="LC3392" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">if</span> ELPP_COMPILER_CLANG</td>
        </tr>
        <tr>
          <td id="L3393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3393"></td>
          <td id="LC3393" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">el_getVALength</span>(...) el_resolveVALength(<span class="pl-c1">0</span>, __VA_ARGS__, <span class="pl-c1">10</span>, <span class="pl-c1">9</span>, <span class="pl-c1">8</span>, <span class="pl-c1">7</span>, <span class="pl-c1">6</span>, <span class="pl-c1">5</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L3394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3394"></td>
          <td id="LC3394" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3395"></td>
          <td id="LC3395" class="blob-code blob-code-inner js-file-line">#    <span class="pl-k">define</span> <span class="pl-en">el_getVALength</span>(...) el_resolveVALength(<span class="pl-c1">0</span>, ## __VA_ARGS__, <span class="pl-c1">10</span>, <span class="pl-c1">9</span>, <span class="pl-c1">8</span>, <span class="pl-c1">7</span>, <span class="pl-c1">6</span>, <span class="pl-c1">5</span>, <span class="pl-c1">4</span>, <span class="pl-c1">3</span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>, <span class="pl-c1">0</span>)</td>
        </tr>
        <tr>
          <td id="L3396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3396"></td>
          <td id="LC3396" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_COMPILER_CLANG</span></td>
        </tr>
        <tr>
          <td id="L3397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3397"></td>
          <td id="LC3397" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> ELPP_COMPILER_MSVC</span></td>
        </tr>
        <tr>
          <td id="L3398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3398"></td>
          <td id="LC3398" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">el_resolveVALength</span>(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, N, ...) N</td>
        </tr>
        <tr>
          <td id="L3399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3399"></td>
          <td id="LC3399" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_WRITE_LOG</span>(writer, level, dispatchAction, ...) \</td>
        </tr>
        <tr>
          <td id="L3400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3400"></td>
          <td id="LC3400" class="blob-code blob-code-inner js-file-line"><span class="pl-en">writer</span>(level, __FILE__, __LINE__, ELPP_FUNC, dispatchAction).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L3401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3401"></td>
          <td id="LC3401" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, condition, level, dispatchAction, ...) <span class="pl-k">if</span> (condition) \</td>
        </tr>
        <tr>
          <td id="L3402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3402"></td>
          <td id="LC3402" class="blob-code blob-code-inner js-file-line"><span class="pl-en">writer</span>(level, __FILE__, __LINE__, ELPP_FUNC, dispatchAction).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L3403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3403"></td>
          <td id="LC3403" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, level, dispatchAction, ...) \</td>
        </tr>
        <tr>
          <td id="L3404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3404"></td>
          <td id="LC3404" class="blob-code blob-code-inner js-file-line">ELPP-&gt;<span class="pl-en">validateEveryNCounter</span>(__FILE__, __LINE__, occasion) &amp;&amp; \</td>
        </tr>
        <tr>
          <td id="L3405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3405"></td>
          <td id="LC3405" class="blob-code blob-code-inner js-file-line">writer(level, __FILE__, __LINE__, ELPP_FUNC, dispatchAction).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L3406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3406"></td>
          <td id="LC3406" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, level, dispatchAction, ...) \</td>
        </tr>
        <tr>
          <td id="L3407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3407"></td>
          <td id="LC3407" class="blob-code blob-code-inner js-file-line">ELPP-&gt;<span class="pl-en">validateAfterNCounter</span>(__FILE__, __LINE__, n) &amp;&amp; \</td>
        </tr>
        <tr>
          <td id="L3408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3408"></td>
          <td id="LC3408" class="blob-code blob-code-inner js-file-line">writer(level, __FILE__, __LINE__, ELPP_FUNC, dispatchAction).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L3409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3409"></td>
          <td id="LC3409" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, level, dispatchAction, ...) \</td>
        </tr>
        <tr>
          <td id="L3410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3410"></td>
          <td id="LC3410" class="blob-code blob-code-inner js-file-line">ELPP-&gt;<span class="pl-en">validateNTimesCounter</span>(__FILE__, __LINE__, n) &amp;&amp; \</td>
        </tr>
        <tr>
          <td id="L3411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3411"></td>
          <td id="LC3411" class="blob-code blob-code-inner js-file-line">writer(level, __FILE__, __LINE__, ELPP_FUNC, dispatchAction).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L3412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3412"></td>
          <td id="LC3412" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</td>
        </tr>
        <tr>
          <td id="L3413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3413"></td>
          <td id="LC3413" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PerformanceTrackingData</span> {</td>
        </tr>
        <tr>
          <td id="L3414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3414"></td>
          <td id="LC3414" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3415"></td>
          <td id="LC3415" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">enum</span> <span class="pl-k">class</span> <span class="pl-en">DataType</span> : base::type::EnumType {</td>
        </tr>
        <tr>
          <td id="L3416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3416"></td>
          <td id="LC3416" class="blob-code blob-code-inner js-file-line">    Checkpoint = <span class="pl-c1">1</span>, Complete = <span class="pl-c1">2</span></td>
        </tr>
        <tr>
          <td id="L3417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3417"></td>
          <td id="LC3417" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L3418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3418"></td>
          <td id="LC3418" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span> Do not use constructor, will run into multiple definition error, use init(PerformanceTracker*)</span></td>
        </tr>
        <tr>
          <td id="L3419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3419"></td>
          <td id="LC3419" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">PerformanceTrackingData</span>(DataType dataType) : m_performanceTracker(<span class="pl-c1">nullptr</span>),</td>
        </tr>
        <tr>
          <td id="L3420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3420"></td>
          <td id="LC3420" class="blob-code blob-code-inner js-file-line">    m_dataType(dataType), m_firstCheckpoint(<span class="pl-c1">false</span>), m_file(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>), m_line(<span class="pl-c1">0</span>), m_func(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>) {}</td>
        </tr>
        <tr>
          <td id="L3421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3421"></td>
          <td id="LC3421" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string* <span class="pl-en">blockName</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L3422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3422"></td>
          <td id="LC3422" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>* <span class="pl-en">startTime</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L3423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3423"></td>
          <td id="LC3423" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>* <span class="pl-en">endTime</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L3424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3424"></td>
          <td id="LC3424" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>* <span class="pl-en">lastCheckpointTime</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L3425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3425"></td>
          <td id="LC3425" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::PerformanceTracker* <span class="pl-en">performanceTracker</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3426"></td>
          <td id="LC3426" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_performanceTracker;</td>
        </tr>
        <tr>
          <td id="L3427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3427"></td>
          <td id="LC3427" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3428"></td>
          <td id="LC3428" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> PerformanceTrackingData::DataType <span class="pl-en">dataType</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3429"></td>
          <td id="LC3429" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_dataType;</td>
        </tr>
        <tr>
          <td id="L3430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3430"></td>
          <td id="LC3430" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3431"></td>
          <td id="LC3431" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">firstCheckpoint</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3432"></td>
          <td id="LC3432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_firstCheckpoint;</td>
        </tr>
        <tr>
          <td id="L3433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3433"></td>
          <td id="LC3433" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3434"></td>
          <td id="LC3434" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> std::string <span class="pl-en">checkpointId</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3435"></td>
          <td id="LC3435" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_checkpointId;</td>
        </tr>
        <tr>
          <td id="L3436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3436"></td>
          <td id="LC3436" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3437"></td>
          <td id="LC3437" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">file</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3438"></td>
          <td id="LC3438" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_file;</td>
        </tr>
        <tr>
          <td id="L3439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3439"></td>
          <td id="LC3439" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3440"></td>
          <td id="LC3440" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> base::type::LineNumber <span class="pl-en">line</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3441"></td>
          <td id="LC3441" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_line;</td>
        </tr>
        <tr>
          <td id="L3442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3442"></td>
          <td id="LC3442" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3443"></td>
          <td id="LC3443" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">char</span>* <span class="pl-en">func</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3444"></td>
          <td id="LC3444" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_func;</td>
        </tr>
        <tr>
          <td id="L3445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3445"></td>
          <td id="LC3445" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3446"></td>
          <td id="LC3446" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span>* <span class="pl-en">formattedTimeTaken</span>() <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3447"></td>
          <td id="LC3447" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> &amp;m_formattedTimeTaken;</td>
        </tr>
        <tr>
          <td id="L3448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3448"></td>
          <td id="LC3448" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3449"></td>
          <td id="LC3449" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">loggerId</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L3450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3450"></td>
          <td id="LC3450" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3451"></td>
          <td id="LC3451" class="blob-code blob-code-inner js-file-line">  base::PerformanceTracker* m_performanceTracker;</td>
        </tr>
        <tr>
          <td id="L3452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3452"></td>
          <td id="LC3452" class="blob-code blob-code-inner js-file-line">  base::type::<span class="pl-c1">string_t</span> m_formattedTimeTaken;</td>
        </tr>
        <tr>
          <td id="L3453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3453"></td>
          <td id="LC3453" class="blob-code blob-code-inner js-file-line">  PerformanceTrackingData::DataType m_dataType;</td>
        </tr>
        <tr>
          <td id="L3454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3454"></td>
          <td id="LC3454" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_firstCheckpoint;</td>
        </tr>
        <tr>
          <td id="L3455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3455"></td>
          <td id="LC3455" class="blob-code blob-code-inner js-file-line">  std::string m_checkpointId;</td>
        </tr>
        <tr>
          <td id="L3456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3456"></td>
          <td id="LC3456" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* m_file;</td>
        </tr>
        <tr>
          <td id="L3457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3457"></td>
          <td id="LC3457" class="blob-code blob-code-inner js-file-line">  base::type::LineNumber m_line;</td>
        </tr>
        <tr>
          <td id="L3458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3458"></td>
          <td id="LC3458" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">char</span>* m_func;</td>
        </tr>
        <tr>
          <td id="L3459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3459"></td>
          <td id="LC3459" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">init</span>(base::PerformanceTracker* performanceTracker, <span class="pl-k">bool</span> firstCheckpoint = <span class="pl-c1">false</span>) {</td>
        </tr>
        <tr>
          <td id="L3460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3460"></td>
          <td id="LC3460" class="blob-code blob-code-inner js-file-line">    m_performanceTracker = performanceTracker;</td>
        </tr>
        <tr>
          <td id="L3461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3461"></td>
          <td id="LC3461" class="blob-code blob-code-inner js-file-line">    m_firstCheckpoint = firstCheckpoint;</td>
        </tr>
        <tr>
          <td id="L3462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3462"></td>
          <td id="LC3462" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3463"></td>
          <td id="LC3463" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3464"></td>
          <td id="LC3464" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::base::PerformanceTracker;</td>
        </tr>
        <tr>
          <td id="L3465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3465"></td>
          <td id="LC3465" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3466"></td>
          <td id="LC3466" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L3467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3467"></td>
          <td id="LC3467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Represents performanceTracker block of code that conditionally adds performance status to log</span></td>
        </tr>
        <tr>
          <td id="L3468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3468"></td>
          <td id="LC3468" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/        either when goes outside the scope of when checkpoint() is called</span></td>
        </tr>
        <tr>
          <td id="L3469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3469"></td>
          <td id="LC3469" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">PerformanceTracker</span> : <span class="pl-k">public</span> <span class="pl-en">base</span>::threading::ThreadSafe, public Loggable {</td>
        </tr>
        <tr>
          <td id="L3470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3470"></td>
          <td id="LC3470" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3471"></td>
          <td id="LC3471" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">PerformanceTracker</span>(<span class="pl-k">const</span> std::string&amp; blockName,</td>
        </tr>
        <tr>
          <td id="L3472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3472"></td>
          <td id="LC3472" class="blob-code blob-code-inner js-file-line">                     base::TimestampUnit timestampUnit = base::TimestampUnit::Millisecond,</td>
        </tr>
        <tr>
          <td id="L3473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3473"></td>
          <td id="LC3473" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">const</span> std::string&amp; loggerId = std::string(el::base::consts::<span class="pl-c1">kPerformanceLoggerId</span>),</td>
        </tr>
        <tr>
          <td id="L3474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3474"></td>
          <td id="LC3474" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">bool</span> scopedLog = <span class="pl-c1">true</span>, Level level = base::consts::<span class="pl-c1">kPerformanceTrackerDefaultLevel</span>);</td>
        </tr>
        <tr>
          <td id="L3475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3475"></td>
          <td id="LC3475" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Copy constructor</span></td>
        </tr>
        <tr>
          <td id="L3476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3476"></td>
          <td id="LC3476" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">PerformanceTracker</span>(<span class="pl-k">const</span> PerformanceTracker&amp; t) :</td>
        </tr>
        <tr>
          <td id="L3477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3477"></td>
          <td id="LC3477" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_blockName</span>(t.m_blockName), m_timestampUnit(t.m_timestampUnit), m_loggerId(t.m_loggerId), m_scopedLog(t.m_scopedLog),</td>
        </tr>
        <tr>
          <td id="L3478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3478"></td>
          <td id="LC3478" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_level</span>(t.m_level), m_hasChecked(t.m_hasChecked), m_lastCheckpointId(t.m_lastCheckpointId), m_enabled(t.m_enabled),</td>
        </tr>
        <tr>
          <td id="L3479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3479"></td>
          <td id="LC3479" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">m_startTime</span>(t.m_startTime), m_endTime(t.m_endTime), m_lastCheckpointTime(t.m_lastCheckpointTime) {</td>
        </tr>
        <tr>
          <td id="L3480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3480"></td>
          <td id="LC3480" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3481"></td>
          <td id="LC3481" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~PerformanceTracker</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3482"></td>
          <td id="LC3482" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief A checkpoint for current performanceTracker block.</span></td>
        </tr>
        <tr>
          <td id="L3483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3483"></td>
          <td id="LC3483" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">checkpoint</span>(<span class="pl-k">const</span> std::string&amp; id = std::string(), <span class="pl-k">const</span> char* file = __FILE__,</td>
        </tr>
        <tr>
          <td id="L3484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3484"></td>
          <td id="LC3484" class="blob-code blob-code-inner js-file-line">                  base::type::LineNumber line = __LINE__,</td>
        </tr>
        <tr>
          <td id="L3485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3485"></td>
          <td id="LC3485" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">const</span> char* func = &quot;&quot;);</td>
        </tr>
        <tr>
          <td id="L3486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3486"></td>
          <td id="LC3486" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> Level <span class="pl-en">level</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3487"></td>
          <td id="LC3487" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_level;</td>
        </tr>
        <tr>
          <td id="L3488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3488"></td>
          <td id="LC3488" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3489"></td>
          <td id="LC3489" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3490"></td>
          <td id="LC3490" class="blob-code blob-code-inner js-file-line">  std::string m_blockName;</td>
        </tr>
        <tr>
          <td id="L3491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3491"></td>
          <td id="LC3491" class="blob-code blob-code-inner js-file-line">  base::TimestampUnit m_timestampUnit;</td>
        </tr>
        <tr>
          <td id="L3492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3492"></td>
          <td id="LC3492" class="blob-code blob-code-inner js-file-line">  std::string m_loggerId;</td>
        </tr>
        <tr>
          <td id="L3493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3493"></td>
          <td id="LC3493" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_scopedLog;</td>
        </tr>
        <tr>
          <td id="L3494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3494"></td>
          <td id="LC3494" class="blob-code blob-code-inner js-file-line">  Level m_level;</td>
        </tr>
        <tr>
          <td id="L3495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3495"></td>
          <td id="LC3495" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_hasChecked;</td>
        </tr>
        <tr>
          <td id="L3496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3496"></td>
          <td id="LC3496" class="blob-code blob-code-inner js-file-line">  std::string m_lastCheckpointId;</td>
        </tr>
        <tr>
          <td id="L3497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3497"></td>
          <td id="LC3497" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">bool</span> m_enabled;</td>
        </tr>
        <tr>
          <td id="L3498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3498"></td>
          <td id="LC3498" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">struct</span> <span class="pl-en">timeval</span> m_startTime, m_endTime, m_lastCheckpointTime;</td>
        </tr>
        <tr>
          <td id="L3499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3499"></td>
          <td id="LC3499" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3500"></td>
          <td id="LC3500" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">PerformanceTracker</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3501"></td>
          <td id="LC3501" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3502"></td>
          <td id="LC3502" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">el</span>::PerformanceTrackingData;</td>
        </tr>
        <tr>
          <td id="L3503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3503"></td>
          <td id="LC3503" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> <span class="pl-k">class</span> <span class="pl-en">base</span>::DefaultPerformanceTrackingCallback;</td>
        </tr>
        <tr>
          <td id="L3504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3504"></td>
          <td id="LC3504" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3505"></td>
          <td id="LC3505" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> <span class="pl-k">inline</span> base::type::<span class="pl-c1">string_t</span> <span class="pl-en">getFormattedTimeTaken</span>() <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3506"></td>
          <td id="LC3506" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">getFormattedTimeTaken</span>(m_startTime);</td>
        </tr>
        <tr>
          <td id="L3507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3507"></td>
          <td id="LC3507" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3508"></td>
          <td id="LC3508" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3509"></td>
          <td id="LC3509" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> base::type::<span class="pl-c1">string_t</span> <span class="pl-en">getFormattedTimeTaken</span>(<span class="pl-k">struct</span> <span class="pl-en">timeval</span> startTime) <span class="pl-k">const</span>;</td>
        </tr>
        <tr>
          <td id="L3510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3510"></td>
          <td id="LC3510" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3511"></td>
          <td id="LC3511" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">log</span>(el::base::type::<span class="pl-c1">ostream_t</span>&amp; os) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3512"></td>
          <td id="LC3512" class="blob-code blob-code-inner js-file-line">    os &lt;&lt; <span class="pl-c1">getFormattedTimeTaken</span>();</td>
        </tr>
        <tr>
          <td id="L3513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3513"></td>
          <td id="LC3513" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3514"></td>
          <td id="LC3514" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3515"></td>
          <td id="LC3515" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">DefaultPerformanceTrackingCallback</span> : <span class="pl-k">public</span> <span class="pl-en">PerformanceTrackingCallback</span> {</td>
        </tr>
        <tr>
          <td id="L3516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3516"></td>
          <td id="LC3516" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">protected:</span></td>
        </tr>
        <tr>
          <td id="L3517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3517"></td>
          <td id="LC3517" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">handle</span>(<span class="pl-k">const</span> PerformanceTrackingData* data) {</td>
        </tr>
        <tr>
          <td id="L3518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3518"></td>
          <td id="LC3518" class="blob-code blob-code-inner js-file-line">    m_data = data;</td>
        </tr>
        <tr>
          <td id="L3519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3519"></td>
          <td id="LC3519" class="blob-code blob-code-inner js-file-line">    base::type::<span class="pl-c1">stringstream_t</span> ss;</td>
        </tr>
        <tr>
          <td id="L3520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3520"></td>
          <td id="LC3520" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (m_data-&gt;<span class="pl-c1">dataType</span>() == PerformanceTrackingData::DataType::Complete) {</td>
        </tr>
        <tr>
          <td id="L3521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3521"></td>
          <td id="LC3521" class="blob-code blob-code-inner js-file-line">      ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Executed [<span class="pl-pds">&quot;</span></span>) &lt;&lt; m_data-&gt;<span class="pl-c1">blockName</span>()-&gt;<span class="pl-c1">c_str</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>] in [<span class="pl-pds">&quot;</span></span>) &lt;&lt;</td>
        </tr>
        <tr>
          <td id="L3522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3522"></td>
          <td id="LC3522" class="blob-code blob-code-inner js-file-line">         *m_data-&gt;<span class="pl-c1">formattedTimeTaken</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3523"></td>
          <td id="LC3523" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3524"></td>
          <td id="LC3524" class="blob-code blob-code-inner js-file-line">      ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Performance checkpoint<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3525"></td>
          <td id="LC3525" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!m_data-&gt;<span class="pl-c1">checkpointId</span>().<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L3526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3526"></td>
          <td id="LC3526" class="blob-code blob-code-inner js-file-line">        ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> [<span class="pl-pds">&quot;</span></span>) &lt;&lt; m_data-&gt;<span class="pl-c1">checkpointId</span>().<span class="pl-c1">c_str</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3527"></td>
          <td id="LC3527" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3528"></td>
          <td id="LC3528" class="blob-code blob-code-inner js-file-line">      ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> for block [<span class="pl-pds">&quot;</span></span>) &lt;&lt; m_data-&gt;<span class="pl-c1">blockName</span>()-&gt;<span class="pl-c1">c_str</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>] : [<span class="pl-pds">&quot;</span></span>) &lt;&lt;</td>
        </tr>
        <tr>
          <td id="L3529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3529"></td>
          <td id="LC3529" class="blob-code blob-code-inner js-file-line">         *m_data-&gt;<span class="pl-c1">performanceTracker</span>();</td>
        </tr>
        <tr>
          <td id="L3530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3530"></td>
          <td id="LC3530" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (!ELPP-&gt;<span class="pl-c1">hasFlag</span>(LoggingFlag::DisablePerformanceTrackingCheckpointComparison)</td>
        </tr>
        <tr>
          <td id="L3531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3531"></td>
          <td id="LC3531" class="blob-code blob-code-inner js-file-line">          &amp;&amp; m_data-&gt;<span class="pl-c1">performanceTracker</span>()-&gt;<span class="pl-smi">m_hasChecked</span>) {</td>
        </tr>
        <tr>
          <td id="L3532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3532"></td>
          <td id="LC3532" class="blob-code blob-code-inner js-file-line">        ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> ([<span class="pl-pds">&quot;</span></span>) &lt;&lt; *m_data-&gt;<span class="pl-c1">formattedTimeTaken</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>] from <span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3533"></td>
          <td id="LC3533" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (m_data-&gt;<span class="pl-c1">performanceTracker</span>()-&gt;<span class="pl-smi">m_lastCheckpointId</span>.<span class="pl-c1">empty</span>()) {</td>
        </tr>
        <tr>
          <td id="L3534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3534"></td>
          <td id="LC3534" class="blob-code blob-code-inner js-file-line">          ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>last checkpoint<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3535"></td>
          <td id="LC3535" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3536"></td>
          <td id="LC3536" class="blob-code blob-code-inner js-file-line">          ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>checkpoint &#39;<span class="pl-pds">&quot;</span></span>) &lt;&lt; m_data-&gt;<span class="pl-c1">performanceTracker</span>()-&gt;<span class="pl-smi">m_lastCheckpointId</span>.<span class="pl-c1">c_str</span>() &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3537"></td>
          <td id="LC3537" class="blob-code blob-code-inner js-file-line">        }</td>
        </tr>
        <tr>
          <td id="L3538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3538"></td>
          <td id="LC3538" class="blob-code blob-code-inner js-file-line">        ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3539"></td>
          <td id="LC3539" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
        </tr>
        <tr>
          <td id="L3540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3540"></td>
          <td id="LC3540" class="blob-code blob-code-inner js-file-line">        ss &lt;&lt; <span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
        </tr>
        <tr>
          <td id="L3541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3541"></td>
          <td id="LC3541" class="blob-code blob-code-inner js-file-line">      }</td>
        </tr>
        <tr>
          <td id="L3542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3542"></td>
          <td id="LC3542" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3543"></td>
          <td id="LC3543" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">el::base::Writer</span>(m_data-&gt;<span class="pl-c1">performanceTracker</span>()-&gt;<span class="pl-c1">level</span>(), m_data-&gt;<span class="pl-c1">file</span>(), m_data-&gt;<span class="pl-c1">line</span>(), m_data-&gt;<span class="pl-c1">func</span>()).<span class="pl-c1">construct</span>(<span class="pl-c1">1</span>,</td>
        </tr>
        <tr>
          <td id="L3544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3544"></td>
          <td id="LC3544" class="blob-code blob-code-inner js-file-line">        m_data-&gt;<span class="pl-c1">loggerId</span>().<span class="pl-c1">c_str</span>()) &lt;&lt; ss.<span class="pl-c1">str</span>();</td>
        </tr>
        <tr>
          <td id="L3545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3545"></td>
          <td id="LC3545" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3546"></td>
          <td id="LC3546" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3547"></td>
          <td id="LC3547" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">const</span> PerformanceTrackingData* m_data;</td>
        </tr>
        <tr>
          <td id="L3548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3548"></td>
          <td id="LC3548" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3549"></td>
          <td id="LC3549" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L3550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3550"></td>
          <td id="LC3550" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">const</span> std::string* <span class="pl-en">PerformanceTrackingData::blockName</span>() <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3551"></td>
          <td id="LC3551" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">const_cast</span>&lt;<span class="pl-k">const</span> std::string*&gt;(&amp;m_performanceTracker-&gt;<span class="pl-smi">m_blockName</span>);</td>
        </tr>
        <tr>
          <td id="L3552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3552"></td>
          <td id="LC3552" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3553"></td>
          <td id="LC3553" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>* <span class="pl-en">PerformanceTrackingData::startTime</span>() <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3554"></td>
          <td id="LC3554" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">const_cast</span>&lt;<span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>*&gt;(&amp;m_performanceTracker-&gt;<span class="pl-smi">m_startTime</span>);</td>
        </tr>
        <tr>
          <td id="L3555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3555"></td>
          <td id="LC3555" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3556"></td>
          <td id="LC3556" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>* <span class="pl-en">PerformanceTrackingData::endTime</span>() <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3557"></td>
          <td id="LC3557" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">const_cast</span>&lt;<span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>*&gt;(&amp;m_performanceTracker-&gt;<span class="pl-smi">m_endTime</span>);</td>
        </tr>
        <tr>
          <td id="L3558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3558"></td>
          <td id="LC3558" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3559"></td>
          <td id="LC3559" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>* <span class="pl-en">PerformanceTrackingData::lastCheckpointTime</span>() <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3560"></td>
          <td id="LC3560" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">const_cast</span>&lt;<span class="pl-k">const</span> <span class="pl-k">struct</span> <span class="pl-en">timeval</span>*&gt;(&amp;m_performanceTracker-&gt;<span class="pl-smi">m_lastCheckpointTime</span>);</td>
        </tr>
        <tr>
          <td id="L3561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3561"></td>
          <td id="LC3561" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3562"></td>
          <td id="LC3562" class="blob-code blob-code-inner js-file-line"><span class="pl-k">inline</span> <span class="pl-k">const</span> std::string&amp; <span class="pl-en">PerformanceTrackingData::loggerId</span>(<span class="pl-k">void</span>) <span class="pl-k">const</span> {</td>
        </tr>
        <tr>
          <td id="L3563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3563"></td>
          <td id="LC3563" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> m_performanceTracker-&gt;<span class="pl-smi">m_loggerId</span>;</td>
        </tr>
        <tr>
          <td id="L3564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3564"></td>
          <td id="LC3564" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L3565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3565"></td>
          <td id="LC3565" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</span></td>
        </tr>
        <tr>
          <td id="L3566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3566"></td>
          <td id="LC3566" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {</td>
        </tr>
        <tr>
          <td id="L3567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3567"></td>
          <td id="LC3567" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Contains some internal debugging tools like crash handler and stack tracer</span></td>
        </tr>
        <tr>
          <td id="L3568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3568"></td>
          <td id="LC3568" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">debug</span> {</td>
        </tr>
        <tr>
          <td id="L3569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3569"></td>
          <td id="LC3569" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_CRASH_LOG)</td>
        </tr>
        <tr>
          <td id="L3570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3570"></td>
          <td id="LC3570" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">StackTrace</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L3571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3571"></td>
          <td id="LC3571" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3572"></td>
          <td id="LC3572" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-c1">kMaxStack</span> = <span class="pl-c1">64</span>;</td>
        </tr>
        <tr>
          <td id="L3573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3573"></td>
          <td id="LC3573" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-c1">kStackStart</span> = <span class="pl-c1">2</span>;  <span class="pl-c"><span class="pl-c">//</span> We want to skip c&#39;tor and StackTrace::generateNew()</span></td>
        </tr>
        <tr>
          <td id="L3574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3574"></td>
          <td id="LC3574" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">class</span> <span class="pl-en">StackTraceEntry</span> {</td>
        </tr>
        <tr>
          <td id="L3575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3575"></td>
          <td id="LC3575" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3576"></td>
          <td id="LC3576" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">StackTraceEntry</span>(std::<span class="pl-c1">size_t</span> index, <span class="pl-k">const</span> std::string&amp; loc, <span class="pl-k">const</span> std::string&amp; demang, <span class="pl-k">const</span> std::string&amp; hex,</td>
        </tr>
        <tr>
          <td id="L3577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3577"></td>
          <td id="LC3577" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">const</span> std::string&amp; addr);</td>
        </tr>
        <tr>
          <td id="L3578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3578"></td>
          <td id="LC3578" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">StackTraceEntry</span>(std::<span class="pl-c1">size_t</span> index, <span class="pl-k">const</span> std::string&amp; loc) :</td>
        </tr>
        <tr>
          <td id="L3579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3579"></td>
          <td id="LC3579" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">m_index</span>(index),</td>
        </tr>
        <tr>
          <td id="L3580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3580"></td>
          <td id="LC3580" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">m_location</span>(loc) {</td>
        </tr>
        <tr>
          <td id="L3581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3581"></td>
          <td id="LC3581" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3582"></td>
          <td id="LC3582" class="blob-code blob-code-inner js-file-line">    std::<span class="pl-c1">size_t</span> m_index;</td>
        </tr>
        <tr>
          <td id="L3583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3583"></td>
          <td id="LC3583" class="blob-code blob-code-inner js-file-line">    std::string m_location;</td>
        </tr>
        <tr>
          <td id="L3584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3584"></td>
          <td id="LC3584" class="blob-code blob-code-inner js-file-line">    std::string m_demangled;</td>
        </tr>
        <tr>
          <td id="L3585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3585"></td>
          <td id="LC3585" class="blob-code blob-code-inner js-file-line">    std::string m_hex;</td>
        </tr>
        <tr>
          <td id="L3586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3586"></td>
          <td id="LC3586" class="blob-code blob-code-inner js-file-line">    std::string m_addr;</td>
        </tr>
        <tr>
          <td id="L3587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3587"></td>
          <td id="LC3587" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">friend</span> std::ostream&amp; <span class="pl-k">operator</span>&lt;&lt;(std::ostream&amp; ss, <span class="pl-k">const</span> StackTraceEntry&amp; si);</td>
        </tr>
        <tr>
          <td id="L3588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3588"></td>
          <td id="LC3588" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3589"></td>
          <td id="LC3589" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3590"></td>
          <td id="LC3590" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">StackTraceEntry</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3591"></td>
          <td id="LC3591" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L3592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3592"></td>
          <td id="LC3592" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3593"></td>
          <td id="LC3593" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">StackTrace</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3594"></td>
          <td id="LC3594" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">generateNew</span>();</td>
        </tr>
        <tr>
          <td id="L3595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3595"></td>
          <td id="LC3595" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3596"></td>
          <td id="LC3596" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3597"></td>
          <td id="LC3597" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~StackTrace</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3598"></td>
          <td id="LC3598" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3599"></td>
          <td id="LC3599" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3600"></td>
          <td id="LC3600" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">inline</span> std::vector&lt;StackTraceEntry&gt;&amp; <span class="pl-en">getLatestStack</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3601"></td>
          <td id="LC3601" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> m_stack;</td>
        </tr>
        <tr>
          <td id="L3602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3602"></td>
          <td id="LC3602" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3603"></td>
          <td id="LC3603" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3604"></td>
          <td id="LC3604" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">friend</span> std::ostream&amp; <span class="pl-k">operator</span>&lt;&lt;(std::ostream&amp; os, <span class="pl-k">const</span> StackTrace&amp; st);</td>
        </tr>
        <tr>
          <td id="L3605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3605"></td>
          <td id="LC3605" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3606"></td>
          <td id="LC3606" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3607"></td>
          <td id="LC3607" class="blob-code blob-code-inner js-file-line">  std::vector&lt;StackTraceEntry&gt; m_stack;</td>
        </tr>
        <tr>
          <td id="L3608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3608"></td>
          <td id="LC3608" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3609"></td>
          <td id="LC3609" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">generateNew</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3610"></td>
          <td id="LC3610" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3611"></td>
          <td id="LC3611" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Handles unexpected crashes</span></td>
        </tr>
        <tr>
          <td id="L3612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3612"></td>
          <td id="LC3612" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">CrashHandler</span> : base::NoCopy {</td>
        </tr>
        <tr>
          <td id="L3613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3613"></td>
          <td id="LC3613" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3614"></td>
          <td id="LC3614" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">typedef</span> <span class="pl-en">void</span> (*Handler)(<span class="pl-k">int</span>);</td>
        </tr>
        <tr>
          <td id="L3615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3615"></td>
          <td id="LC3615" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3616"></td>
          <td id="LC3616" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">CrashHandler</span>(<span class="pl-k">bool</span> useDefault);</td>
        </tr>
        <tr>
          <td id="L3617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3617"></td>
          <td id="LC3617" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">CrashHandler</span>(<span class="pl-k">const</span> Handler&amp; cHandler) {</td>
        </tr>
        <tr>
          <td id="L3618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3618"></td>
          <td id="LC3618" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">setHandler</span>(cHandler);</td>
        </tr>
        <tr>
          <td id="L3619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3619"></td>
          <td id="LC3619" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3620"></td>
          <td id="LC3620" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">void</span> <span class="pl-en">setHandler</span>(<span class="pl-k">const</span> Handler&amp; cHandler);</td>
        </tr>
        <tr>
          <td id="L3621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3621"></td>
          <td id="LC3621" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3622"></td>
          <td id="LC3622" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3623"></td>
          <td id="LC3623" class="blob-code blob-code-inner js-file-line">  Handler m_handler;</td>
        </tr>
        <tr>
          <td id="L3624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3624"></td>
          <td id="LC3624" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3625"></td>
          <td id="LC3625" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3626"></td>
          <td id="LC3626" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">CrashHandler</span> {</td>
        </tr>
        <tr>
          <td id="L3627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3627"></td>
          <td id="LC3627" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3628"></td>
          <td id="LC3628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">explicit</span> <span class="pl-en">CrashHandler</span>(<span class="pl-k">bool</span>) {}</td>
        </tr>
        <tr>
          <td id="L3629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3629"></td>
          <td id="LC3629" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3630"></td>
          <td id="LC3630" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_CRASH_LOG)</span></td>
        </tr>
        <tr>
          <td id="L3631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3631"></td>
          <td id="LC3631" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace debug</span></td>
        </tr>
        <tr>
          <td id="L3632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3632"></td>
          <td id="LC3632" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace base</span></td>
        </tr>
        <tr>
          <td id="L3633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3633"></td>
          <td id="LC3633" class="blob-code blob-code-inner js-file-line"><span class="pl-k">extern</span> base::debug::CrashHandler elCrashHandler;</td>
        </tr>
        <tr>
          <td id="L3634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3634"></td>
          <td id="LC3634" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">MAKE_LOGGABLE</span>(<span class="pl-v">ClassType, ClassInstance, OutputStreamInstance</span>) \</td>
        </tr>
        <tr>
          <td id="L3635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3635"></td>
          <td id="LC3635" class="blob-code blob-code-inner js-file-line">el::base::type::<span class="pl-c1">ostream_t</span>&amp; <span class="pl-k">operator</span>&lt;&lt;(el::base::type::<span class="pl-c1">ostream_t</span>&amp; OutputStreamInstance, <span class="pl-k">const</span> ClassType&amp; ClassInstance)</td>
        </tr>
        <tr>
          <td id="L3636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3636"></td>
          <td id="LC3636" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Initializes syslog with process ID, options and facility. calls closelog() on d&#39;tor</span></td>
        </tr>
        <tr>
          <td id="L3637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3637"></td>
          <td id="LC3637" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">SysLogInitializer</span> {</td>
        </tr>
        <tr>
          <td id="L3638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3638"></td>
          <td id="LC3638" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3639"></td>
          <td id="LC3639" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">SysLogInitializer</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* processIdent, <span class="pl-k">int</span> options = <span class="pl-c1">0</span>, <span class="pl-k">int</span> facility = <span class="pl-c1">0</span>) {</td>
        </tr>
        <tr>
          <td id="L3640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3640"></td>
          <td id="LC3640" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_SYSLOG)</td>
        </tr>
        <tr>
          <td id="L3641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3641"></td>
          <td id="LC3641" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">void</span>)base::consts::<span class="pl-c1">kSysLogLoggerId</span>;</td>
        </tr>
        <tr>
          <td id="L3642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3642"></td>
          <td id="LC3642" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">openlog</span>(processIdent, options, facility);</td>
        </tr>
        <tr>
          <td id="L3643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3643"></td>
          <td id="LC3643" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3644"></td>
          <td id="LC3644" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_UNUSED</span>(processIdent);</td>
        </tr>
        <tr>
          <td id="L3645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3645"></td>
          <td id="LC3645" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_UNUSED</span>(options);</td>
        </tr>
        <tr>
          <td id="L3646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3646"></td>
          <td id="LC3646" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">ELPP_UNUSED</span>(facility);</td>
        </tr>
        <tr>
          <td id="L3647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3647"></td>
          <td id="LC3647" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_SYSLOG)</span></td>
        </tr>
        <tr>
          <td id="L3648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3648"></td>
          <td id="LC3648" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3649"></td>
          <td id="LC3649" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">virtual</span> <span class="pl-en">~SysLogInitializer</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3650"></td>
          <td id="LC3650" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_SYSLOG)</td>
        </tr>
        <tr>
          <td id="L3651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3651"></td>
          <td id="LC3651" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">closelog</span>();</td>
        </tr>
        <tr>
          <td id="L3652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3652"></td>
          <td id="LC3652" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_SYSLOG)</span></td>
        </tr>
        <tr>
          <td id="L3653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3653"></td>
          <td id="LC3653" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3654"></td>
          <td id="LC3654" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3655"></td>
          <td id="LC3655" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_INITIALIZE_SYSLOG</span>(<span class="pl-v">id, opt, fac</span>) el::SysLogInitializer <span class="pl-en">elSyslogInit</span>(id, opt, fac)</td>
        </tr>
        <tr>
          <td id="L3656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3656"></td>
          <td id="LC3656" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Static helpers for developers</span></td>
        </tr>
        <tr>
          <td id="L3657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3657"></td>
          <td id="LC3657" class="blob-code blob-code-inner js-file-line">class Helpers : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L3658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3658"></td>
          <td id="LC3658" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3659"></td>
          <td id="LC3659" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Shares logging repository (base::Storage)</span></td>
        </tr>
        <tr>
          <td id="L3660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3660"></td>
          <td id="LC3660" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">setStorage</span>(base::type::StoragePointer storage) {</td>
        </tr>
        <tr>
          <td id="L3661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3661"></td>
          <td id="LC3661" class="blob-code blob-code-inner js-file-line">    ELPP = storage;</td>
        </tr>
        <tr>
          <td id="L3662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3662"></td>
          <td id="LC3662" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3663"></td>
          <td id="LC3663" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return Main storage repository</span></td>
        </tr>
        <tr>
          <td id="L3664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3664"></td>
          <td id="LC3664" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> base::type::StoragePointer <span class="pl-smi">storage</span>() {</td>
        </tr>
        <tr>
          <td id="L3665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3665"></td>
          <td id="LC3665" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP;</td>
        </tr>
        <tr>
          <td id="L3666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3666"></td>
          <td id="LC3666" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3667"></td>
          <td id="LC3667" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets application arguments and figures out whats active for logging and whats not.</span></td>
        </tr>
        <tr>
          <td id="L3668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3668"></td>
          <td id="LC3668" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">setArgs</span>(<span class="pl-k">int</span> argc, <span class="pl-k">char</span>** argv) {</td>
        </tr>
        <tr>
          <td id="L3669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3669"></td>
          <td id="LC3669" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">setApplicationArguments</span>(argc, argv);</td>
        </tr>
        <tr>
          <td id="L3670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3670"></td>
          <td id="LC3670" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3671"></td>
          <td id="LC3671" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @copydoc setArgs(int argc, char** argv)</span></td>
        </tr>
        <tr>
          <td id="L3672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3672"></td>
          <td id="LC3672" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">setArgs</span>(<span class="pl-k">int</span> argc, <span class="pl-k">const</span> <span class="pl-k">char</span>** argv) {</td>
        </tr>
        <tr>
          <td id="L3673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3673"></td>
          <td id="LC3673" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">setApplicationArguments</span>(argc, <span class="pl-k">const_cast</span>&lt;<span class="pl-k">char</span>**&gt;(argv));</td>
        </tr>
        <tr>
          <td id="L3674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3674"></td>
          <td id="LC3674" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3675"></td>
          <td id="LC3675" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets thread name for current thread. Requires std::thread</span></td>
        </tr>
        <tr>
          <td id="L3676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3676"></td>
          <td id="LC3676" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">setThreadName</span>(<span class="pl-k">const</span> std::string&amp; name) {</td>
        </tr>
        <tr>
          <td id="L3677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3677"></td>
          <td id="LC3677" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">setThreadName</span>(name);</td>
        </tr>
        <tr>
          <td id="L3678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3678"></td>
          <td id="LC3678" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3679"></td>
          <td id="LC3679" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> std::string <span class="pl-smi">getThreadName</span>() {</td>
        </tr>
        <tr>
          <td id="L3680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3680"></td>
          <td id="LC3680" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">getThreadName</span>(<span class="pl-c1">base::threading::getCurrentThreadId</span>());</td>
        </tr>
        <tr>
          <td id="L3681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3681"></td>
          <td id="LC3681" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3682"></td>
          <td id="LC3682" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_CRASH_LOG)</td>
        </tr>
        <tr>
          <td id="L3683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3683"></td>
          <td id="LC3683" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Overrides default crash handler and installs custom handler.</span></td>
        </tr>
        <tr>
          <td id="L3684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3684"></td>
          <td id="LC3684" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param crashHandler A functor with no return type that takes single int argument.</span></td>
        </tr>
        <tr>
          <td id="L3685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3685"></td>
          <td id="LC3685" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        Handler is a typedef with specification: void (*Handler)(int)</span></td>
        </tr>
        <tr>
          <td id="L3686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3686"></td>
          <td id="LC3686" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">setCrashHandler</span>(<span class="pl-k">const</span> el::base::debug::CrashHandler::Handler&amp; crashHandler) {</td>
        </tr>
        <tr>
          <td id="L3687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3687"></td>
          <td id="LC3687" class="blob-code blob-code-inner js-file-line">    el::elCrashHandler.<span class="pl-c1">setHandler</span>(crashHandler);</td>
        </tr>
        <tr>
          <td id="L3688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3688"></td>
          <td id="LC3688" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3689"></td>
          <td id="LC3689" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Abort due to crash with signal in parameter</span></td>
        </tr>
        <tr>
          <td id="L3690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3690"></td>
          <td id="LC3690" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param sig Crash signal</span></td>
        </tr>
        <tr>
          <td id="L3691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3691"></td>
          <td id="LC3691" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">crashAbort</span>(<span class="pl-k">int</span> sig, <span class="pl-k">const</span> <span class="pl-k">char</span>* sourceFile = <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-k">unsigned</span> <span class="pl-k">int</span> <span class="pl-k">long</span> line = <span class="pl-c1">0</span>);</td>
        </tr>
        <tr>
          <td id="L3692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3692"></td>
          <td id="LC3692" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Logs reason of crash as per sig</span></td>
        </tr>
        <tr>
          <td id="L3693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3693"></td>
          <td id="LC3693" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param sig Crash signal</span></td>
        </tr>
        <tr>
          <td id="L3694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3694"></td>
          <td id="LC3694" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param stackTraceIfAvailable Includes stack trace if available</span></td>
        </tr>
        <tr>
          <td id="L3695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3695"></td>
          <td id="LC3695" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param level Logging level</span></td>
        </tr>
        <tr>
          <td id="L3696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3696"></td>
          <td id="LC3696" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param logger Logger to use for logging</span></td>
        </tr>
        <tr>
          <td id="L3697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3697"></td>
          <td id="LC3697" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-smi">logCrashReason</span>(<span class="pl-k">int</span> sig, <span class="pl-k">bool</span> stackTraceIfAvailable = <span class="pl-c1">false</span>,</td>
        </tr>
        <tr>
          <td id="L3698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3698"></td>
          <td id="LC3698" class="blob-code blob-code-inner js-file-line">                             Level level = Level::Fatal, <span class="pl-k">const</span> <span class="pl-k">char</span>* logger = base::consts::<span class="pl-c1">kDefaultLoggerId</span>);</td>
        </tr>
        <tr>
          <td id="L3699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3699"></td>
          <td id="LC3699" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_CRASH_LOG)</span></td>
        </tr>
        <tr>
          <td id="L3700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3700"></td>
          <td id="LC3700" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Installs pre rollout callback, this callback is triggered when log file is about to be rolled out</span></td>
        </tr>
        <tr>
          <td id="L3701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3701"></td>
          <td id="LC3701" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        (can be useful for backing up)</span></td>
        </tr>
        <tr>
          <td id="L3702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3702"></td>
          <td id="LC3702" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">installPreRollOutCallback</span>(<span class="pl-k">const</span> PreRollOutCallback&amp; callback) {</td>
        </tr>
        <tr>
          <td id="L3703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3703"></td>
          <td id="LC3703" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">setPreRollOutCallback</span>(callback);</td>
        </tr>
        <tr>
          <td id="L3704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3704"></td>
          <td id="LC3704" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3705"></td>
          <td id="LC3705" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Uninstalls pre rollout callback</span></td>
        </tr>
        <tr>
          <td id="L3706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3706"></td>
          <td id="LC3706" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">uninstallPreRollOutCallback</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3707"></td>
          <td id="LC3707" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">unsetPreRollOutCallback</span>();</td>
        </tr>
        <tr>
          <td id="L3708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3708"></td>
          <td id="LC3708" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3709"></td>
          <td id="LC3709" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Installs post log dispatch callback, this callback is triggered when log is dispatched</span></td>
        </tr>
        <tr>
          <td id="L3710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3710"></td>
          <td id="LC3710" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3711"></td>
          <td id="LC3711" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-smi">installLogDispatchCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3712"></td>
          <td id="LC3712" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-smi">installLogDispatchCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3713"></td>
          <td id="LC3713" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3714"></td>
          <td id="LC3714" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Uninstalls log dispatch callback</span></td>
        </tr>
        <tr>
          <td id="L3715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3715"></td>
          <td id="LC3715" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3716"></td>
          <td id="LC3716" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">uninstallLogDispatchCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3717"></td>
          <td id="LC3717" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-smi">uninstallLogDispatchCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3718"></td>
          <td id="LC3718" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3719"></td>
          <td id="LC3719" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3720"></td>
          <td id="LC3720" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> T* <span class="pl-c1">logDispatchCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3721"></td>
          <td id="LC3721" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-smi">logDispatchCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3722"></td>
          <td id="LC3722" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3723"></td>
          <td id="LC3723" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</td>
        </tr>
        <tr>
          <td id="L3724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3724"></td>
          <td id="LC3724" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Installs post performance tracking callback, this callback is triggered when performance tracking is finished</span></td>
        </tr>
        <tr>
          <td id="L3725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3725"></td>
          <td id="LC3725" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3726"></td>
          <td id="LC3726" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-smi">installPerformanceTrackingCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3727"></td>
          <td id="LC3727" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-smi">installPerformanceTrackingCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3728"></td>
          <td id="LC3728" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3729"></td>
          <td id="LC3729" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Uninstalls post performance tracking handler</span></td>
        </tr>
        <tr>
          <td id="L3730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3730"></td>
          <td id="LC3730" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3731"></td>
          <td id="LC3731" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">uninstallPerformanceTrackingCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3732"></td>
          <td id="LC3732" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-smi">uninstallPerformanceTrackingCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3733"></td>
          <td id="LC3733" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3734"></td>
          <td id="LC3734" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3735"></td>
          <td id="LC3735" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> T* <span class="pl-c1">performanceTrackingCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3736"></td>
          <td id="LC3736" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-smi">performanceTrackingCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3737"></td>
          <td id="LC3737" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3738"></td>
          <td id="LC3738" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_FEATURE_ALL) || defined(ELPP_FEATURE_PERFORMANCE_TRACKING)</span></td>
        </tr>
        <tr>
          <td id="L3739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3739"></td>
          <td id="LC3739" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Converts template to std::string - useful for loggable classes to log containers within log(std::ostream&amp;) const</span></td>
        </tr>
        <tr>
          <td id="L3740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3740"></td>
          <td id="LC3740" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3741"></td>
          <td id="LC3741" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::string <span class="pl-smi">convertTemplateToStdString</span>(<span class="pl-k">const</span> T&amp; templ) {</td>
        </tr>
        <tr>
          <td id="L3742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3742"></td>
          <td id="LC3742" class="blob-code blob-code-inner js-file-line">    el::Logger* logger =</td>
        </tr>
        <tr>
          <td id="L3743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3743"></td>
          <td id="LC3743" class="blob-code blob-code-inner js-file-line">      ELPP-&gt;<span class="pl-c1">registeredLoggers</span>()-&gt;<span class="pl-c1">get</span>(el::base::consts::<span class="pl-c1">kDefaultLoggerId</span>);</td>
        </tr>
        <tr>
          <td id="L3744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3744"></td>
          <td id="LC3744" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (logger == <span class="pl-c1">nullptr</span>) {</td>
        </tr>
        <tr>
          <td id="L3745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3745"></td>
          <td id="LC3745" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">std::string</span>();</td>
        </tr>
        <tr>
          <td id="L3746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3746"></td>
          <td id="LC3746" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3747"></td>
          <td id="LC3747" class="blob-code blob-code-inner js-file-line">    base::MessageBuilder b;</td>
        </tr>
        <tr>
          <td id="L3748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3748"></td>
          <td id="LC3748" class="blob-code blob-code-inner js-file-line">    b.<span class="pl-c1">initialize</span>(logger);</td>
        </tr>
        <tr>
          <td id="L3749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3749"></td>
          <td id="LC3749" class="blob-code blob-code-inner js-file-line">    logger-&gt;<span class="pl-c1">acquireLock</span>();</td>
        </tr>
        <tr>
          <td id="L3750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3750"></td>
          <td id="LC3750" class="blob-code blob-code-inner js-file-line">    b &lt;&lt; templ;</td>
        </tr>
        <tr>
          <td id="L3751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3751"></td>
          <td id="LC3751" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L3752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3752"></td>
          <td id="LC3752" class="blob-code blob-code-inner js-file-line">    std::string s = <span class="pl-c1">std::string</span>(logger-&gt;<span class="pl-c1">stream</span>().<span class="pl-c1">str</span>().<span class="pl-c1">begin</span>(), logger-&gt;<span class="pl-c1">stream</span>().<span class="pl-c1">str</span>().<span class="pl-c1">end</span>());</td>
        </tr>
        <tr>
          <td id="L3753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3753"></td>
          <td id="LC3753" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3754"></td>
          <td id="LC3754" class="blob-code blob-code-inner js-file-line">    std::string s = logger-&gt;<span class="pl-c1">stream</span>().<span class="pl-c1">str</span>();</td>
        </tr>
        <tr>
          <td id="L3755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3755"></td>
          <td id="LC3755" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L3756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3756"></td>
          <td id="LC3756" class="blob-code blob-code-inner js-file-line">    logger-&gt;<span class="pl-c1">stream</span>().<span class="pl-c1">str</span>(<span class="pl-c1">ELPP_LITERAL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));</td>
        </tr>
        <tr>
          <td id="L3757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3757"></td>
          <td id="LC3757" class="blob-code blob-code-inner js-file-line">    logger-&gt;<span class="pl-c1">releaseLock</span>();</td>
        </tr>
        <tr>
          <td id="L3758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3758"></td>
          <td id="LC3758" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> s;</td>
        </tr>
        <tr>
          <td id="L3759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3759"></td>
          <td id="LC3759" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3760"></td>
          <td id="LC3760" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns command line arguments (pointer) provided to easylogging++</span></td>
        </tr>
        <tr>
          <td id="L3761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3761"></td>
          <td id="LC3761" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">const</span> el::base::utils::CommandLineArgs* <span class="pl-c1">commandLineArgs</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3762"></td>
          <td id="LC3762" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">commandLineArgs</span>();</td>
        </tr>
        <tr>
          <td id="L3763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3763"></td>
          <td id="LC3763" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3764"></td>
          <td id="LC3764" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reserve space for custom format specifiers for performance</span></td>
        </tr>
        <tr>
          <td id="L3765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3765"></td>
          <td id="LC3765" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @see std::vector::reserve</span></td>
        </tr>
        <tr>
          <td id="L3766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3766"></td>
          <td id="LC3766" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">reserveCustomFormatSpecifiers</span>(std::<span class="pl-c1">size_t</span> size) {</td>
        </tr>
        <tr>
          <td id="L3767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3767"></td>
          <td id="LC3767" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-smi">m_customFormatSpecifiers</span>.<span class="pl-c1">reserve</span>(size);</td>
        </tr>
        <tr>
          <td id="L3768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3768"></td>
          <td id="LC3768" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3769"></td>
          <td id="LC3769" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Installs user defined format specifier and handler</span></td>
        </tr>
        <tr>
          <td id="L3770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3770"></td>
          <td id="LC3770" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">installCustomFormatSpecifier</span>(<span class="pl-k">const</span> CustomFormatSpecifier&amp; customFormatSpecifier) {</td>
        </tr>
        <tr>
          <td id="L3771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3771"></td>
          <td id="LC3771" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">installCustomFormatSpecifier</span>(customFormatSpecifier);</td>
        </tr>
        <tr>
          <td id="L3772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3772"></td>
          <td id="LC3772" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3773"></td>
          <td id="LC3773" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Uninstalls user defined format specifier and handler</span></td>
        </tr>
        <tr>
          <td id="L3774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3774"></td>
          <td id="LC3774" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-smi">uninstallCustomFormatSpecifier</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* formatSpecifier) {</td>
        </tr>
        <tr>
          <td id="L3775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3775"></td>
          <td id="LC3775" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">uninstallCustomFormatSpecifier</span>(formatSpecifier);</td>
        </tr>
        <tr>
          <td id="L3776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3776"></td>
          <td id="LC3776" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3777"></td>
          <td id="LC3777" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns true if custom format specifier is installed</span></td>
        </tr>
        <tr>
          <td id="L3778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3778"></td>
          <td id="LC3778" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-smi">hasCustomFormatSpecifier</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* formatSpecifier) {</td>
        </tr>
        <tr>
          <td id="L3779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3779"></td>
          <td id="LC3779" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">hasCustomFormatSpecifier</span>(formatSpecifier);</td>
        </tr>
        <tr>
          <td id="L3780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3780"></td>
          <td id="LC3780" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3781"></td>
          <td id="LC3781" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-smi">validateFileRolling</span>(Logger* logger, Level level) {</td>
        </tr>
        <tr>
          <td id="L3782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3782"></td>
          <td id="LC3782" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ELPP == <span class="pl-c1">nullptr</span> || logger == <span class="pl-c1">nullptr</span>) <span class="pl-k">return</span>;</td>
        </tr>
        <tr>
          <td id="L3783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3783"></td>
          <td id="LC3783" class="blob-code blob-code-inner js-file-line">    logger-&gt;<span class="pl-smi">m_typedConfigurations</span>-&gt;<span class="pl-c1">validateFileRolling</span>(level, ELPP-&gt;<span class="pl-c1">preRollOutCallback</span>());</td>
        </tr>
        <tr>
          <td id="L3784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3784"></td>
          <td id="LC3784" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3785"></td>
          <td id="LC3785" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3786"></td>
          <td id="LC3786" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Static helpers to deal with loggers and their configurations</span></td>
        </tr>
        <tr>
          <td id="L3787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3787"></td>
          <td id="LC3787" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">Loggers</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L3788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3788"></td>
          <td id="LC3788" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3789"></td>
          <td id="LC3789" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets existing or registers new logger</span></td>
        </tr>
        <tr>
          <td id="L3790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3790"></td>
          <td id="LC3790" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> Logger* <span class="pl-en">getLogger</span>(<span class="pl-k">const</span> std::string&amp; identity, <span class="pl-k">bool</span> registerIfNotAvailable = <span class="pl-c1">true</span>);</td>
        </tr>
        <tr>
          <td id="L3791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3791"></td>
          <td id="LC3791" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Changes default log builder for future loggers</span></td>
        </tr>
        <tr>
          <td id="L3792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3792"></td>
          <td id="LC3792" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">setDefaultLogBuilder</span>(el::LogBuilderPtr&amp; logBuilderPtr);</td>
        </tr>
        <tr>
          <td id="L3793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3793"></td>
          <td id="LC3793" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Installs logger registration callback, this callback is triggered when new logger is registered</span></td>
        </tr>
        <tr>
          <td id="L3794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3794"></td>
          <td id="LC3794" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3795"></td>
          <td id="LC3795" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">installLoggerRegistrationCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3796"></td>
          <td id="LC3796" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">registeredLoggers</span>()-&gt;<span class="pl-smi">installLoggerRegistrationCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3797"></td>
          <td id="LC3797" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3798"></td>
          <td id="LC3798" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Uninstalls log dispatch callback</span></td>
        </tr>
        <tr>
          <td id="L3799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3799"></td>
          <td id="LC3799" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3800"></td>
          <td id="LC3800" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">uninstallLoggerRegistrationCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3801"></td>
          <td id="LC3801" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">registeredLoggers</span>()-&gt;<span class="pl-smi">uninstallLoggerRegistrationCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3802"></td>
          <td id="LC3802" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3803"></td>
          <td id="LC3803" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">template </span>&lt;<span class="pl-k">typename</span> T&gt;</td>
        </tr>
        <tr>
          <td id="L3804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3804"></td>
          <td id="LC3804" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> T* <span class="pl-en">loggerRegistrationCallback</span>(<span class="pl-k">const</span> std::string&amp; id) {</td>
        </tr>
        <tr>
          <td id="L3805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3805"></td>
          <td id="LC3805" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">registeredLoggers</span>()-&gt;<span class="pl-smi">loggerRegistrationCallback</span>&lt;T&gt;(id);</td>
        </tr>
        <tr>
          <td id="L3806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3806"></td>
          <td id="LC3806" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3807"></td>
          <td id="LC3807" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Unregisters logger - use it only when you know what you are doing, you may unregister</span></td>
        </tr>
        <tr>
          <td id="L3808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3808"></td>
          <td id="LC3808" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/        loggers initialized / used by third-party libs.</span></td>
        </tr>
        <tr>
          <td id="L3809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3809"></td>
          <td id="LC3809" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">unregisterLogger</span>(<span class="pl-k">const</span> std::string&amp; identity);</td>
        </tr>
        <tr>
          <td id="L3810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3810"></td>
          <td id="LC3810" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Whether or not logger with id is registered</span></td>
        </tr>
        <tr>
          <td id="L3811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3811"></td>
          <td id="LC3811" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">hasLogger</span>(<span class="pl-k">const</span> std::string&amp; identity);</td>
        </tr>
        <tr>
          <td id="L3812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3812"></td>
          <td id="LC3812" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures specified logger with new configurations</span></td>
        </tr>
        <tr>
          <td id="L3813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3813"></td>
          <td id="LC3813" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> Logger* <span class="pl-en">reconfigureLogger</span>(Logger* logger, <span class="pl-k">const</span> Configurations&amp; configurations);</td>
        </tr>
        <tr>
          <td id="L3814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3814"></td>
          <td id="LC3814" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures logger with new configurations after looking it up using identity</span></td>
        </tr>
        <tr>
          <td id="L3815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3815"></td>
          <td id="LC3815" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> Logger* <span class="pl-en">reconfigureLogger</span>(<span class="pl-k">const</span> std::string&amp; identity, <span class="pl-k">const</span> Configurations&amp; configurations);</td>
        </tr>
        <tr>
          <td id="L3816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3816"></td>
          <td id="LC3816" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures logger&#39;s single configuration</span></td>
        </tr>
        <tr>
          <td id="L3817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3817"></td>
          <td id="LC3817" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> Logger* <span class="pl-en">reconfigureLogger</span>(<span class="pl-k">const</span> std::string&amp; identity, ConfigurationType configurationType,</td>
        </tr>
        <tr>
          <td id="L3818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3818"></td>
          <td id="LC3818" class="blob-code blob-code-inner js-file-line">                                   <span class="pl-k">const</span> std::string&amp; value);</td>
        </tr>
        <tr>
          <td id="L3819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3819"></td>
          <td id="LC3819" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures all the existing loggers with new configurations</span></td>
        </tr>
        <tr>
          <td id="L3820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3820"></td>
          <td id="LC3820" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">reconfigureAllLoggers</span>(<span class="pl-k">const</span> Configurations&amp; configurations);</td>
        </tr>
        <tr>
          <td id="L3821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3821"></td>
          <td id="LC3821" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures single configuration for all the loggers</span></td>
        </tr>
        <tr>
          <td id="L3822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3822"></td>
          <td id="LC3822" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">reconfigureAllLoggers</span>(ConfigurationType configurationType, <span class="pl-k">const</span> std::string&amp; value) {</td>
        </tr>
        <tr>
          <td id="L3823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3823"></td>
          <td id="LC3823" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">reconfigureAllLoggers</span>(Level::Global, configurationType, value);</td>
        </tr>
        <tr>
          <td id="L3824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3824"></td>
          <td id="LC3824" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3825"></td>
          <td id="LC3825" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Reconfigures single configuration for all the loggers for specified level</span></td>
        </tr>
        <tr>
          <td id="L3826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3826"></td>
          <td id="LC3826" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">reconfigureAllLoggers</span>(Level level, ConfigurationType configurationType,</td>
        </tr>
        <tr>
          <td id="L3827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3827"></td>
          <td id="LC3827" class="blob-code blob-code-inner js-file-line">                                    <span class="pl-k">const</span> std::string&amp; value);</td>
        </tr>
        <tr>
          <td id="L3828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3828"></td>
          <td id="LC3828" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets default configurations. This configuration is used for future (and conditionally for existing) loggers</span></td>
        </tr>
        <tr>
          <td id="L3829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3829"></td>
          <td id="LC3829" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">setDefaultConfigurations</span>(<span class="pl-k">const</span> Configurations&amp; configurations,</td>
        </tr>
        <tr>
          <td id="L3830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3830"></td>
          <td id="LC3830" class="blob-code blob-code-inner js-file-line">                                       <span class="pl-k">bool</span> reconfigureExistingLoggers = <span class="pl-c1">false</span>);</td>
        </tr>
        <tr>
          <td id="L3831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3831"></td>
          <td id="LC3831" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns current default</span></td>
        </tr>
        <tr>
          <td id="L3832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3832"></td>
          <td id="LC3832" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> Configurations* <span class="pl-en">defaultConfigurations</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3833"></td>
          <td id="LC3833" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Returns log stream reference pointer if needed by user</span></td>
        </tr>
        <tr>
          <td id="L3834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3834"></td>
          <td id="LC3834" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> base::LogStreamsReferenceMapPtr <span class="pl-en">logStreamsReference</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3835"></td>
          <td id="LC3835" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Default typed configuration based on existing defaultConf</span></td>
        </tr>
        <tr>
          <td id="L3836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3836"></td>
          <td id="LC3836" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> base::TypedConfigurations <span class="pl-en">defaultTypedConfigurations</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3837"></td>
          <td id="LC3837" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Populates all logger IDs in current repository.</span></td>
        </tr>
        <tr>
          <td id="L3838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3838"></td>
          <td id="LC3838" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @param [out] targetList List of fill up.</span></td>
        </tr>
        <tr>
          <td id="L3839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3839"></td>
          <td id="LC3839" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> std::vector&lt;std::string&gt;* <span class="pl-en">populateAllLoggerIds</span>(std::vector&lt;std::string&gt;* targetList);</td>
        </tr>
        <tr>
          <td id="L3840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3840"></td>
          <td id="LC3840" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets configurations from global configuration file.</span></td>
        </tr>
        <tr>
          <td id="L3841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3841"></td>
          <td id="LC3841" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">configureFromGlobal</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* globalConfigurationFilePath);</td>
        </tr>
        <tr>
          <td id="L3842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3842"></td>
          <td id="LC3842" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Configures loggers using command line arg. Ensure you have already set command line args,</span></td>
        </tr>
        <tr>
          <td id="L3843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3843"></td>
          <td id="LC3843" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @return False if invalid argument or argument with no value provided, true if attempted to configure logger.</span></td>
        </tr>
        <tr>
          <td id="L3844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3844"></td>
          <td id="LC3844" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/         If true is returned that does not mean it has been configured successfully, it only means that it</span></td>
        </tr>
        <tr>
          <td id="L3845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3845"></td>
          <td id="LC3845" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/         has attempted to configure logger using configuration file provided in argument</span></td>
        </tr>
        <tr>
          <td id="L3846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3846"></td>
          <td id="LC3846" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">bool</span> <span class="pl-en">configureFromArg</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* argKey);</td>
        </tr>
        <tr>
          <td id="L3847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3847"></td>
          <td id="LC3847" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Flushes all loggers for all levels - Be careful if you dont know how many loggers are registered</span></td>
        </tr>
        <tr>
          <td id="L3848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3848"></td>
          <td id="LC3848" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">flushAll</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3849"></td>
          <td id="LC3849" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Adds logging flag used internally.</span></td>
        </tr>
        <tr>
          <td id="L3850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3850"></td>
          <td id="LC3850" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">addFlag</span>(LoggingFlag flag) {</td>
        </tr>
        <tr>
          <td id="L3851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3851"></td>
          <td id="LC3851" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">addFlag</span>(flag);</td>
        </tr>
        <tr>
          <td id="L3852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3852"></td>
          <td id="LC3852" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3853"></td>
          <td id="LC3853" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Removes logging flag used internally.</span></td>
        </tr>
        <tr>
          <td id="L3854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3854"></td>
          <td id="LC3854" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">void</span> <span class="pl-en">removeFlag</span>(LoggingFlag flag) {</td>
        </tr>
        <tr>
          <td id="L3855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3855"></td>
          <td id="LC3855" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">removeFlag</span>(flag);</td>
        </tr>
        <tr>
          <td id="L3856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3856"></td>
          <td id="LC3856" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3857"></td>
          <td id="LC3857" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether or not certain flag is active</span></td>
        </tr>
        <tr>
          <td id="L3858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3858"></td>
          <td id="LC3858" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">inline</span> <span class="pl-k">bool</span> <span class="pl-en">hasFlag</span>(LoggingFlag flag) {</td>
        </tr>
        <tr>
          <td id="L3859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3859"></td>
          <td id="LC3859" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ELPP-&gt;<span class="pl-c1">hasFlag</span>(flag);</td>
        </tr>
        <tr>
          <td id="L3860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3860"></td>
          <td id="LC3860" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3861"></td>
          <td id="LC3861" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Adds flag and removes it when scope goes out</span></td>
        </tr>
        <tr>
          <td id="L3862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3862"></td>
          <td id="LC3862" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">class</span> <span class="pl-en">ScopedAddFlag</span> {</td>
        </tr>
        <tr>
          <td id="L3863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3863"></td>
          <td id="LC3863" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3864"></td>
          <td id="LC3864" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">ScopedAddFlag</span>(LoggingFlag flag) : m_flag(flag) {</td>
        </tr>
        <tr>
          <td id="L3865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3865"></td>
          <td id="LC3865" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Loggers::addFlag</span>(m_flag);</td>
        </tr>
        <tr>
          <td id="L3866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3866"></td>
          <td id="LC3866" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3867"></td>
          <td id="LC3867" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">~ScopedAddFlag</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3868"></td>
          <td id="LC3868" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Loggers::removeFlag</span>(m_flag);</td>
        </tr>
        <tr>
          <td id="L3869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3869"></td>
          <td id="LC3869" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3870"></td>
          <td id="LC3870" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3871"></td>
          <td id="LC3871" class="blob-code blob-code-inner js-file-line">    LoggingFlag m_flag;</td>
        </tr>
        <tr>
          <td id="L3872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3872"></td>
          <td id="LC3872" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L3873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3873"></td>
          <td id="LC3873" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Removes flag and add it when scope goes out</span></td>
        </tr>
        <tr>
          <td id="L3874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3874"></td>
          <td id="LC3874" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">class</span> <span class="pl-en">ScopedRemoveFlag</span> {</td>
        </tr>
        <tr>
          <td id="L3875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3875"></td>
          <td id="LC3875" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3876"></td>
          <td id="LC3876" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">ScopedRemoveFlag</span>(LoggingFlag flag) : m_flag(flag) {</td>
        </tr>
        <tr>
          <td id="L3877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3877"></td>
          <td id="LC3877" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Loggers::removeFlag</span>(m_flag);</td>
        </tr>
        <tr>
          <td id="L3878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3878"></td>
          <td id="LC3878" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3879"></td>
          <td id="LC3879" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">~ScopedRemoveFlag</span>(<span class="pl-k">void</span>) {</td>
        </tr>
        <tr>
          <td id="L3880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3880"></td>
          <td id="LC3880" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Loggers::addFlag</span>(m_flag);</td>
        </tr>
        <tr>
          <td id="L3881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3881"></td>
          <td id="LC3881" class="blob-code blob-code-inner js-file-line">    }</td>
        </tr>
        <tr>
          <td id="L3882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3882"></td>
          <td id="LC3882" class="blob-code blob-code-inner js-file-line">   <span class="pl-k">private:</span></td>
        </tr>
        <tr>
          <td id="L3883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3883"></td>
          <td id="LC3883" class="blob-code blob-code-inner js-file-line">    LoggingFlag m_flag;</td>
        </tr>
        <tr>
          <td id="L3884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3884"></td>
          <td id="LC3884" class="blob-code blob-code-inner js-file-line">  };</td>
        </tr>
        <tr>
          <td id="L3885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3885"></td>
          <td id="LC3885" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets hierarchy for logging. Needs to enable logging flag (HierarchicalLogging)</span></td>
        </tr>
        <tr>
          <td id="L3886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3886"></td>
          <td id="LC3886" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">setLoggingLevel</span>(Level level) {</td>
        </tr>
        <tr>
          <td id="L3887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3887"></td>
          <td id="LC3887" class="blob-code blob-code-inner js-file-line">    ELPP-&gt;<span class="pl-c1">setLoggingLevel</span>(level);</td>
        </tr>
        <tr>
          <td id="L3888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3888"></td>
          <td id="LC3888" class="blob-code blob-code-inner js-file-line">  }</td>
        </tr>
        <tr>
          <td id="L3889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3889"></td>
          <td id="LC3889" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets verbose level on the fly</span></td>
        </tr>
        <tr>
          <td id="L3890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3890"></td>
          <td id="LC3890" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">setVerboseLevel</span>(base::type::VerboseLevel level);</td>
        </tr>
        <tr>
          <td id="L3891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3891"></td>
          <td id="LC3891" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Gets current verbose level</span></td>
        </tr>
        <tr>
          <td id="L3892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3892"></td>
          <td id="LC3892" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> base::type::VerboseLevel <span class="pl-en">verboseLevel</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3893"></td>
          <td id="LC3893" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Sets vmodules as specified (on the fly)</span></td>
        </tr>
        <tr>
          <td id="L3894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3894"></td>
          <td id="LC3894" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">setVModules</span>(<span class="pl-k">const</span> <span class="pl-k">char</span>* modules);</td>
        </tr>
        <tr>
          <td id="L3895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3895"></td>
          <td id="LC3895" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Clears vmodules</span></td>
        </tr>
        <tr>
          <td id="L3896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3896"></td>
          <td id="LC3896" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">void</span> <span class="pl-en">clearVModules</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3897"></td>
          <td id="LC3897" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3898"></td>
          <td id="LC3898" class="blob-code blob-code-inner js-file-line"><span class="pl-k">class</span> <span class="pl-en">VersionInfo</span> : base::StaticClass {</td>
        </tr>
        <tr>
          <td id="L3899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3899"></td>
          <td id="LC3899" class="blob-code blob-code-inner js-file-line"> <span class="pl-k">public:</span></td>
        </tr>
        <tr>
          <td id="L3900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3900"></td>
          <td id="LC3900" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Current version number</span></td>
        </tr>
        <tr>
          <td id="L3901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3901"></td>
          <td id="LC3901" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> std::string <span class="pl-en">version</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3902"></td>
          <td id="LC3902" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L3903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3903"></td>
          <td id="LC3903" class="blob-code blob-code-inner js-file-line">  <span class="pl-c"><span class="pl-c">//</span>/ @brief Release date of current version</span></td>
        </tr>
        <tr>
          <td id="L3904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3904"></td>
          <td id="LC3904" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">static</span> <span class="pl-k">const</span> std::string <span class="pl-en">releaseDate</span>(<span class="pl-k">void</span>);</td>
        </tr>
        <tr>
          <td id="L3905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3905"></td>
          <td id="LC3905" class="blob-code blob-code-inner js-file-line">};</td>
        </tr>
        <tr>
          <td id="L3906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3906"></td>
          <td id="LC3906" class="blob-code blob-code-inner js-file-line">}  <span class="pl-c"><span class="pl-c">//</span> namespace el</span></td>
        </tr>
        <tr>
          <td id="L3907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3907"></td>
          <td id="LC3907" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VLOG_IS_ON</td>
        </tr>
        <tr>
          <td id="L3908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3908"></td>
          <td id="LC3908" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Determines whether verbose logging is on for specified level current file.</span></td>
        </tr>
        <tr>
          <td id="L3909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3909"></td>
          <td id="LC3909" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">VLOG_IS_ON</span>(<span class="pl-v">verboseLevel</span>) (ELPP-&gt;<span class="pl-en">vRegistry</span>()-&gt;allowed(verboseLevel, __FILE__))</td>
        </tr>
        <tr>
          <td id="L3910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3910"></td>
          <td id="LC3910" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> TIMED_BLOCK</td>
        </tr>
        <tr>
          <td id="L3911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3911"></td>
          <td id="LC3911" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> TIMED_SCOPE</td>
        </tr>
        <tr>
          <td id="L3912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3912"></td>
          <td id="LC3912" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> TIMED_SCOPE_IF</td>
        </tr>
        <tr>
          <td id="L3913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3913"></td>
          <td id="LC3913" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> TIMED_FUNC</td>
        </tr>
        <tr>
          <td id="L3914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3914"></td>
          <td id="LC3914" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> TIMED_FUNC_IF</td>
        </tr>
        <tr>
          <td id="L3915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3915"></td>
          <td id="LC3915" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_MIN_UNIT</td>
        </tr>
        <tr>
          <td id="L3916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3916"></td>
          <td id="LC3916" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_PERFORMANCE_MICROSECONDS)</td>
        </tr>
        <tr>
          <td id="L3917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3917"></td>
          <td id="LC3917" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_MIN_UNIT</span> el::base::TimestampUnit::Microsecond</td>
        </tr>
        <tr>
          <td id="L3918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3918"></td>
          <td id="LC3918" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3919"></td>
          <td id="LC3919" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_MIN_UNIT</span> el::base::TimestampUnit::Millisecond</td>
        </tr>
        <tr>
          <td id="L3920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3920"></td>
          <td id="LC3920" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> (defined(ELPP_PERFORMANCE_MICROSECONDS))</span></td>
        </tr>
        <tr>
          <td id="L3921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3921"></td>
          <td id="LC3921" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Performance tracked scope. Performance gets written when goes out of scope using</span></td>
        </tr>
        <tr>
          <td id="L3922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3922"></td>
          <td id="LC3922" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/        &#39;performance&#39; logger.</span></td>
        </tr>
        <tr>
          <td id="L3923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3923"></td>
          <td id="LC3923" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L3924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3924"></td>
          <td id="LC3924" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail Please note in order to check the performance at a certain time you can use obj-&gt;checkpoint();</span></td>
        </tr>
        <tr>
          <td id="L3925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3925"></td>
          <td id="LC3925" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @see el::base::PerformanceTracker</span></td>
        </tr>
        <tr>
          <td id="L3926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3926"></td>
          <td id="LC3926" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @see el::base::PerformanceTracker::checkpoint</span></td>
        </tr>
        <tr>
          <td id="L3927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3927"></td>
          <td id="LC3927" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Note: Do not surround this definition with null macro because of obj instance</span></td>
        </tr>
        <tr>
          <td id="L3928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3928"></td>
          <td id="LC3928" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">TIMED_SCOPE_IF</span>(<span class="pl-v">obj, blockname, condition</span>) el::base::type::PerformanceTrackerPtr <span class="pl-en">obj</span>( condition ? \</td>
        </tr>
        <tr>
          <td id="L3929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3929"></td>
          <td id="LC3929" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">new</span> el::base::PerformanceTracker(blockname, ELPP_MIN_UNIT) : nullptr )</td>
        </tr>
        <tr>
          <td id="L3930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3930"></td>
          <td id="LC3930" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">TIMED_SCOPE</span>(<span class="pl-v">obj, blockname</span>) TIMED_SCOPE_IF(obj, blockname, <span class="pl-c1">true</span>)</td>
        </tr>
        <tr>
          <td id="L3931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3931"></td>
          <td id="LC3931" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">TIMED_BLOCK</span>(<span class="pl-v">obj, blockName</span>) <span class="pl-k">for</span> (<span class="pl-k">struct</span> { <span class="pl-k">int</span> i; el::base::type::PerformanceTrackerPtr timer; } obj = { <span class="pl-c1">0</span>, \</td>
        </tr>
        <tr>
          <td id="L3932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3932"></td>
          <td id="LC3932" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">el::base::type::PerformanceTrackerPtr</span>(<span class="pl-k">new</span> <span class="pl-c1">el::base::PerformanceTracker</span>(blockName, ELPP_MIN_UNIT)) }; obj.i &lt; <span class="pl-c1">1</span>; ++obj.i)</td>
        </tr>
        <tr>
          <td id="L3933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3933"></td>
          <td id="LC3933" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Performance tracked function. Performance gets written when goes out of scope using</span></td>
        </tr>
        <tr>
          <td id="L3934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3934"></td>
          <td id="LC3934" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/        &#39;performance&#39; logger.</span></td>
        </tr>
        <tr>
          <td id="L3935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3935"></td>
          <td id="LC3935" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/</span></td>
        </tr>
        <tr>
          <td id="L3936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3936"></td>
          <td id="LC3936" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @detail Please note in order to check the performance at a certain time you can use obj-&gt;checkpoint();</span></td>
        </tr>
        <tr>
          <td id="L3937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3937"></td>
          <td id="LC3937" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @see el::base::PerformanceTracker</span></td>
        </tr>
        <tr>
          <td id="L3938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3938"></td>
          <td id="LC3938" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @see el::base::PerformanceTracker::checkpoint</span></td>
        </tr>
        <tr>
          <td id="L3939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3939"></td>
          <td id="LC3939" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">TIMED_FUNC_IF</span>(<span class="pl-v">obj,condition</span>) TIMED_SCOPE_IF(obj, ELPP_FUNC, condition)</td>
        </tr>
        <tr>
          <td id="L3940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3940"></td>
          <td id="LC3940" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">TIMED_FUNC</span>(<span class="pl-v">obj</span>) TIMED_SCOPE(obj, ELPP_FUNC)</td>
        </tr>
        <tr>
          <td id="L3941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3941"></td>
          <td id="LC3941" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> PERFORMANCE_CHECKPOINT</td>
        </tr>
        <tr>
          <td id="L3942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3942"></td>
          <td id="LC3942" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> PERFORMANCE_CHECKPOINT_WITH_ID</td>
        </tr>
        <tr>
          <td id="L3943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3943"></td>
          <td id="LC3943" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PERFORMANCE_CHECKPOINT</span>(<span class="pl-v">obj</span>) obj-&gt;<span class="pl-en">checkpoint</span>(std::string(), __FILE__, __LINE__, ELPP_FUNC)</td>
        </tr>
        <tr>
          <td id="L3944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3944"></td>
          <td id="LC3944" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PERFORMANCE_CHECKPOINT_WITH_ID</span>(<span class="pl-v">obj, id</span>) obj-&gt;<span class="pl-en">checkpoint</span>(id, __FILE__, __LINE__, ELPP_FUNC)</td>
        </tr>
        <tr>
          <td id="L3945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3945"></td>
          <td id="LC3945" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_COUNTER</td>
        </tr>
        <tr>
          <td id="L3946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3946"></td>
          <td id="LC3946" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_COUNTER_POS</td>
        </tr>
        <tr>
          <td id="L3947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3947"></td>
          <td id="LC3947" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Gets hit counter for file/line</span></td>
        </tr>
        <tr>
          <td id="L3948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3948"></td>
          <td id="LC3948" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_COUNTER</span> (ELPP-&gt;<span class="pl-en">hitCounters</span>()-&gt;getCounter(__FILE__, __LINE__))</td>
        </tr>
        <tr>
          <td id="L3949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3949"></td>
          <td id="LC3949" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span>/ @brief Gets hit counter position for file/line, -1 if not registered yet</span></td>
        </tr>
        <tr>
          <td id="L3950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3950"></td>
          <td id="LC3950" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_COUNTER_POS</span> (ELPP_COUNTER == <span class="pl-c1">nullptr</span> ? -<span class="pl-c1">1</span> : ELPP_COUNTER-&gt;<span class="pl-en">hitCounts</span>())</td>
        </tr>
        <tr>
          <td id="L3951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3951"></td>
          <td id="LC3951" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Undef levels to support LOG(LEVEL)</span></td>
        </tr>
        <tr>
          <td id="L3952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3952"></td>
          <td id="LC3952" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> INFO</td>
        </tr>
        <tr>
          <td id="L3953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3953"></td>
          <td id="LC3953" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> WARNING</td>
        </tr>
        <tr>
          <td id="L3954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3954"></td>
          <td id="LC3954" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DEBUG</td>
        </tr>
        <tr>
          <td id="L3955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3955"></td>
          <td id="LC3955" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ERROR</td>
        </tr>
        <tr>
          <td id="L3956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3956"></td>
          <td id="LC3956" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> FATAL</td>
        </tr>
        <tr>
          <td id="L3957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3957"></td>
          <td id="LC3957" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> TRACE</td>
        </tr>
        <tr>
          <td id="L3958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3958"></td>
          <td id="LC3958" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VERBOSE</td>
        </tr>
        <tr>
          <td id="L3959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3959"></td>
          <td id="LC3959" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Undef existing</span></td>
        </tr>
        <tr>
          <td id="L3960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3960"></td>
          <td id="LC3960" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CINFO</td>
        </tr>
        <tr>
          <td id="L3961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3961"></td>
          <td id="LC3961" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CWARNING</td>
        </tr>
        <tr>
          <td id="L3962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3962"></td>
          <td id="LC3962" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CDEBUG</td>
        </tr>
        <tr>
          <td id="L3963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3963"></td>
          <td id="LC3963" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CFATAL</td>
        </tr>
        <tr>
          <td id="L3964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3964"></td>
          <td id="LC3964" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CERROR</td>
        </tr>
        <tr>
          <td id="L3965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3965"></td>
          <td id="LC3965" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CTRACE</td>
        </tr>
        <tr>
          <td id="L3966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3966"></td>
          <td id="LC3966" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVERBOSE</td>
        </tr>
        <tr>
          <td id="L3967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3967"></td>
          <td id="LC3967" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CINFO_IF</td>
        </tr>
        <tr>
          <td id="L3968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3968"></td>
          <td id="LC3968" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CWARNING_IF</td>
        </tr>
        <tr>
          <td id="L3969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3969"></td>
          <td id="LC3969" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CDEBUG_IF</td>
        </tr>
        <tr>
          <td id="L3970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3970"></td>
          <td id="LC3970" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CERROR_IF</td>
        </tr>
        <tr>
          <td id="L3971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3971"></td>
          <td id="LC3971" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CFATAL_IF</td>
        </tr>
        <tr>
          <td id="L3972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3972"></td>
          <td id="LC3972" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CTRACE_IF</td>
        </tr>
        <tr>
          <td id="L3973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3973"></td>
          <td id="LC3973" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVERBOSE_IF</td>
        </tr>
        <tr>
          <td id="L3974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3974"></td>
          <td id="LC3974" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CINFO_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3975"></td>
          <td id="LC3975" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CWARNING_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3976"></td>
          <td id="LC3976" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CDEBUG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3977"></td>
          <td id="LC3977" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CERROR_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3978"></td>
          <td id="LC3978" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CFATAL_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3979"></td>
          <td id="LC3979" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CTRACE_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3980"></td>
          <td id="LC3980" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVERBOSE_EVERY_N</td>
        </tr>
        <tr>
          <td id="L3981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3981"></td>
          <td id="LC3981" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CINFO_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3982"></td>
          <td id="LC3982" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CWARNING_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3983"></td>
          <td id="LC3983" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CDEBUG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3984"></td>
          <td id="LC3984" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CERROR_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3985"></td>
          <td id="LC3985" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CFATAL_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3986"></td>
          <td id="LC3986" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CTRACE_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3987"></td>
          <td id="LC3987" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVERBOSE_AFTER_N</td>
        </tr>
        <tr>
          <td id="L3988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3988"></td>
          <td id="LC3988" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CINFO_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3989"></td>
          <td id="LC3989" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CWARNING_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3990"></td>
          <td id="LC3990" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CDEBUG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3991"></td>
          <td id="LC3991" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CERROR_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3992"></td>
          <td id="LC3992" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CFATAL_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3993"></td>
          <td id="LC3993" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CTRACE_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3994"></td>
          <td id="LC3994" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVERBOSE_N_TIMES</td>
        </tr>
        <tr>
          <td id="L3995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3995"></td>
          <td id="LC3995" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Normal logs</span></td>
        </tr>
        <tr>
          <td id="L3996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3996"></td>
          <td id="LC3996" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_INFO_LOG</td>
        </tr>
        <tr>
          <td id="L3997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3997"></td>
          <td id="LC3997" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO</span>(writer, dispatchAction, ...) ELPP_WRITE_LOG(writer, el::Level::Info, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L3998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3998"></td>
          <td id="LC3998" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L3999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3999"></td>
          <td id="LC3999" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO</span>(writer, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4000"></td>
          <td id="LC4000" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_INFO_LOG</span></td>
        </tr>
        <tr>
          <td id="L4001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4001"></td>
          <td id="LC4001" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_WARNING_LOG</td>
        </tr>
        <tr>
          <td id="L4002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4002"></td>
          <td id="LC4002" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING</span>(writer, dispatchAction, ...) ELPP_WRITE_LOG(writer, el::Level::Warning, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4003"></td>
          <td id="LC4003" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4004"></td>
          <td id="LC4004" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING</span>(writer, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4005"></td>
          <td id="LC4005" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_WARNING_LOG</span></td>
        </tr>
        <tr>
          <td id="L4006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4006"></td>
          <td id="LC4006" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_DEBUG_LOG</td>
        </tr>
        <tr>
          <td id="L4007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4007"></td>
          <td id="LC4007" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG</span>(writer, dispatchAction, ...) ELPP_WRITE_LOG(writer, el::Level::Debug, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4008"></td>
          <td id="LC4008" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4009"></td>
          <td id="LC4009" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG</span>(writer, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4010"></td>
          <td id="LC4010" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_DEBUG_LOG</span></td>
        </tr>
        <tr>
          <td id="L4011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4011"></td>
          <td id="LC4011" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ERROR_LOG</td>
        </tr>
        <tr>
          <td id="L4012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4012"></td>
          <td id="LC4012" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR</span>(writer, dispatchAction, ...) ELPP_WRITE_LOG(writer, el::Level::Error, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4013"></td>
          <td id="LC4013" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4014"></td>
          <td id="LC4014" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR</span>(writer, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4015"></td>
          <td id="LC4015" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ERROR_LOG</span></td>
        </tr>
        <tr>
          <td id="L4016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4016"></td>
          <td id="LC4016" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_FATAL_LOG</td>
        </tr>
        <tr>
          <td id="L4017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4017"></td>
          <td id="LC4017" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL</span>(writer, dispatchAction, ...) ELPP_WRITE_LOG(writer, el::Level::Fatal, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4018"></td>
          <td id="LC4018" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4019"></td>
          <td id="LC4019" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL</span>(writer, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4020"></td>
          <td id="LC4020" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_FATAL_LOG</span></td>
        </tr>
        <tr>
          <td id="L4021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4021"></td>
          <td id="LC4021" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_TRACE_LOG</td>
        </tr>
        <tr>
          <td id="L4022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4022"></td>
          <td id="LC4022" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE</span>(writer, dispatchAction, ...) ELPP_WRITE_LOG(writer, el::Level::Trace, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4023"></td>
          <td id="LC4023" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4024"></td>
          <td id="LC4024" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE</span>(writer, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4025"></td>
          <td id="LC4025" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_TRACE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4026"></td>
          <td id="LC4026" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VERBOSE_LOG</td>
        </tr>
        <tr>
          <td id="L4027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4027"></td>
          <td id="LC4027" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE</span>(writer, vlevel, dispatchAction, ...) <span class="pl-k">if</span> (VLOG_IS_ON(vlevel)) writer(\</td>
        </tr>
        <tr>
          <td id="L4028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4028"></td>
          <td id="LC4028" class="blob-code blob-code-inner js-file-line">el::Level::Verbose, __FILE__, __LINE__, ELPP_FUNC, dispatchAction, vlevel).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4029"></td>
          <td id="LC4029" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4030"></td>
          <td id="LC4030" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE</span>(writer, vlevel, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4031"></td>
          <td id="LC4031" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_VERBOSE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4032"></td>
          <td id="LC4032" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Conditional logs</span></td>
        </tr>
        <tr>
          <td id="L4033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4033"></td>
          <td id="LC4033" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_INFO_LOG</td>
        </tr>
        <tr>
          <td id="L4034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4034"></td>
          <td id="LC4034" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_IF</span>(writer, condition_, dispatchAction, ...) \</td>
        </tr>
        <tr>
          <td id="L4035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4035"></td>
          <td id="LC4035" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, (condition_), el::Level::Info, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4036"></td>
          <td id="LC4036" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4037"></td>
          <td id="LC4037" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_IF</span>(writer, condition_, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4038"></td>
          <td id="LC4038" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_INFO_LOG</span></td>
        </tr>
        <tr>
          <td id="L4039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4039"></td>
          <td id="LC4039" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_WARNING_LOG</td>
        </tr>
        <tr>
          <td id="L4040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4040"></td>
          <td id="LC4040" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_IF</span>(writer, condition_, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4041"></td>
          <td id="LC4041" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, (condition_), el::Level::Warning, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4042"></td>
          <td id="LC4042" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4043"></td>
          <td id="LC4043" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_IF</span>(writer, condition_, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4044"></td>
          <td id="LC4044" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_WARNING_LOG</span></td>
        </tr>
        <tr>
          <td id="L4045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4045"></td>
          <td id="LC4045" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_DEBUG_LOG</td>
        </tr>
        <tr>
          <td id="L4046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4046"></td>
          <td id="LC4046" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_IF</span>(writer, condition_, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4047"></td>
          <td id="LC4047" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, (condition_), el::Level::Debug, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4048"></td>
          <td id="LC4048" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4049"></td>
          <td id="LC4049" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_IF</span>(writer, condition_, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4050"></td>
          <td id="LC4050" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_DEBUG_LOG</span></td>
        </tr>
        <tr>
          <td id="L4051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4051"></td>
          <td id="LC4051" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ERROR_LOG</td>
        </tr>
        <tr>
          <td id="L4052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4052"></td>
          <td id="LC4052" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_IF</span>(writer, condition_, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4053"></td>
          <td id="LC4053" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, (condition_), el::Level::Error, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4054"></td>
          <td id="LC4054" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4055"></td>
          <td id="LC4055" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_IF</span>(writer, condition_, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4056"></td>
          <td id="LC4056" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ERROR_LOG</span></td>
        </tr>
        <tr>
          <td id="L4057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4057"></td>
          <td id="LC4057" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_FATAL_LOG</td>
        </tr>
        <tr>
          <td id="L4058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4058"></td>
          <td id="LC4058" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_IF</span>(writer, condition_, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4059"></td>
          <td id="LC4059" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, (condition_), el::Level::Fatal, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4060"></td>
          <td id="LC4060" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4061"></td>
          <td id="LC4061" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_IF</span>(writer, condition_, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4062"></td>
          <td id="LC4062" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_FATAL_LOG</span></td>
        </tr>
        <tr>
          <td id="L4063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4063"></td>
          <td id="LC4063" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_TRACE_LOG</td>
        </tr>
        <tr>
          <td id="L4064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4064"></td>
          <td id="LC4064" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_IF</span>(writer, condition_, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4065"></td>
          <td id="LC4065" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_IF</span>(writer, (condition_), el::Level::Trace, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4066"></td>
          <td id="LC4066" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4067"></td>
          <td id="LC4067" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_IF</span>(writer, condition_, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4068"></td>
          <td id="LC4068" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_TRACE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4069"></td>
          <td id="LC4069" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VERBOSE_LOG</td>
        </tr>
        <tr>
          <td id="L4070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4070"></td>
          <td id="LC4070" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_IF</span>(writer, condition_, vlevel, dispatchAction, ...) <span class="pl-k">if</span> (VLOG_IS_ON(vlevel) &amp;&amp; (condition_)) writer( \</td>
        </tr>
        <tr>
          <td id="L4071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4071"></td>
          <td id="LC4071" class="blob-code blob-code-inner js-file-line">el::Level::Verbose, __FILE__, __LINE__, ELPP_FUNC, dispatchAction, vlevel).construct(el_getVALength(__VA_ARGS__), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4072"></td>
          <td id="LC4072" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4073"></td>
          <td id="LC4073" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_IF</span>(writer, condition_, vlevel, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4074"></td>
          <td id="LC4074" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_VERBOSE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4075"></td>
          <td id="LC4075" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Occasional logs</span></td>
        </tr>
        <tr>
          <td id="L4076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4076"></td>
          <td id="LC4076" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_INFO_LOG</td>
        </tr>
        <tr>
          <td id="L4077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4077"></td>
          <td id="LC4077" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_EVERY_N</span>(writer, occasion, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4078"></td>
          <td id="LC4078" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, el::Level::Info, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4079"></td>
          <td id="LC4079" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4080"></td>
          <td id="LC4080" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_EVERY_N</span>(writer, occasion, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4081"></td>
          <td id="LC4081" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_INFO_LOG</span></td>
        </tr>
        <tr>
          <td id="L4082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4082"></td>
          <td id="LC4082" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_WARNING_LOG</td>
        </tr>
        <tr>
          <td id="L4083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4083"></td>
          <td id="LC4083" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_EVERY_N</span>(writer, occasion, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4084"></td>
          <td id="LC4084" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, el::Level::Warning, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4085"></td>
          <td id="LC4085" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4086"></td>
          <td id="LC4086" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_EVERY_N</span>(writer, occasion, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4087"></td>
          <td id="LC4087" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_WARNING_LOG</span></td>
        </tr>
        <tr>
          <td id="L4088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4088"></td>
          <td id="LC4088" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_DEBUG_LOG</td>
        </tr>
        <tr>
          <td id="L4089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4089"></td>
          <td id="LC4089" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_EVERY_N</span>(writer, occasion, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4090"></td>
          <td id="LC4090" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, el::Level::Debug, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4091"></td>
          <td id="LC4091" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4092"></td>
          <td id="LC4092" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_EVERY_N</span>(writer, occasion, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4093"></td>
          <td id="LC4093" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_DEBUG_LOG</span></td>
        </tr>
        <tr>
          <td id="L4094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4094"></td>
          <td id="LC4094" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ERROR_LOG</td>
        </tr>
        <tr>
          <td id="L4095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4095"></td>
          <td id="LC4095" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_EVERY_N</span>(writer, occasion, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4096"></td>
          <td id="LC4096" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, el::Level::Error, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4097"></td>
          <td id="LC4097" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4098"></td>
          <td id="LC4098" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_EVERY_N</span>(writer, occasion, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4099"></td>
          <td id="LC4099" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ERROR_LOG</span></td>
        </tr>
        <tr>
          <td id="L4100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4100"></td>
          <td id="LC4100" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_FATAL_LOG</td>
        </tr>
        <tr>
          <td id="L4101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4101"></td>
          <td id="LC4101" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_EVERY_N</span>(writer, occasion, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4102"></td>
          <td id="LC4102" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, el::Level::Fatal, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4103"></td>
          <td id="LC4103" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4104"></td>
          <td id="LC4104" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_EVERY_N</span>(writer, occasion, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4105"></td>
          <td id="LC4105" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_FATAL_LOG</span></td>
        </tr>
        <tr>
          <td id="L4106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4106"></td>
          <td id="LC4106" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_TRACE_LOG</td>
        </tr>
        <tr>
          <td id="L4107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4107"></td>
          <td id="LC4107" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_EVERY_N</span>(writer, occasion, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4108"></td>
          <td id="LC4108" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_EVERY_N</span>(writer, occasion, el::Level::Trace, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4109"></td>
          <td id="LC4109" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4110"></td>
          <td id="LC4110" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_EVERY_N</span>(writer, occasion, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4111"></td>
          <td id="LC4111" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_TRACE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4112"></td>
          <td id="LC4112" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VERBOSE_LOG</td>
        </tr>
        <tr>
          <td id="L4113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4113"></td>
          <td id="LC4113" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_EVERY_N</span>(writer, occasion, vlevel, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4114"></td>
          <td id="LC4114" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_IF</span>(writer, ELPP-&gt;<span class="pl-en">validateEveryNCounter</span>(__FILE__, __LINE__, occasion), vlevel, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4115"></td>
          <td id="LC4115" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4116"></td>
          <td id="LC4116" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_EVERY_N</span>(writer, occasion, vlevel, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4117"></td>
          <td id="LC4117" class="blob-code blob-code-inner js-file-line">#endif  <span class="pl-c"><span class="pl-c">//</span> ELPP_VERBOSE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4118"></td>
          <td id="LC4118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> After N logs</span></td>
        </tr>
        <tr>
          <td id="L4119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4119"></td>
          <td id="LC4119" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_INFO_LOG</td>
        </tr>
        <tr>
          <td id="L4120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4120"></td>
          <td id="LC4120" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_AFTER_N</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4121"></td>
          <td id="LC4121" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, el::Level::Info, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4122"></td>
          <td id="LC4122" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4123"></td>
          <td id="LC4123" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_AFTER_N</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4124"></td>
          <td id="LC4124" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_INFO_LOG</span></td>
        </tr>
        <tr>
          <td id="L4125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4125"></td>
          <td id="LC4125" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_WARNING_LOG</td>
        </tr>
        <tr>
          <td id="L4126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4126"></td>
          <td id="LC4126" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_AFTER_N</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4127"></td>
          <td id="LC4127" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, el::Level::Warning, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4128"></td>
          <td id="LC4128" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4129"></td>
          <td id="LC4129" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_AFTER_N</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4130"></td>
          <td id="LC4130" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_WARNING_LOG</span></td>
        </tr>
        <tr>
          <td id="L4131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4131"></td>
          <td id="LC4131" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_DEBUG_LOG</td>
        </tr>
        <tr>
          <td id="L4132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4132"></td>
          <td id="LC4132" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_AFTER_N</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4133"></td>
          <td id="LC4133" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, el::Level::Debug, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4134"></td>
          <td id="LC4134" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4135"></td>
          <td id="LC4135" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_AFTER_N</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4136"></td>
          <td id="LC4136" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_DEBUG_LOG</span></td>
        </tr>
        <tr>
          <td id="L4137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4137"></td>
          <td id="LC4137" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ERROR_LOG</td>
        </tr>
        <tr>
          <td id="L4138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4138"></td>
          <td id="LC4138" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_AFTER_N</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4139"></td>
          <td id="LC4139" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, el::Level::Error, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4140"></td>
          <td id="LC4140" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4141"></td>
          <td id="LC4141" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_AFTER_N</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4142"></td>
          <td id="LC4142" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ERROR_LOG</span></td>
        </tr>
        <tr>
          <td id="L4143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4143"></td>
          <td id="LC4143" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_FATAL_LOG</td>
        </tr>
        <tr>
          <td id="L4144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4144"></td>
          <td id="LC4144" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_AFTER_N</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4145"></td>
          <td id="LC4145" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, el::Level::Fatal, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4146"></td>
          <td id="LC4146" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4147"></td>
          <td id="LC4147" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_AFTER_N</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4148"></td>
          <td id="LC4148" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_FATAL_LOG</span></td>
        </tr>
        <tr>
          <td id="L4149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4149"></td>
          <td id="LC4149" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_TRACE_LOG</td>
        </tr>
        <tr>
          <td id="L4150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4150"></td>
          <td id="LC4150" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_AFTER_N</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4151"></td>
          <td id="LC4151" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_AFTER_N</span>(writer, n, el::Level::Trace, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4152"></td>
          <td id="LC4152" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4153"></td>
          <td id="LC4153" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_AFTER_N</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4154"></td>
          <td id="LC4154" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_TRACE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4155"></td>
          <td id="LC4155" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VERBOSE_LOG</td>
        </tr>
        <tr>
          <td id="L4156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4156"></td>
          <td id="LC4156" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_AFTER_N</span>(writer, n, vlevel, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4157"></td>
          <td id="LC4157" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_IF</span>(writer, ELPP-&gt;<span class="pl-en">validateAfterNCounter</span>(__FILE__, __LINE__, n), vlevel, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4158"></td>
          <td id="LC4158" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4159"></td>
          <td id="LC4159" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_AFTER_N</span>(writer, n, vlevel, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4160"></td>
          <td id="LC4160" class="blob-code blob-code-inner js-file-line">#endif  <span class="pl-c"><span class="pl-c">//</span> ELPP_VERBOSE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4161"></td>
          <td id="LC4161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> N Times logs</span></td>
        </tr>
        <tr>
          <td id="L4162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4162"></td>
          <td id="LC4162" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_INFO_LOG</td>
        </tr>
        <tr>
          <td id="L4163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4163"></td>
          <td id="LC4163" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_N_TIMES</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4164"></td>
          <td id="LC4164" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, el::Level::Info, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4165"></td>
          <td id="LC4165" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4166"></td>
          <td id="LC4166" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CINFO_N_TIMES</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4167"></td>
          <td id="LC4167" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_INFO_LOG</span></td>
        </tr>
        <tr>
          <td id="L4168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4168"></td>
          <td id="LC4168" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_WARNING_LOG</td>
        </tr>
        <tr>
          <td id="L4169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4169"></td>
          <td id="LC4169" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_N_TIMES</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4170"></td>
          <td id="LC4170" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, el::Level::Warning, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4171"></td>
          <td id="LC4171" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4172"></td>
          <td id="LC4172" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CWARNING_N_TIMES</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4173"></td>
          <td id="LC4173" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_WARNING_LOG</span></td>
        </tr>
        <tr>
          <td id="L4174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4174"></td>
          <td id="LC4174" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_DEBUG_LOG</td>
        </tr>
        <tr>
          <td id="L4175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4175"></td>
          <td id="LC4175" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_N_TIMES</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4176"></td>
          <td id="LC4176" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, el::Level::Debug, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4177"></td>
          <td id="LC4177" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4178"></td>
          <td id="LC4178" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CDEBUG_N_TIMES</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4179"></td>
          <td id="LC4179" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_DEBUG_LOG</span></td>
        </tr>
        <tr>
          <td id="L4180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4180"></td>
          <td id="LC4180" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ERROR_LOG</td>
        </tr>
        <tr>
          <td id="L4181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4181"></td>
          <td id="LC4181" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_N_TIMES</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4182"></td>
          <td id="LC4182" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, el::Level::Error, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4183"></td>
          <td id="LC4183" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4184"></td>
          <td id="LC4184" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CERROR_N_TIMES</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4185"></td>
          <td id="LC4185" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_ERROR_LOG</span></td>
        </tr>
        <tr>
          <td id="L4186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4186"></td>
          <td id="LC4186" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_FATAL_LOG</td>
        </tr>
        <tr>
          <td id="L4187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4187"></td>
          <td id="LC4187" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_N_TIMES</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4188"></td>
          <td id="LC4188" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, el::Level::Fatal, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4189"></td>
          <td id="LC4189" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4190"></td>
          <td id="LC4190" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CFATAL_N_TIMES</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4191"></td>
          <td id="LC4191" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_FATAL_LOG</span></td>
        </tr>
        <tr>
          <td id="L4192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4192"></td>
          <td id="LC4192" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_TRACE_LOG</td>
        </tr>
        <tr>
          <td id="L4193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4193"></td>
          <td id="LC4193" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_N_TIMES</span>(writer, n, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4194"></td>
          <td id="LC4194" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ELPP_WRITE_LOG_N_TIMES</span>(writer, n, el::Level::Trace, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4195"></td>
          <td id="LC4195" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4196"></td>
          <td id="LC4196" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CTRACE_N_TIMES</span>(writer, n, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4197"></td>
          <td id="LC4197" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> ELPP_TRACE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4198"></td>
          <td id="LC4198" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_VERBOSE_LOG</td>
        </tr>
        <tr>
          <td id="L4199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4199"></td>
          <td id="LC4199" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_N_TIMES</span>(writer, n, vlevel, dispatchAction, ...)\</td>
        </tr>
        <tr>
          <td id="L4200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4200"></td>
          <td id="LC4200" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_IF</span>(writer, ELPP-&gt;<span class="pl-en">validateNTimesCounter</span>(__FILE__, __LINE__, n), vlevel, dispatchAction, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4201"></td>
          <td id="LC4201" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4202"></td>
          <td id="LC4202" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CVERBOSE_N_TIMES</span>(writer, n, vlevel, dispatchAction, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4203"></td>
          <td id="LC4203" class="blob-code blob-code-inner js-file-line">#endif  <span class="pl-c"><span class="pl-c">//</span> ELPP_VERBOSE_LOG</span></td>
        </tr>
        <tr>
          <td id="L4204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4204"></td>
          <td id="LC4204" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4205"></td>
          <td id="LC4205" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Custom Loggers - Requires (level, dispatchAction, loggerId/s)</span></td>
        </tr>
        <tr>
          <td id="L4206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4206"></td>
          <td id="LC4206" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4207"></td>
          <td id="LC4207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> undef existing</span></td>
        </tr>
        <tr>
          <td id="L4208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4208"></td>
          <td id="LC4208" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG</td>
        </tr>
        <tr>
          <td id="L4209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4209"></td>
          <td id="LC4209" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG_VERBOSE</td>
        </tr>
        <tr>
          <td id="L4210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4210"></td>
          <td id="LC4210" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVLOG</td>
        </tr>
        <tr>
          <td id="L4211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4211"></td>
          <td id="LC4211" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG_IF</td>
        </tr>
        <tr>
          <td id="L4212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4212"></td>
          <td id="LC4212" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG_VERBOSE_IF</td>
        </tr>
        <tr>
          <td id="L4213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4213"></td>
          <td id="LC4213" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVLOG_IF</td>
        </tr>
        <tr>
          <td id="L4214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4214"></td>
          <td id="LC4214" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4215"></td>
          <td id="LC4215" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4216"></td>
          <td id="LC4216" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4217"></td>
          <td id="LC4217" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4218"></td>
          <td id="LC4218" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4219"></td>
          <td id="LC4219" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CVLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4220"></td>
          <td id="LC4220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Normal logs</span></td>
        </tr>
        <tr>
          <td id="L4221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4221"></td>
          <td id="LC4221" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CLOG</span>(LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4222"></td>
          <td id="LC4222" class="blob-code blob-code-inner js-file-line">C##LEVEL(el::base::Writer, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4223"></td>
          <td id="LC4223" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CVLOG</span>(vlevel, ...) CVERBOSE(el::base::Writer, vlevel, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4224"></td>
          <td id="LC4224" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Conditional logs</span></td>
        </tr>
        <tr>
          <td id="L4225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4225"></td>
          <td id="LC4225" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CLOG_IF</span>(condition, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4226"></td>
          <td id="LC4226" class="blob-code blob-code-inner js-file-line">C##LEVEL##_IF(el::base::Writer, condition, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4227"></td>
          <td id="LC4227" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CVLOG_IF</span>(condition, vlevel, ...)\</td>
        </tr>
        <tr>
          <td id="L4228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4228"></td>
          <td id="LC4228" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_IF</span>(el::base::Writer, condition, vlevel, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4229"></td>
          <td id="LC4229" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Hit counts based logs</span></td>
        </tr>
        <tr>
          <td id="L4230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4230"></td>
          <td id="LC4230" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CLOG_EVERY_N</span>(n, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4231"></td>
          <td id="LC4231" class="blob-code blob-code-inner js-file-line">C##LEVEL##_EVERY_N(el::base::Writer, n, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4232"></td>
          <td id="LC4232" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CVLOG_EVERY_N</span>(n, vlevel, ...)\</td>
        </tr>
        <tr>
          <td id="L4233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4233"></td>
          <td id="LC4233" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_EVERY_N</span>(el::base::Writer, n, vlevel, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4234"></td>
          <td id="LC4234" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CLOG_AFTER_N</span>(n, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4235"></td>
          <td id="LC4235" class="blob-code blob-code-inner js-file-line">C##LEVEL##_AFTER_N(el::base::Writer, n, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4236"></td>
          <td id="LC4236" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CVLOG_AFTER_N</span>(n, vlevel, ...)\</td>
        </tr>
        <tr>
          <td id="L4237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4237"></td>
          <td id="LC4237" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_AFTER_N</span>(el::base::Writer, n, vlevel, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4238"></td>
          <td id="LC4238" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CLOG_N_TIMES</span>(n, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4239"></td>
          <td id="LC4239" class="blob-code blob-code-inner js-file-line">C##LEVEL##_N_TIMES(el::base::Writer, n, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4240"></td>
          <td id="LC4240" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CVLOG_N_TIMES</span>(n, vlevel, ...)\</td>
        </tr>
        <tr>
          <td id="L4241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4241"></td>
          <td id="LC4241" class="blob-code blob-code-inner js-file-line"><span class="pl-en">CVERBOSE_N_TIMES</span>(el::base::Writer, n, vlevel, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4242"></td>
          <td id="LC4242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4243"></td>
          <td id="LC4243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Default Loggers macro using CLOG(), CLOG_VERBOSE() and CVLOG() macros</span></td>
        </tr>
        <tr>
          <td id="L4244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4244"></td>
          <td id="LC4244" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4245"></td>
          <td id="LC4245" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> undef existing</span></td>
        </tr>
        <tr>
          <td id="L4246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4246"></td>
          <td id="LC4246" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> LOG</td>
        </tr>
        <tr>
          <td id="L4247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4247"></td>
          <td id="LC4247" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VLOG</td>
        </tr>
        <tr>
          <td id="L4248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4248"></td>
          <td id="LC4248" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> LOG_IF</td>
        </tr>
        <tr>
          <td id="L4249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4249"></td>
          <td id="LC4249" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VLOG_IF</td>
        </tr>
        <tr>
          <td id="L4250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4250"></td>
          <td id="LC4250" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> LOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4251"></td>
          <td id="LC4251" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4252"></td>
          <td id="LC4252" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> LOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4253"></td>
          <td id="LC4253" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4254"></td>
          <td id="LC4254" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> LOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4255"></td>
          <td id="LC4255" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> VLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4256"></td>
          <td id="LC4256" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_CURR_FILE_LOGGER_ID</td>
        </tr>
        <tr>
          <td id="L4257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4257"></td>
          <td id="LC4257" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_DEFAULT_LOGGER)</td>
        </tr>
        <tr>
          <td id="L4258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4258"></td>
          <td id="LC4258" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_CURR_FILE_LOGGER_ID</span> ELPP_DEFAULT_LOGGER</td>
        </tr>
        <tr>
          <td id="L4259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4259"></td>
          <td id="LC4259" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4260"></td>
          <td id="LC4260" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_CURR_FILE_LOGGER_ID</span> el::base::consts::<span class="pl-c1">kDefaultLoggerId</span></td>
        </tr>
        <tr>
          <td id="L4261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4261"></td>
          <td id="LC4261" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span></td>
        </tr>
        <tr>
          <td id="L4262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4262"></td>
          <td id="LC4262" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> ELPP_TRACE</td>
        </tr>
        <tr>
          <td id="L4263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4263"></td>
          <td id="LC4263" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_TRACE</span> <span class="pl-en">CLOG</span>(TRACE, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4264"></td>
          <td id="LC4264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Normal logs</span></td>
        </tr>
        <tr>
          <td id="L4265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4265"></td>
          <td id="LC4265" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOG</span>(<span class="pl-v">LEVEL</span>) CLOG(LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4266"></td>
          <td id="LC4266" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">VLOG</span>(<span class="pl-v">vlevel</span>) CVLOG(vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4267"></td>
          <td id="LC4267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Conditional logs</span></td>
        </tr>
        <tr>
          <td id="L4268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4268"></td>
          <td id="LC4268" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) CLOG_IF(condition, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4269"></td>
          <td id="LC4269" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">VLOG_IF</span>(<span class="pl-v">condition, vlevel</span>) CVLOG_IF(condition, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4270"></td>
          <td id="LC4270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Hit counts based logs</span></td>
        </tr>
        <tr>
          <td id="L4271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4271"></td>
          <td id="LC4271" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOG_EVERY_N</span>(<span class="pl-v">n, LEVEL</span>) CLOG_EVERY_N(n, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4272"></td>
          <td id="LC4272" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">VLOG_EVERY_N</span>(<span class="pl-v">n, vlevel</span>) CVLOG_EVERY_N(n, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4273"></td>
          <td id="LC4273" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOG_AFTER_N</span>(<span class="pl-v">n, LEVEL</span>) CLOG_AFTER_N(n, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4274"></td>
          <td id="LC4274" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">VLOG_AFTER_N</span>(<span class="pl-v">n, vlevel</span>) CVLOG_AFTER_N(n, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4275"></td>
          <td id="LC4275" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">LOG_N_TIMES</span>(<span class="pl-v">n, LEVEL</span>) CLOG_N_TIMES(n, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4276"></td>
          <td id="LC4276" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">VLOG_N_TIMES</span>(<span class="pl-v">n, vlevel</span>) CVLOG_N_TIMES(n, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4277"></td>
          <td id="LC4277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Generic PLOG()</span></td>
        </tr>
        <tr>
          <td id="L4278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4278"></td>
          <td id="LC4278" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CPLOG</td>
        </tr>
        <tr>
          <td id="L4279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4279"></td>
          <td id="LC4279" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CPLOG_IF</td>
        </tr>
        <tr>
          <td id="L4280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4280"></td>
          <td id="LC4280" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> PLOG</td>
        </tr>
        <tr>
          <td id="L4281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4281"></td>
          <td id="LC4281" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> PLOG_IF</td>
        </tr>
        <tr>
          <td id="L4282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4282"></td>
          <td id="LC4282" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCPLOG</td>
        </tr>
        <tr>
          <td id="L4283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4283"></td>
          <td id="LC4283" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCPLOG_IF</td>
        </tr>
        <tr>
          <td id="L4284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4284"></td>
          <td id="LC4284" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DPLOG</td>
        </tr>
        <tr>
          <td id="L4285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4285"></td>
          <td id="LC4285" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DPLOG_IF</td>
        </tr>
        <tr>
          <td id="L4286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4286"></td>
          <td id="LC4286" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CPLOG</span>(LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4287"></td>
          <td id="LC4287" class="blob-code blob-code-inner js-file-line">C##LEVEL(el::base::PErrorWriter, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4288"></td>
          <td id="LC4288" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CPLOG_IF</span>(condition, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4289"></td>
          <td id="LC4289" class="blob-code blob-code-inner js-file-line">C##LEVEL##_IF(el::base::PErrorWriter, condition, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4290"></td>
          <td id="LC4290" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCPLOG</span>(LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4291"></td>
          <td id="LC4291" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (ELPP_DEBUG_LOG) C##LEVEL(el::base::PErrorWriter, el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4292"></td>
          <td id="LC4292" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCPLOG_IF</span>(condition, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4293"></td>
          <td id="LC4293" class="blob-code blob-code-inner js-file-line">C##LEVEL##_IF(el::base::PErrorWriter, (ELPP_DEBUG_LOG) &amp;&amp; (condition), el::base::DispatchAction::NormalLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4294"></td>
          <td id="LC4294" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PLOG</span>(<span class="pl-v">LEVEL</span>) CPLOG(LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4295"></td>
          <td id="LC4295" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) CPLOG_IF(condition, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4296"></td>
          <td id="LC4296" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DPLOG</span>(<span class="pl-v">LEVEL</span>) DCPLOG(LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4297"></td>
          <td id="LC4297" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DPLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) DCPLOG_IF(condition, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4298"></td>
          <td id="LC4298" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Generic SYSLOG()</span></td>
        </tr>
        <tr>
          <td id="L4299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4299"></td>
          <td id="LC4299" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CSYSLOG</td>
        </tr>
        <tr>
          <td id="L4300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4300"></td>
          <td id="LC4300" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CSYSLOG_IF</td>
        </tr>
        <tr>
          <td id="L4301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4301"></td>
          <td id="LC4301" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CSYSLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4302"></td>
          <td id="LC4302" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CSYSLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4303"></td>
          <td id="LC4303" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CSYSLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4304"></td>
          <td id="LC4304" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> SYSLOG</td>
        </tr>
        <tr>
          <td id="L4305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4305"></td>
          <td id="LC4305" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> SYSLOG_IF</td>
        </tr>
        <tr>
          <td id="L4306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4306"></td>
          <td id="LC4306" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> SYSLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4307"></td>
          <td id="LC4307" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> SYSLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4308"></td>
          <td id="LC4308" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> SYSLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4309"></td>
          <td id="LC4309" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCSYSLOG</td>
        </tr>
        <tr>
          <td id="L4310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4310"></td>
          <td id="LC4310" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCSYSLOG_IF</td>
        </tr>
        <tr>
          <td id="L4311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4311"></td>
          <td id="LC4311" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCSYSLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4312"></td>
          <td id="LC4312" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCSYSLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4313"></td>
          <td id="LC4313" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCSYSLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4314"></td>
          <td id="LC4314" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DSYSLOG</td>
        </tr>
        <tr>
          <td id="L4315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4315"></td>
          <td id="LC4315" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DSYSLOG_IF</td>
        </tr>
        <tr>
          <td id="L4316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4316"></td>
          <td id="LC4316" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DSYSLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4317"></td>
          <td id="LC4317" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DSYSLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4318"></td>
          <td id="LC4318" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DSYSLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4319"></td>
          <td id="LC4319" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_SYSLOG)</td>
        </tr>
        <tr>
          <td id="L4320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4320"></td>
          <td id="LC4320" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG</span>(LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4321"></td>
          <td id="LC4321" class="blob-code blob-code-inner js-file-line">C##LEVEL(el::base::Writer, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4322"></td>
          <td id="LC4322" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_IF</span>(condition, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4323"></td>
          <td id="LC4323" class="blob-code blob-code-inner js-file-line">C##LEVEL##_IF(el::base::Writer, condition, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4324"></td>
          <td id="LC4324" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_EVERY_N</span>(n, LEVEL, ...) C##LEVEL##_EVERY_N(el::base::Writer, n, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4325"></td>
          <td id="LC4325" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_AFTER_N</span>(n, LEVEL, ...) C##LEVEL##_AFTER_N(el::base::Writer, n, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4326"></td>
          <td id="LC4326" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_N_TIMES</span>(n, LEVEL, ...) C##LEVEL##_N_TIMES(el::base::Writer, n, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4327"></td>
          <td id="LC4327" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG</span>(<span class="pl-v">LEVEL</span>) CSYSLOG(LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4328"></td>
          <td id="LC4328" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) CSYSLOG_IF(condition, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4329"></td>
          <td id="LC4329" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_EVERY_N</span>(<span class="pl-v">n, LEVEL</span>) CSYSLOG_EVERY_N(n, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4330"></td>
          <td id="LC4330" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_AFTER_N</span>(<span class="pl-v">n, LEVEL</span>) CSYSLOG_AFTER_N(n, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4331"></td>
          <td id="LC4331" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_N_TIMES</span>(<span class="pl-v">n, LEVEL</span>) CSYSLOG_N_TIMES(n, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4332"></td>
          <td id="LC4332" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG</span>(LEVEL, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) C##LEVEL(el::base::Writer, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4333"></td>
          <td id="LC4333" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_IF</span>(condition, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4334"></td>
          <td id="LC4334" class="blob-code blob-code-inner js-file-line">C##LEVEL##_IF(el::base::Writer, (ELPP_DEBUG_LOG) &amp;&amp; (condition), el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4335"></td>
          <td id="LC4335" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_EVERY_N</span>(n, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4336"></td>
          <td id="LC4336" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (ELPP_DEBUG_LOG) C##LEVEL##_EVERY_N(el::base::Writer, n, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4337"></td>
          <td id="LC4337" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_AFTER_N</span>(n, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4338"></td>
          <td id="LC4338" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (ELPP_DEBUG_LOG) C##LEVEL##_AFTER_N(el::base::Writer, n, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4339"></td>
          <td id="LC4339" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_N_TIMES</span>(n, LEVEL, ...)\</td>
        </tr>
        <tr>
          <td id="L4340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4340"></td>
          <td id="LC4340" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (ELPP_DEBUG_LOG) C##LEVEL##_EVERY_N(el::base::Writer, n, el::base::DispatchAction::SysLog, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4341"></td>
          <td id="LC4341" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG</span>(<span class="pl-v">LEVEL</span>) DCSYSLOG(LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4342"></td>
          <td id="LC4342" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) DCSYSLOG_IF(condition, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4343"></td>
          <td id="LC4343" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_EVERY_N</span>(<span class="pl-v">n, LEVEL</span>) DCSYSLOG_EVERY_N(n, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4344"></td>
          <td id="LC4344" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_AFTER_N</span>(<span class="pl-v">n, LEVEL</span>) DCSYSLOG_AFTER_N(n, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4345"></td>
          <td id="LC4345" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_N_TIMES</span>(<span class="pl-v">n, LEVEL</span>) DCSYSLOG_N_TIMES(n, LEVEL, el::base::consts::<span class="pl-c1">kSysLogLoggerId</span>)</td>
        </tr>
        <tr>
          <td id="L4346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4346"></td>
          <td id="LC4346" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4347"></td>
          <td id="LC4347" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG</span>(LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4348"></td>
          <td id="LC4348" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_IF</span>(condition, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4349"></td>
          <td id="LC4349" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_EVERY_N</span>(n, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4350"></td>
          <td id="LC4350" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_AFTER_N</span>(n, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4351"></td>
          <td id="LC4351" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">CSYSLOG_N_TIMES</span>(n, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4352"></td>
          <td id="LC4352" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG</span>(<span class="pl-v">LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4353"></td>
          <td id="LC4353" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4354"></td>
          <td id="LC4354" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_EVERY_N</span>(<span class="pl-v">n, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4355"></td>
          <td id="LC4355" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_AFTER_N</span>(<span class="pl-v">n, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4356"></td>
          <td id="LC4356" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">SYSLOG_N_TIMES</span>(<span class="pl-v">n, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4357"></td>
          <td id="LC4357" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG</span>(LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4358"></td>
          <td id="LC4358" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_IF</span>(condition, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4359"></td>
          <td id="LC4359" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_EVERY_N</span>(n, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4360"></td>
          <td id="LC4360" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_AFTER_N</span>(n, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4361"></td>
          <td id="LC4361" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DCSYSLOG_N_TIMES</span>(n, LEVEL, ...) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4362"></td>
          <td id="LC4362" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG</span>(<span class="pl-v">LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4363"></td>
          <td id="LC4363" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4364"></td>
          <td id="LC4364" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_EVERY_N</span>(<span class="pl-v">n, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4365"></td>
          <td id="LC4365" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_AFTER_N</span>(<span class="pl-v">n, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4366"></td>
          <td id="LC4366" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">DSYSLOG_N_TIMES</span>(<span class="pl-v">n, LEVEL</span>) el::base::NullWriter()</td>
        </tr>
        <tr>
          <td id="L4367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4367"></td>
          <td id="LC4367" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_SYSLOG)</span></td>
        </tr>
        <tr>
          <td id="L4368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4368"></td>
          <td id="LC4368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4369"></td>
          <td id="LC4369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Custom Debug Only Loggers - Requires (level, loggerId/s)</span></td>
        </tr>
        <tr>
          <td id="L4370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4370"></td>
          <td id="LC4370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4371"></td>
          <td id="LC4371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> undef existing</span></td>
        </tr>
        <tr>
          <td id="L4372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4372"></td>
          <td id="LC4372" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCLOG</td>
        </tr>
        <tr>
          <td id="L4373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4373"></td>
          <td id="LC4373" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCVLOG</td>
        </tr>
        <tr>
          <td id="L4374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4374"></td>
          <td id="LC4374" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCLOG_IF</td>
        </tr>
        <tr>
          <td id="L4375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4375"></td>
          <td id="LC4375" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCVLOG_IF</td>
        </tr>
        <tr>
          <td id="L4376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4376"></td>
          <td id="LC4376" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4377"></td>
          <td id="LC4377" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCVLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4378"></td>
          <td id="LC4378" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4379"></td>
          <td id="LC4379" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCVLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4380"></td>
          <td id="LC4380" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4381"></td>
          <td id="LC4381" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCVLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4382"></td>
          <td id="LC4382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Normal logs</span></td>
        </tr>
        <tr>
          <td id="L4383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4383"></td>
          <td id="LC4383" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCLOG</span>(LEVEL, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CLOG(LEVEL, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4384"></td>
          <td id="LC4384" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCLOG_VERBOSE</span>(vlevel, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CLOG_VERBOSE(vlevel, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4385"></td>
          <td id="LC4385" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCVLOG</span>(vlevel, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CVLOG(vlevel, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4386"></td>
          <td id="LC4386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Conditional logs</span></td>
        </tr>
        <tr>
          <td id="L4387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4387"></td>
          <td id="LC4387" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCLOG_IF</span>(condition, LEVEL, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CLOG_IF(condition, LEVEL, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4388"></td>
          <td id="LC4388" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCVLOG_IF</span>(condition, vlevel, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CVLOG_IF(condition, vlevel, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4389"></td>
          <td id="LC4389" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Hit counts based logs</span></td>
        </tr>
        <tr>
          <td id="L4390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4390"></td>
          <td id="LC4390" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCLOG_EVERY_N</span>(n, LEVEL, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CLOG_EVERY_N(n, LEVEL, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4391"></td>
          <td id="LC4391" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCVLOG_EVERY_N</span>(n, vlevel, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CVLOG_EVERY_N(n, vlevel, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4392"></td>
          <td id="LC4392" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCLOG_AFTER_N</span>(n, LEVEL, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CLOG_AFTER_N(n, LEVEL, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4393"></td>
          <td id="LC4393" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCVLOG_AFTER_N</span>(n, vlevel, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CVLOG_AFTER_N(n, vlevel, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4394"></td>
          <td id="LC4394" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCLOG_N_TIMES</span>(n, LEVEL, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CLOG_N_TIMES(n, LEVEL, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4395"></td>
          <td id="LC4395" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCVLOG_N_TIMES</span>(n, vlevel, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CVLOG_N_TIMES(n, vlevel, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4396"></td>
          <td id="LC4396" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4397"></td>
          <td id="LC4397" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Default Debug Only Loggers macro using CLOG(), CLOG_VERBOSE() and CVLOG() macros</span></td>
        </tr>
        <tr>
          <td id="L4398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4398"></td>
          <td id="LC4398" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span></span></td>
        </tr>
        <tr>
          <td id="L4399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4399"></td>
          <td id="LC4399" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_NO_DEBUG_MACROS)</td>
        </tr>
        <tr>
          <td id="L4400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4400"></td>
          <td id="LC4400" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> undef existing</span></td>
        </tr>
        <tr>
          <td id="L4401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4401"></td>
          <td id="LC4401" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DLOG</td>
        </tr>
        <tr>
          <td id="L4402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4402"></td>
          <td id="LC4402" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DVLOG</td>
        </tr>
        <tr>
          <td id="L4403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4403"></td>
          <td id="LC4403" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DLOG_IF</td>
        </tr>
        <tr>
          <td id="L4404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4404"></td>
          <td id="LC4404" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DVLOG_IF</td>
        </tr>
        <tr>
          <td id="L4405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4405"></td>
          <td id="LC4405" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4406"></td>
          <td id="LC4406" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DVLOG_EVERY_N</td>
        </tr>
        <tr>
          <td id="L4407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4407"></td>
          <td id="LC4407" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4408"></td>
          <td id="LC4408" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DVLOG_AFTER_N</td>
        </tr>
        <tr>
          <td id="L4409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4409"></td>
          <td id="LC4409" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4410"></td>
          <td id="LC4410" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DVLOG_N_TIMES</td>
        </tr>
        <tr>
          <td id="L4411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4411"></td>
          <td id="LC4411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Normal logs</span></td>
        </tr>
        <tr>
          <td id="L4412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4412"></td>
          <td id="LC4412" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DLOG</span>(<span class="pl-v">LEVEL</span>) DCLOG(LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4413"></td>
          <td id="LC4413" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DVLOG</span>(<span class="pl-v">vlevel</span>) DCVLOG(vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4414"></td>
          <td id="LC4414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Conditional logs</span></td>
        </tr>
        <tr>
          <td id="L4415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4415"></td>
          <td id="LC4415" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DLOG_IF</span>(<span class="pl-v">condition, LEVEL</span>) DCLOG_IF(condition, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4416"></td>
          <td id="LC4416" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DVLOG_IF</span>(<span class="pl-v">condition, vlevel</span>) DCVLOG_IF(condition, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4417"></td>
          <td id="LC4417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Hit counts based logs</span></td>
        </tr>
        <tr>
          <td id="L4418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4418"></td>
          <td id="LC4418" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DLOG_EVERY_N</span>(<span class="pl-v">n, LEVEL</span>) DCLOG_EVERY_N(n, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4419"></td>
          <td id="LC4419" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DVLOG_EVERY_N</span>(<span class="pl-v">n, vlevel</span>) DCVLOG_EVERY_N(n, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4420"></td>
          <td id="LC4420" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DLOG_AFTER_N</span>(<span class="pl-v">n, LEVEL</span>) DCLOG_AFTER_N(n, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4421"></td>
          <td id="LC4421" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DVLOG_AFTER_N</span>(<span class="pl-v">n, vlevel</span>) DCVLOG_AFTER_N(n, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4422"></td>
          <td id="LC4422" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DLOG_N_TIMES</span>(<span class="pl-v">n, LEVEL</span>) DCLOG_N_TIMES(n, LEVEL, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4423"></td>
          <td id="LC4423" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DVLOG_N_TIMES</span>(<span class="pl-v">n, vlevel</span>) DCVLOG_N_TIMES(n, vlevel, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4424"></td>
          <td id="LC4424" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_NO_DEBUG_MACROS)</span></td>
        </tr>
        <tr>
          <td id="L4425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4425"></td>
          <td id="LC4425" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> !defined(ELPP_NO_CHECK_MACROS)</td>
        </tr>
        <tr>
          <td id="L4426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4426"></td>
          <td id="LC4426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Check macros</span></td>
        </tr>
        <tr>
          <td id="L4427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4427"></td>
          <td id="LC4427" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK</td>
        </tr>
        <tr>
          <td id="L4428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4428"></td>
          <td id="LC4428" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CPCHECK</td>
        </tr>
        <tr>
          <td id="L4429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4429"></td>
          <td id="LC4429" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_EQ</td>
        </tr>
        <tr>
          <td id="L4430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4430"></td>
          <td id="LC4430" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_NE</td>
        </tr>
        <tr>
          <td id="L4431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4431"></td>
          <td id="LC4431" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_LT</td>
        </tr>
        <tr>
          <td id="L4432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4432"></td>
          <td id="LC4432" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_GT</td>
        </tr>
        <tr>
          <td id="L4433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4433"></td>
          <td id="LC4433" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_LE</td>
        </tr>
        <tr>
          <td id="L4434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4434"></td>
          <td id="LC4434" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_GE</td>
        </tr>
        <tr>
          <td id="L4435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4435"></td>
          <td id="LC4435" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_BOUNDS</td>
        </tr>
        <tr>
          <td id="L4436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4436"></td>
          <td id="LC4436" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_NOTNULL</td>
        </tr>
        <tr>
          <td id="L4437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4437"></td>
          <td id="LC4437" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_STRCASEEQ</td>
        </tr>
        <tr>
          <td id="L4438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4438"></td>
          <td id="LC4438" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CCHECK_STRCASENE</td>
        </tr>
        <tr>
          <td id="L4439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4439"></td>
          <td id="LC4439" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK</td>
        </tr>
        <tr>
          <td id="L4440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4440"></td>
          <td id="LC4440" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> PCHECK</td>
        </tr>
        <tr>
          <td id="L4441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4441"></td>
          <td id="LC4441" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_EQ</td>
        </tr>
        <tr>
          <td id="L4442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4442"></td>
          <td id="LC4442" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_NE</td>
        </tr>
        <tr>
          <td id="L4443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4443"></td>
          <td id="LC4443" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_LT</td>
        </tr>
        <tr>
          <td id="L4444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4444"></td>
          <td id="LC4444" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_GT</td>
        </tr>
        <tr>
          <td id="L4445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4445"></td>
          <td id="LC4445" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_LE</td>
        </tr>
        <tr>
          <td id="L4446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4446"></td>
          <td id="LC4446" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_GE</td>
        </tr>
        <tr>
          <td id="L4447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4447"></td>
          <td id="LC4447" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_BOUNDS</td>
        </tr>
        <tr>
          <td id="L4448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4448"></td>
          <td id="LC4448" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_NOTNULL</td>
        </tr>
        <tr>
          <td id="L4449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4449"></td>
          <td id="LC4449" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_STRCASEEQ</td>
        </tr>
        <tr>
          <td id="L4450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4450"></td>
          <td id="LC4450" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> CHECK_STRCASENE</td>
        </tr>
        <tr>
          <td id="L4451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4451"></td>
          <td id="LC4451" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK</span>(condition, ...) CLOG_IF(!(condition), FATAL, __VA_ARGS__) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Check failed: [<span class="pl-pds">&quot;</span></span> &lt;&lt; #condition &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] <span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L4452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4452"></td>
          <td id="LC4452" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CPCHECK</span>(condition, ...) CPLOG_IF(!(condition), FATAL, __VA_ARGS__) &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Check failed: [<span class="pl-pds">&quot;</span></span> &lt;&lt; #condition &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] <span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L4453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4453"></td>
          <td id="LC4453" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK</span>(<span class="pl-v">condition</span>) CCHECK(condition, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4454"></td>
          <td id="LC4454" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">PCHECK</span>(<span class="pl-v">condition</span>) CPCHECK(condition, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4455"></td>
          <td id="LC4455" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_EQ</span>(a, b, ...) CCHECK(a == b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4456"></td>
          <td id="LC4456" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_NE</span>(a, b, ...) CCHECK(a != b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4457"></td>
          <td id="LC4457" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_LT</span>(a, b, ...) CCHECK(a &lt; b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4458"></td>
          <td id="LC4458" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_GT</span>(a, b, ...) CCHECK(a &gt; b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4459"></td>
          <td id="LC4459" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_LE</span>(a, b, ...) CCHECK(a &lt;= b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4460"></td>
          <td id="LC4460" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_GE</span>(a, b, ...) CCHECK(a &gt;= b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4461"></td>
          <td id="LC4461" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_BOUNDS</span>(val, min, max, ...) CCHECK(val &gt;= min &amp;&amp; val &lt;= max, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4462"></td>
          <td id="LC4462" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_EQ</span>(<span class="pl-v">a, b</span>) CCHECK_EQ(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4463"></td>
          <td id="LC4463" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_NE</span>(<span class="pl-v">a, b</span>) CCHECK_NE(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4464"></td>
          <td id="LC4464" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_LT</span>(<span class="pl-v">a, b</span>) CCHECK_LT(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4465"></td>
          <td id="LC4465" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_GT</span>(<span class="pl-v">a, b</span>) CCHECK_GT(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4466"></td>
          <td id="LC4466" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_LE</span>(<span class="pl-v">a, b</span>) CCHECK_LE(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4467"></td>
          <td id="LC4467" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_GE</span>(<span class="pl-v">a, b</span>) CCHECK_GE(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4468"></td>
          <td id="LC4468" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_BOUNDS</span>(<span class="pl-v">val, min, max</span>) CCHECK_BOUNDS(val, min, max, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4469"></td>
          <td id="LC4469" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_NOTNULL</span>(ptr, ...) CCHECK((ptr) != <span class="pl-c1">nullptr</span>, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4470"></td>
          <td id="LC4470" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_STREQ</span>(str1, str2, ...) CLOG_IF(!el::base::utils::Str::cStringEq(str1, str2), FATAL, __VA_ARGS__) \</td>
        </tr>
        <tr>
          <td id="L4471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4471"></td>
          <td id="LC4471" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Check failed: [<span class="pl-pds">&quot;</span></span> &lt;&lt; #str1 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> == <span class="pl-pds">&quot;</span></span> &lt;&lt; #str2 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] <span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L4472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4472"></td>
          <td id="LC4472" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_STRNE</span>(str1, str2, ...) CLOG_IF(el::base::utils::Str::cStringEq(str1, str2), FATAL, __VA_ARGS__) \</td>
        </tr>
        <tr>
          <td id="L4473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4473"></td>
          <td id="LC4473" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Check failed: [<span class="pl-pds">&quot;</span></span> &lt;&lt; #str1 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> != <span class="pl-pds">&quot;</span></span> &lt;&lt; #str2 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] <span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L4474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4474"></td>
          <td id="LC4474" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_STRCASEEQ</span>(str1, str2, ...) CLOG_IF(!el::base::utils::Str::cStringCaseEq(str1, str2), FATAL, __VA_ARGS__) \</td>
        </tr>
        <tr>
          <td id="L4475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4475"></td>
          <td id="LC4475" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Check failed: [<span class="pl-pds">&quot;</span></span> &lt;&lt; #str1 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> == <span class="pl-pds">&quot;</span></span> &lt;&lt; #str2 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] <span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L4476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4476"></td>
          <td id="LC4476" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CCHECK_STRCASENE</span>(str1, str2, ...) CLOG_IF(el::base::utils::Str::cStringCaseEq(str1, str2), FATAL, __VA_ARGS__) \</td>
        </tr>
        <tr>
          <td id="L4477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4477"></td>
          <td id="LC4477" class="blob-code blob-code-inner js-file-line">&lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>Check failed: [<span class="pl-pds">&quot;</span></span> &lt;&lt; #str1 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span> != <span class="pl-pds">&quot;</span></span> &lt;&lt; #str2 &lt;&lt; <span class="pl-s"><span class="pl-pds">&quot;</span>] <span class="pl-pds">&quot;</span></span></td>
        </tr>
        <tr>
          <td id="L4478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4478"></td>
          <td id="LC4478" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_NOTNULL</span>(<span class="pl-v">ptr</span>) CCHECK_NOTNULL((ptr), ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4479"></td>
          <td id="LC4479" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_STREQ</span>(<span class="pl-v">str1, str2</span>) CCHECK_STREQ(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4480"></td>
          <td id="LC4480" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_STRNE</span>(<span class="pl-v">str1, str2</span>) CCHECK_STRNE(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4481"></td>
          <td id="LC4481" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_STRCASEEQ</span>(<span class="pl-v">str1, str2</span>) CCHECK_STRCASEEQ(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4482"></td>
          <td id="LC4482" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">CHECK_STRCASENE</span>(<span class="pl-v">str1, str2</span>) CCHECK_STRCASENE(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4483"></td>
          <td id="LC4483" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK</td>
        </tr>
        <tr>
          <td id="L4484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4484"></td>
          <td id="LC4484" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_EQ</td>
        </tr>
        <tr>
          <td id="L4485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4485"></td>
          <td id="LC4485" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_NE</td>
        </tr>
        <tr>
          <td id="L4486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4486"></td>
          <td id="LC4486" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_LT</td>
        </tr>
        <tr>
          <td id="L4487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4487"></td>
          <td id="LC4487" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_GT</td>
        </tr>
        <tr>
          <td id="L4488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4488"></td>
          <td id="LC4488" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_LE</td>
        </tr>
        <tr>
          <td id="L4489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4489"></td>
          <td id="LC4489" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_GE</td>
        </tr>
        <tr>
          <td id="L4490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4490"></td>
          <td id="LC4490" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_BOUNDS</td>
        </tr>
        <tr>
          <td id="L4491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4491"></td>
          <td id="LC4491" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_NOTNULL</td>
        </tr>
        <tr>
          <td id="L4492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4492"></td>
          <td id="LC4492" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_STRCASEEQ</td>
        </tr>
        <tr>
          <td id="L4493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4493"></td>
          <td id="LC4493" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCCHECK_STRCASENE</td>
        </tr>
        <tr>
          <td id="L4494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4494"></td>
          <td id="LC4494" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCPCHECK</td>
        </tr>
        <tr>
          <td id="L4495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4495"></td>
          <td id="LC4495" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK</td>
        </tr>
        <tr>
          <td id="L4496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4496"></td>
          <td id="LC4496" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_EQ</td>
        </tr>
        <tr>
          <td id="L4497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4497"></td>
          <td id="LC4497" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_NE</td>
        </tr>
        <tr>
          <td id="L4498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4498"></td>
          <td id="LC4498" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_LT</td>
        </tr>
        <tr>
          <td id="L4499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4499"></td>
          <td id="LC4499" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_GT</td>
        </tr>
        <tr>
          <td id="L4500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4500"></td>
          <td id="LC4500" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_LE</td>
        </tr>
        <tr>
          <td id="L4501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4501"></td>
          <td id="LC4501" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_GE</td>
        </tr>
        <tr>
          <td id="L4502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4502"></td>
          <td id="LC4502" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_BOUNDS_</td>
        </tr>
        <tr>
          <td id="L4503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4503"></td>
          <td id="LC4503" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_NOTNULL</td>
        </tr>
        <tr>
          <td id="L4504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4504"></td>
          <td id="LC4504" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_STRCASEEQ</td>
        </tr>
        <tr>
          <td id="L4505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4505"></td>
          <td id="LC4505" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DCHECK_STRCASENE</td>
        </tr>
        <tr>
          <td id="L4506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4506"></td>
          <td id="LC4506" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">undef</span> DPCHECK</td>
        </tr>
        <tr>
          <td id="L4507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4507"></td>
          <td id="LC4507" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK</span>(condition, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK(condition, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4508"></td>
          <td id="LC4508" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_EQ</span>(a, b, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_EQ(a, b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4509"></td>
          <td id="LC4509" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_NE</span>(a, b, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_NE(a, b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4510"></td>
          <td id="LC4510" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_LT</span>(a, b, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_LT(a, b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4511"></td>
          <td id="LC4511" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_GT</span>(a, b, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_GT(a, b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4512"></td>
          <td id="LC4512" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_LE</span>(a, b, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_LE(a, b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4513"></td>
          <td id="LC4513" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_GE</span>(a, b, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_GE(a, b, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4514"></td>
          <td id="LC4514" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_BOUNDS</span>(val, min, max, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_BOUNDS(val, min, max, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4515"></td>
          <td id="LC4515" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_NOTNULL</span>(ptr, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_NOTNULL((ptr), __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4516"></td>
          <td id="LC4516" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_STREQ</span>(str1, str2, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_STREQ(str1, str2, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4517"></td>
          <td id="LC4517" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_STRNE</span>(str1, str2, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_STRNE(str1, str2, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4518"></td>
          <td id="LC4518" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_STRCASEEQ</span>(str1, str2, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_STRCASEEQ(str1, str2, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4519"></td>
          <td id="LC4519" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCCHECK_STRCASENE</span>(str1, str2, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CCHECK_STRCASENE(str1, str2, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4520"></td>
          <td id="LC4520" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCPCHECK</span>(condition, ...) <span class="pl-k">if</span> (ELPP_DEBUG_LOG) CPCHECK(condition, __VA_ARGS__)</td>
        </tr>
        <tr>
          <td id="L4521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4521"></td>
          <td id="LC4521" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK</span>(<span class="pl-v">condition</span>) DCCHECK(condition, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4522"></td>
          <td id="LC4522" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_EQ</span>(<span class="pl-v">a, b</span>) DCCHECK_EQ(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4523"></td>
          <td id="LC4523" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_NE</span>(<span class="pl-v">a, b</span>) DCCHECK_NE(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4524"></td>
          <td id="LC4524" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_LT</span>(<span class="pl-v">a, b</span>) DCCHECK_LT(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4525"></td>
          <td id="LC4525" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_GT</span>(<span class="pl-v">a, b</span>) DCCHECK_GT(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4526"></td>
          <td id="LC4526" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_LE</span>(<span class="pl-v">a, b</span>) DCCHECK_LE(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4527"></td>
          <td id="LC4527" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_GE</span>(<span class="pl-v">a, b</span>) DCCHECK_GE(a, b, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4528"></td>
          <td id="LC4528" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_BOUNDS</span>(<span class="pl-v">val, min, max</span>) DCCHECK_BOUNDS(val, min, max, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4529"></td>
          <td id="LC4529" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_NOTNULL</span>(<span class="pl-v">ptr</span>) DCCHECK_NOTNULL((ptr), ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4530"></td>
          <td id="LC4530" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_STREQ</span>(<span class="pl-v">str1, str2</span>) DCCHECK_STREQ(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4531"></td>
          <td id="LC4531" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_STRNE</span>(<span class="pl-v">str1, str2</span>) DCCHECK_STRNE(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4532"></td>
          <td id="LC4532" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_STRCASEEQ</span>(<span class="pl-v">str1, str2</span>) DCCHECK_STRCASEEQ(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4533"></td>
          <td id="LC4533" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DCHECK_STRCASENE</span>(<span class="pl-v">str1, str2</span>) DCCHECK_STRCASENE(str1, str2, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4534"></td>
          <td id="LC4534" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">DPCHECK</span>(<span class="pl-v">condition</span>) DCPCHECK(condition, ELPP_CURR_FILE_LOGGER_ID)</td>
        </tr>
        <tr>
          <td id="L4535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4535"></td>
          <td id="LC4535" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_NO_CHECK_MACROS)</span></td>
        </tr>
        <tr>
          <td id="L4536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4536"></td>
          <td id="LC4536" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_DISABLE_DEFAULT_CRASH_HANDLING)</td>
        </tr>
        <tr>
          <td id="L4537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4537"></td>
          <td id="LC4537" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_USE_DEF_CRASH_HANDLER</span> <span class="pl-c1">false</span></td>
        </tr>
        <tr>
          <td id="L4538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4538"></td>
          <td id="LC4538" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4539"></td>
          <td id="LC4539" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">ELPP_USE_DEF_CRASH_HANDLER</span> <span class="pl-c1">true</span></td>
        </tr>
        <tr>
          <td id="L4540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4540"></td>
          <td id="LC4540" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_DISABLE_DEFAULT_CRASH_HANDLING)</span></td>
        </tr>
        <tr>
          <td id="L4541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4541"></td>
          <td id="LC4541" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_CRASH_HANDLER_INIT</span></td>
        </tr>
        <tr>
          <td id="L4542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4542"></td>
          <td id="LC4542" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">ELPP_INIT_EASYLOGGINGPP</span>(<span class="pl-v">val</span>) \</td>
        </tr>
        <tr>
          <td id="L4543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4543"></td>
          <td id="LC4543" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">el</span> { \</td>
        </tr>
        <tr>
          <td id="L4544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4544"></td>
          <td id="LC4544" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> { \</td>
        </tr>
        <tr>
          <td id="L4545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4545"></td>
          <td id="LC4545" class="blob-code blob-code-inner js-file-line">el::base::type::StoragePointer <span class="pl-en">elStorage</span>(val); \</td>
        </tr>
        <tr>
          <td id="L4546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4546"></td>
          <td id="LC4546" class="blob-code blob-code-inner js-file-line">} \</td>
        </tr>
        <tr>
          <td id="L4547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4547"></td>
          <td id="LC4547" class="blob-code blob-code-inner js-file-line">el::base::debug::CrashHandler <span class="pl-en">elCrashHandler</span>(ELPP_USE_DEF_CRASH_HANDLER); \</td>
        </tr>
        <tr>
          <td id="L4548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4548"></td>
          <td id="LC4548" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4549"></td>
          <td id="LC4549" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4550"></td>
          <td id="LC4550" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> ELPP_ASYNC_LOGGING</td>
        </tr>
        <tr>
          <td id="L4551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4551"></td>
          <td id="LC4551" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">INITIALIZE_EASYLOGGINGPP</span> <span class="pl-en">ELPP_INIT_EASYLOGGINGPP</span>(<span class="pl-k">new</span> el::base::Storage(el::LogBuilderPtr(<span class="pl-k">new</span> el::base::DefaultLogBuilder()),\</td>
        </tr>
        <tr>
          <td id="L4552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4552"></td>
          <td id="LC4552" class="blob-code blob-code-inner js-file-line">new el::base::AsyncDispatchWorker()))</td>
        </tr>
        <tr>
          <td id="L4553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4553"></td>
          <td id="LC4553" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4554"></td>
          <td id="LC4554" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">INITIALIZE_EASYLOGGINGPP</span> <span class="pl-en">ELPP_INIT_EASYLOGGINGPP</span>(<span class="pl-k">new</span> el::base::Storage(el::LogBuilderPtr(<span class="pl-k">new</span> el::base::DefaultLogBuilder())))</td>
        </tr>
        <tr>
          <td id="L4555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4555"></td>
          <td id="LC4555" class="blob-code blob-code-inner js-file-line">#endif  <span class="pl-c"><span class="pl-c">//</span> ELPP_ASYNC_LOGGING</span></td>
        </tr>
        <tr>
          <td id="L4556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4556"></td>
          <td id="LC4556" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">INITIALIZE_NULL_EASYLOGGINGPP</span> \</td>
        </tr>
        <tr>
          <td id="L4557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4557"></td>
          <td id="LC4557" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">el</span> {\</td>
        </tr>
        <tr>
          <td id="L4558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4558"></td>
          <td id="LC4558" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {\</td>
        </tr>
        <tr>
          <td id="L4559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4559"></td>
          <td id="LC4559" class="blob-code blob-code-inner js-file-line">el::base::type::StoragePointer elStorage;\</td>
        </tr>
        <tr>
          <td id="L4560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4560"></td>
          <td id="LC4560" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L4561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4561"></td>
          <td id="LC4561" class="blob-code blob-code-inner js-file-line">el::base::debug::CrashHandler <span class="pl-en">elCrashHandler</span>(ELPP_USE_DEF_CRASH_HANDLER);\</td>
        </tr>
        <tr>
          <td id="L4562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4562"></td>
          <td id="LC4562" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4563"></td>
          <td id="LC4563" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">define</span> <span class="pl-en">SHARE_EASYLOGGINGPP</span>(<span class="pl-v">initializedStorage</span>)\</td>
        </tr>
        <tr>
          <td id="L4564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4564"></td>
          <td id="LC4564" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">el</span> {\</td>
        </tr>
        <tr>
          <td id="L4565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4565"></td>
          <td id="LC4565" class="blob-code blob-code-inner js-file-line"><span class="pl-k">namespace</span> <span class="pl-en">base</span> {\</td>
        </tr>
        <tr>
          <td id="L4566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4566"></td>
          <td id="LC4566" class="blob-code blob-code-inner js-file-line">el::base::type::StoragePointer <span class="pl-en">elStorage</span>(initializedStorage);\</td>
        </tr>
        <tr>
          <td id="L4567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4567"></td>
          <td id="LC4567" class="blob-code blob-code-inner js-file-line">}\</td>
        </tr>
        <tr>
          <td id="L4568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4568"></td>
          <td id="LC4568" class="blob-code blob-code-inner js-file-line">el::base::debug::CrashHandler <span class="pl-en">elCrashHandler</span>(ELPP_USE_DEF_CRASH_HANDLER);\</td>
        </tr>
        <tr>
          <td id="L4569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4569"></td>
          <td id="LC4569" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4570"></td>
          <td id="LC4570" class="blob-code blob-code-inner js-file-line">
</td>
        </tr>
        <tr>
          <td id="L4571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4571"></td>
          <td id="LC4571" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">if</span> defined(ELPP_UNICODE)</td>
        </tr>
        <tr>
          <td id="L4572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4572"></td>
          <td id="LC4572" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">START_EASYLOGGINGPP</span>(<span class="pl-v">argc, argv</span>) el::Helpers::setArgs(argc, argv); std::locale::global(std::locale(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>))</td>
        </tr>
        <tr>
          <td id="L4573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4573"></td>
          <td id="LC4573" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">else</span></td>
        </tr>
        <tr>
          <td id="L4574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4574"></td>
          <td id="LC4574" class="blob-code blob-code-inner js-file-line">#  <span class="pl-k">define</span> <span class="pl-en">START_EASYLOGGINGPP</span>(<span class="pl-v">argc, argv</span>) el::Helpers::setArgs(argc, argv)</td>
        </tr>
        <tr>
          <td id="L4575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4575"></td>
          <td id="LC4575" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span>  <span class="pl-c"><span class="pl-c">//</span> defined(ELPP_UNICODE)</span></td>
        </tr>
        <tr>
          <td id="L4576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4576"></td>
          <td id="LC4576" class="blob-code blob-code-inner js-file-line">#<span class="pl-k">endif</span> <span class="pl-c"><span class="pl-c">//</span> EASYLOGGINGPP_H</span></td>
        </tr>
  </table>
</div>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 color-bg-default border color-border-default rounded-2" aria-label="Inline file action toolbar">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
    </summary>
    <details-menu>

      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se ml-2 mt-2"
      style="width:185px"
      >
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" aria-label="Copy lines">
            Copy lines
          </clipboard-copy>
        </li>
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" aria-label="Copy permalink">
            Copy permalink
          </clipboard-copy>
        </li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/amrayn/easyloggingpp/blame/8489989bb26c6371df103f6cbced3fbee1bc3c2f/src/easylogging%2B%2B.h">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/amrayn/easyloggingpp/issues/new">Reference in new issue</a></li>
      </ul>
    </details-menu>
  </details>

    </div>

    </div>


  

  <details class="details-reset details-overlay details-overlay-dark" id="jumpto-line-details-dialog">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" data-turbo="false" action="" accept-charset="UTF-8" method="get">
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
        <button data-close-dialog="" type="submit" data-view-component="true" class="btn">  Go
  
</button>
</form>    </details-dialog>
  </details>


</div>

  </div>


</div>

    </main>
  </div>

  </div>

          <footer class="footer width-full container-xl p-responsive" role="contentinfo">


  <div class="position-relative d-flex flex-items-center pb-2 f6 color-fg-muted border-top color-border-muted flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap mt-6 pt-6">
    <ul class="list-style-none d-flex flex-wrap col-0 col-lg-2 flex-justify-start flex-lg-justify-between mb-2 mb-lg-0">
      <li class="mt-2 mt-lg-0 d-flex flex-items-center">
        <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-2" href="https://github.com">
          <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-mark-github">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>        <span>
        &copy; 2022 GitHub, Inc.
        </span>
      </li>
    </ul>
    <ul class="list-style-none d-flex flex-wrap col-12 col-lg-8 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0">
        <li class="mr-3 mr-lg-0"><a href="https://docs.github.com/en/github/site-policy/github-terms-of-service" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}">Terms</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://docs.github.com/en/github/site-policy/github-privacy-statement" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}">Privacy</a></li>
        <li class="mr-3 mr-lg-0"><a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}" href="https://github.com/security">Security</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://www.githubstatus.com/" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}">Status</a></li>
        <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to help, text:Docs" href="https://docs.github.com">Docs</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://support.github.com?tags=dotcom-footer" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}">Contact GitHub</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Pricing&quot;,&quot;label&quot;:&quot;text:Pricing&quot;}">Pricing</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://docs.github.com" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to api&quot;,&quot;label&quot;:&quot;text:api&quot;}">API</a></li>
      <li class="mr-3 mr-lg-0"><a href="https://services.github.com" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to training&quot;,&quot;label&quot;:&quot;text:training&quot;}">Training</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to blog&quot;,&quot;label&quot;:&quot;text:blog&quot;}">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>
    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 color-fg-muted"></span>
  </div>
</footer>




  <div id="ajax-error-message" class="ajax-error-message flash flash-error" hidden>
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
    </button>
    You can’t perform that action at this time.
  </div>

  <div class="js-stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large" style="width:360px;">
  </div>
</div>

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




  </body>
</html>

